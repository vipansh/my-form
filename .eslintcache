[{"D:\\Projects\\google-form\\src\\index.js":"1","D:\\Projects\\google-form\\src\\App.js":"2","D:\\Projects\\google-form\\src\\serviceWorker.js":"3","D:\\Projects\\google-form\\src\\pages\\LogIn.js":"4","D:\\Projects\\google-form\\src\\pages\\HomePage.js":"5","D:\\Projects\\google-form\\src\\componants\\Header.js":"6","D:\\Projects\\google-form\\src\\componants\\DocsHomescreen.js":"7","D:\\Projects\\google-form\\src\\componants\\FreeTamplate.js":"8","D:\\Projects\\google-form\\src\\componants\\RecentForms.js":"9","D:\\Projects\\google-form\\src\\componants\\OldFormslist.js":"10","D:\\Projects\\google-form\\src\\pages\\FormPage.js":"11","D:\\Projects\\google-form\\src\\componants\\Forms\\FormHeader.js":"12","D:\\Projects\\google-form\\src\\componants\\Forms\\FormBody.js":"13","D:\\Projects\\google-form\\src\\componants\\Forms\\QuestionBox.js":"14","D:\\Projects\\google-form\\src\\componants\\Forms\\ShortAnswer.js":"15","D:\\Projects\\google-form\\src\\componants\\Forms\\MultipleChoice.js":"16","D:\\Projects\\google-form\\src\\componants\\Forms\\CheckBoxes.js":"17","D:\\Projects\\google-form\\src\\componants\\Forms\\FormToolBar.js":"18","D:\\Projects\\google-form\\src\\Context\\FormContext.js":"19","D:\\Projects\\google-form\\src\\componants\\Forms\\DeleteQuestionBox.js":"20","D:\\Projects\\google-form\\src\\componants\\Forms\\NotActiveQuestion.js":"21","D:\\Projects\\google-form\\src\\routers\\AllRouters.js":"22","D:\\Projects\\google-form\\src\\firebase.js":"23","D:\\Projects\\google-form\\src\\Context\\AuthContext.js":"24","D:\\Projects\\google-form\\src\\routers\\PrivateRoute.js":"25","D:\\Projects\\google-form\\src\\componants\\Forms\\SavePopUp.js":"26","D:\\Projects\\google-form\\src\\pages\\SubmittedFormPage.js":"27","D:\\Projects\\google-form\\src\\componants\\SubmittedForm\\FormHome.js":"28","D:\\Projects\\google-form\\src\\componants\\SubmittedForm\\SubmittedFormHeader.js":"29","D:\\Projects\\google-form\\src\\componants\\SubmittedForm\\SubmittedFormQuestionBox.js":"30","D:\\Projects\\google-form\\src\\componants\\SubmittedForm\\SubmittedFormTitle.js":"31","D:\\Projects\\google-form\\src\\pages\\SharedFormPage.js":"32","D:\\Projects\\google-form\\src\\componants\\SharedForm\\SharedForm.js":"33","D:\\Projects\\google-form\\src\\componants\\SharedForm\\SharedFormQuestionBox.js":"34","D:\\Projects\\google-form\\src\\componants\\SharedForm\\SubmitedForm.js":"35","D:\\Projects\\google-form\\src\\componants\\SubmittedForm\\Responses.js":"36","D:\\Projects\\google-form\\src\\componants\\SubmittedForm\\ResponsesBox.js":"37"},{"size":464,"mtime":1614839260056,"results":"38","hashOfConfig":"39"},{"size":249,"mtime":1615138926400,"results":"40","hashOfConfig":"39"},{"size":5086,"mtime":1614839260056,"results":"41","hashOfConfig":"39"},{"size":9498,"mtime":1616059527178,"results":"42","hashOfConfig":"39"},{"size":308,"mtime":1615480126537,"results":"43","hashOfConfig":"39"},{"size":1698,"mtime":1616083877908,"results":"44","hashOfConfig":"39"},{"size":618,"mtime":1616080092607,"results":"45","hashOfConfig":"39"},{"size":2851,"mtime":1616082599189,"results":"46","hashOfConfig":"39"},{"size":2511,"mtime":1616082580024,"results":"47","hashOfConfig":"39"},{"size":1306,"mtime":1616083715644,"results":"48","hashOfConfig":"39"},{"size":2053,"mtime":1616084908824,"results":"49","hashOfConfig":"39"},{"size":3855,"mtime":1616084520044,"results":"50","hashOfConfig":"39"},{"size":1475,"mtime":1616084789266,"results":"51","hashOfConfig":"39"},{"size":6327,"mtime":1616085383374,"results":"52","hashOfConfig":"39"},{"size":1070,"mtime":1615134587521,"results":"53","hashOfConfig":"39"},{"size":3503,"mtime":1615473625541,"results":"54","hashOfConfig":"39"},{"size":3524,"mtime":1615878580911,"results":"55","hashOfConfig":"39"},{"size":3905,"mtime":1616085585565,"results":"56","hashOfConfig":"39"},{"size":526,"mtime":1615880078091,"results":"57","hashOfConfig":"39"},{"size":3582,"mtime":1615874791584,"results":"58","hashOfConfig":"39"},{"size":3066,"mtime":1615476505072,"results":"59","hashOfConfig":"39"},{"size":1221,"mtime":1615911833257,"results":"60","hashOfConfig":"39"},{"size":988,"mtime":1616058534931,"results":"61","hashOfConfig":"39"},{"size":1169,"mtime":1615473049123,"results":"62","hashOfConfig":"39"},{"size":497,"mtime":1615479692008,"results":"63","hashOfConfig":"39"},{"size":2357,"mtime":1615533030252,"results":"64","hashOfConfig":"39"},{"size":1288,"mtime":1616050129821,"results":"65","hashOfConfig":"39"},{"size":1564,"mtime":1616091194198,"results":"66","hashOfConfig":"39"},{"size":6812,"mtime":1616096580885,"results":"67","hashOfConfig":"39"},{"size":1767,"mtime":1616093019907,"results":"68","hashOfConfig":"39"},{"size":812,"mtime":1616092948964,"results":"69","hashOfConfig":"39"},{"size":1337,"mtime":1616050091121,"results":"70","hashOfConfig":"39"},{"size":2457,"mtime":1615961777153,"results":"71","hashOfConfig":"39"},{"size":2596,"mtime":1615955906246,"results":"72","hashOfConfig":"39"},{"size":605,"mtime":1615917903553,"results":"73","hashOfConfig":"39"},{"size":2214,"mtime":1616050896460,"results":"74","hashOfConfig":"39"},{"size":1803,"mtime":1616092981126,"results":"75","hashOfConfig":"39"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},"1qcl4f4",{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"91","messages":"92","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"95","messages":"96","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"97","usedDeprecatedRules":"78"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"102","messages":"103","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"104","messages":"105","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"106","messages":"107","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"108","usedDeprecatedRules":"78"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"111","usedDeprecatedRules":"78"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"114","usedDeprecatedRules":"78"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"117","messages":"118","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"121","usedDeprecatedRules":"78"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"124","usedDeprecatedRules":"78"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"131","messages":"132","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"133","usedDeprecatedRules":"78"},{"filePath":"134","messages":"135","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"136","messages":"137","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"138","usedDeprecatedRules":"78"},{"filePath":"139","messages":"140","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"141","messages":"142","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"143","messages":"144","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"145","usedDeprecatedRules":"78"},{"filePath":"146","messages":"147","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"148","messages":"149","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"150","usedDeprecatedRules":"78"},{"filePath":"151","messages":"152","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"153","usedDeprecatedRules":"78"},{"filePath":"154","messages":"155","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"156","usedDeprecatedRules":"78"},{"filePath":"157","messages":"158","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"159","messages":"160","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"161","usedDeprecatedRules":"78"},{"filePath":"162","messages":"163","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"D:\\Projects\\google-form\\src\\index.js",[],["164","165"],"D:\\Projects\\google-form\\src\\App.js",[],"D:\\Projects\\google-form\\src\\serviceWorker.js",[],"D:\\Projects\\google-form\\src\\pages\\LogIn.js",["166","167","168","169","170","171"],"D:\\Projects\\google-form\\src\\pages\\HomePage.js",[],"D:\\Projects\\google-form\\src\\componants\\Header.js",[],"D:\\Projects\\google-form\\src\\componants\\DocsHomescreen.js",[],"D:\\Projects\\google-form\\src\\componants\\FreeTamplate.js",["172","173"],"D:\\Projects\\google-form\\src\\componants\\RecentForms.js",[],"D:\\Projects\\google-form\\src\\componants\\OldFormslist.js",["174","175"],"import React, { useState } from 'react'\r\nimport { Link } from 'react-router-dom'\r\n\r\nexport const OldFormslist = ({ data }) => {\r\n    console.log(data)\r\n    const [isOpen, setIsOpen] = useState(false)\r\n\r\n    return (\r\n        <Link to={`/form/a/${data.uniqueID}`} className=\"block h-42 w-42   border-2 border-gray-700  sm:border-gray-400 hover:border-blue-400 hover:text-blue-700  hover:font-semibold  rounded\">\r\n            <div className=\"  flex flex-col justify-evenly \">\r\n                <div className=\" m-2  overflow-hidden w-auto\">\r\n\r\n                    <img src={process.env.PUBLIC_URL + '/ques.jpg'} alt=\"a\" class=\" rounded-lg\" />\r\n\r\n                </div>\r\n                <div className=\"px p-2  \">\r\n                    <svg className=\"text-white  w-4 h-4 rounded-2xl bg-purple-600 inline\" xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\r\n                        <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M9 17v-2m3 2v-4m3 4v-6m2 10H7a2 2 0 01-2-2V5a2 2 0 012-2h5.586a1 1 0 01.707.293l5.414 5.414a1 1 0 01.293.707V19a2 2 0 01-2 2z\" />\r\n                    </svg>  <span class=\"font-semibold  inline\">{data.title ? data.title : \"Untitle Form\"}</span>\r\n                </div>\r\n            </div>\r\n        </Link >\r\n\r\n    )\r\n}\r\n","D:\\Projects\\google-form\\src\\pages\\FormPage.js",["176","177","178","179"],"D:\\Projects\\google-form\\src\\componants\\Forms\\FormHeader.js",[],"D:\\Projects\\google-form\\src\\componants\\Forms\\FormBody.js",["180","181"],"D:\\Projects\\google-form\\src\\componants\\Forms\\QuestionBox.js",["182","183","184","185","186","187"],"D:\\Projects\\google-form\\src\\componants\\Forms\\ShortAnswer.js",["188"],"import React, { useState, useEffect } from 'react'\r\n\r\n\r\n\r\n\r\nexport const ShortAnswer = ({ value, id, data }) => {\r\n    const { allquestions, setAllquestions } = value\r\n\r\n\r\n    const [questionArray, setquestionArray] = useState(data.options)\r\n\r\n    useEffect(() => {\r\n        const updatedData = allquestions.map((data, i) => id === i ?\r\n            Object.assign(data, { options: questionArray }) : data)\r\n        setAllquestions(updatedData)\r\n\r\n    }, [questionArray])\r\n\r\n\r\n\r\n    function handelChange(e, index) {\r\n\r\n\r\n\r\n        const values = [...questionArray]\r\n        values[index].option = e.target.value\r\n        setquestionArray(values)\r\n\r\n\r\n\r\n    }\r\n\r\n    return (\r\n        <div className=\"mt-6\">\r\n\r\n\r\n\r\n            <input type=\"text\" class=\"inline mx-4  outline-none border border-gray-400 rounded py-1 px-4 w-2/3 bg-white text-sm text-gray-700 placeholder-gray-400 focus:outline-none focus:shadow-outline\" value={allquestions.option} placeholder=\"placeholder\" onChange={(e) => { handelChange(e, id) }} />\r\n\r\n\r\n\r\n\r\n        </div >\r\n    )\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n","D:\\Projects\\google-form\\src\\componants\\Forms\\MultipleChoice.js",["189","190"],"import React, { useState, useEffect } from 'react'\r\n\r\n\r\n\r\n\r\nexport const MultipleChoice = ({ value, id, data }) => {\r\n    const { allquestions, setAllquestions } = value\r\n\r\n\r\n    const [questionArray, setquestionArray] = useState(data.options)\r\n\r\n    useEffect(() => {\r\n        const updatedData = allquestions.map((data, i) => id === i ?\r\n            Object.assign(data, { options: questionArray }) : data)\r\n        setAllquestions(updatedData)\r\n\r\n    }, [questionArray])\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n    function handelAdd() {\r\n        let values = [...questionArray]\r\n        values.push({ option: null })\r\n        setquestionArray(values)\r\n    }\r\n\r\n    function handelRemove(a) {\r\n\r\n        let values = [...questionArray]\r\n        values.splice(a, 1)\r\n        setquestionArray(values)\r\n    }\r\n\r\n    function handelChange(e, index) {\r\n\r\n\r\n\r\n        const values = [...questionArray]\r\n        values[index].option = e.target.value\r\n        setquestionArray(values)\r\n\r\n\r\n\r\n    }\r\n\r\n    return (\r\n        <div className=\"mt-6\">\r\n\r\n\r\n\r\n\r\n            { questionArray.map((all, index) => <Boxes key={index} index={index} handelRemove={handelRemove} handelChange={handelChange} values={{ questionArray, setquestionArray }} allquestions={all} />)}\r\n\r\n\r\n            <div onClick={() => { handelAdd() }} className=\"cursor-pointer mx-8 hover:underline\"><svg className=\"w-8 h-8 inline  \" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 20 20\" fill=\"currentColor\">\r\n                <path fillRule=\"evenodd\" d=\"M10 5a1 1 0 011 1v3h3a1 1 0 110 2h-3v3a1 1 0 11-2 0v-3H6a1 1 0 110-2h3V6a1 1 0 011-1z\" clip-rule=\"evenodd\" />\r\n            </svg>Add Another</div>\r\n        </div >\r\n    )\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nconst Boxes = ({ index, handelRemove, values, handelChange, allquestions }) => {\r\n    const [checkboxValue, setCheckboxValue] = useState(false)\r\n\r\n    const { questionArray, setquestionArray } = values\r\n\r\n\r\n    return (\r\n        <div class=\"p-2 flex w-full justify-between\">\r\n            <label class=\"custom-label p-2 flex w-full\">\r\n                <input type=\"checkbox\" class=\"hidden\" checked={checkboxValue}\r\n                    onChange={() => setCheckboxValue(!checkboxValue)} />\r\n\r\n\r\n                <div className=\"w-6 h-6 border inline-block align-center mx-4 my-auto rounded-lg \">{!checkboxValue ? \"\" : <svg className=\"bg-blue-700 text-white rounded-lg\" xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\r\n                    <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth=\"2\" d=\"M5 13l4 4L19 7\" />\r\n                </svg>}\r\n                </div>\r\n\r\n                <input type=\"text\" class=\"inline  outline-none border border-gray-400 rounded py-1 px-2 w-2/3 bg-white text-sm text-gray-700 placeholder-gray-400 focus:outline-none focus:shadow-outline\" value={allquestions.option} placeholder=\"placeholder\" onChange={(e) => { handelChange(e, index) }} />\r\n            </label>\r\n\r\n\r\n            {questionArray.length === 1 ? \"\" : <div className=\"  align-center mx-4 my-auto rounded-full p-4 hover:bg-gray-200 hover:text-red-600 \"\r\n                onClick={() => { handelRemove(index) }}\r\n            >\r\n                <svg className=\"w-8 text-gray-700 hover:text-red-600 \" xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\r\n                    <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth=\"2\" d=\"M6 18L18 6M6 6l12 12\" />\r\n                </svg>\r\n            </div>}\r\n        </div>\r\n\r\n    )\r\n}\r\n","D:\\Projects\\google-form\\src\\componants\\Forms\\CheckBoxes.js",["191","192"],"import React, { useState, useEffect } from 'react'\r\n\r\n\r\n\r\n\r\nexport const CheckBoxes = ({ value, id, data }) => {\r\n    const { allquestions, setAllquestions } = value\r\n\r\n\r\n    const [questionArray, setquestionArray] = useState(data.options)\r\n\r\n    useEffect(() => {\r\n        const updatedData = allquestions.map((data, i) => id === i ?\r\n            Object.assign(data, { options: questionArray }) : data)\r\n        setAllquestions(updatedData)\r\n\r\n    }, [questionArray])\r\n\r\n    function handelAdd() {\r\n        let values = [...questionArray]\r\n        values.push({ option: null })\r\n        setquestionArray(values)\r\n    }\r\n\r\n    function handelRemove(a) {\r\n\r\n        let values = [...questionArray]\r\n        values.splice(a, 1)\r\n        setquestionArray(values)\r\n    }\r\n\r\n    function handelChange(e, index) {\r\n        const values = [...questionArray]\r\n\r\n        console.log(values, index, id)\r\n        values[index].option = e.target.value\r\n\r\n        setquestionArray(values)\r\n    }\r\n\r\n    return (\r\n        <div className=\"mt-6\">\r\n\r\n\r\n\r\n\r\n            { questionArray.map((all, index) => <Boxes key={index} thisId={index} handelRemove={handelRemove} handelChange={handelChange} values={{ questionArray, setquestionArray }} allquestions={all} />)}\r\n\r\n\r\n            <div onClick={() => { handelAdd() }} className=\"cursor-pointer mx-8 hover:underline\"><svg className=\"w-8 h-8 inline  \" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 20 20\" fill=\"currentColor\">\r\n                <path fillRule=\"evenodd\" d=\"M10 5a1 1 0 011 1v3h3a1 1 0 110 2h-3v3a1 1 0 11-2 0v-3H6a1 1 0 110-2h3V6a1 1 0 011-1z\" clip-rule=\"evenodd\" />\r\n            </svg>Add Another</div>\r\n        </div >\r\n    )\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nconst Boxes = ({ key, thisId, handelRemove, values, handelChange, allquestions }) => {\r\n    const [checkboxValue, setCheckboxValue] = useState(false)\r\n\r\n    const { questionArray, setquestionArray } = values\r\n\r\n\r\n    return (\r\n        <div class=\"p-2 flex w-full justify-between\">\r\n            <label class=\"custom-label p-2 flex w-full\">\r\n                <input type=\"checkbox\" class=\"hidden\" checked={checkboxValue}\r\n                    onChange={() => setCheckboxValue(!checkboxValue)} />\r\n\r\n\r\n                <div className=\"w-6 h-6 border inline-block align-center mx-4 my-auto rounded-lg \">{!checkboxValue ? \"\" : <svg className=\"bg-blue-700 text-white rounded-lg\" xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\r\n                    <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth=\"2\" d=\"M5 13l4 4L19 7\" />\r\n                </svg>}\r\n                </div>\r\n\r\n                <input type=\"text\" class=\"inline  outline-none border border-gray-400 rounded py-1 px-2 w-2/3 bg-white text-sm text-gray-700 placeholder-gray-400 focus:outline-none focus:shadow-outline\" value={allquestions.option} placeholder=\"Options\" onChange={(e) => { handelChange(e, thisId) }} />\r\n            </label>\r\n\r\n\r\n            {questionArray.length === 1 ? \"\" : <div className=\"  align-center mx-4 my-auto rounded-full p-4 hover:bg-gray-200 hover:text-red-600 \"\r\n                onClick={() => { handelRemove(thisId) }}\r\n            >\r\n                <svg className=\"w-8 text-gray-700 hover:text-red-600 \" xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\r\n                    <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth=\"2\" d=\"M6 18L18 6M6 6l12 12\" />\r\n                </svg>\r\n            </div>}\r\n        </div>\r\n\r\n    )\r\n}\r\n","D:\\Projects\\google-form\\src\\componants\\Forms\\FormToolBar.js",["193","194","195"],"D:\\Projects\\google-form\\src\\Context\\FormContext.js",[],"D:\\Projects\\google-form\\src\\componants\\Forms\\DeleteQuestionBox.js",["196","197"],"import React, { useState, useEffect } from 'react'\r\n\r\nexport const DeleteQuestionBox = ({ value, id, data }) => {\r\n\r\n    const { allquestions, setAllquestions } = value\r\n\r\n    const [required, setRequired] = useState(false)\r\n    const [deleteMsg, setdeleteMsg] = useState(\"Delete\")\r\n    useEffect(() => {\r\n        const updatedData = allquestions.map((data, i) => id === i ?\r\n            Object.assign(data, { required: required }) : data)\r\n        setAllquestions(updatedData)\r\n    }, [required])\r\n\r\n    function removeOne() {\r\n        if (allquestions.length !== 1) {\r\n            let values = [...allquestions]\r\n            values.splice(id, 1)\r\n            setAllquestions(values)\r\n        }\r\n        else {\r\n            setdeleteMsg(\"Form Can't be empty\")\r\n            setInterval(() => { setdeleteMsg(\"Delete\") }, 3000)\r\n        }\r\n    }\r\n\r\n    function dublicateOne() {\r\n        const tamplet = {\r\n            question: data.question,\r\n            questiontype: data.questiontype,\r\n            required: data.required,\r\n            options: [...data.options]\r\n        }\r\n        let values = [...allquestions, tamplet]\r\n\r\n        setAllquestions(allquestions => {\r\n            return [...allquestions, tamplet]\r\n        })\r\n        // setIdOfActiveQue(allquestions.length)\r\n    }\r\n\r\n\r\n    return (\r\n        <div className=\"flex justify-end\">\r\n            <div class=\"flex items-center cursor-pointer rounded-md hover:text-gray-900\" onClick={() => { dublicateOne() }}>\r\n                <span><svg class=\" text-gray-700 hover:text-gray-900 h-8 inline\" xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\r\n                    <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth=\"2\" d=\"M8 7v8a2 2 0 002 2h6M8 7V5a2 2 0 012-2h4.586a1 1 0 01.707.293l4.414 4.414a1 1 0 01.293.707V15a2 2 0 01-2 2h-2M8 7H6a2 2 0 00-2 2v10a2 2 0 002 2h8a2 2 0 002-2v-2\" />\r\n                </svg>Dublicate</span>\r\n\r\n\r\n            </div>\r\n            <div class=\"flex items-center cursor-pointer rounded-md m-4\" onClick={() => { removeOne() }}>  <span class=\" text-red-300 hover:text-red-800  text-left  px-4 py-1\"  > <svg className=\"h-8 inline\" xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\r\n                <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth=\"2\" d=\"M19 7l-.867 12.142A2 2 0 0116.138 21H7.862a2 2 0 01-1.995-1.858L5 7m5 4v6m4-6v6m1-10V4a1 1 0 00-1-1h-4a1 1 0 00-1 1v3M4 7h16\" />\r\n            </svg>{deleteMsg}</span></div>\r\n\r\n\r\n            <div class=\"m-4 flex items-center cursor-pointer rounded-md\">\r\n                <label\r\n\r\n                    class=\"flex items-center cursor-pointer\"\r\n                >\r\n                    <div class=\"relative\">\r\n                        <input id=\"toogleA\" type=\"checkbox\" class=\"hidden\" checked={required} onChange={() => { setRequired(!required) }} />\r\n                        <div\r\n                            class=\"toggle__line w-10 h-4 bg-gray-400 rounded-full shadow-inner\"\r\n                        ></div>\r\n                        <div\r\n                            class=\"toggle__dot absolute w-6 h-6 bg-white rounded-full shadow inset-y-0 left-0\"\r\n                        ></div>\r\n                    </div>\r\n                    <div\r\n                        class=\"ml-3 text-gray-700 font-medium\"\r\n                    >\r\n                        <span className={!required ? \"text-gray-700\" : \"text-green-700\"}>Required</span>\r\n                    </div>\r\n                </label>\r\n\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","D:\\Projects\\google-form\\src\\componants\\Forms\\NotActiveQuestion.js",["198","199","200","201","202","203","204"],"import React, { useState } from 'react'\r\n\r\nexport const NotActiveQuestion = ({ data, id, isThisActive, height }) => {\r\n\r\n    const { idOfActiveQue, setIdOfActiveQue } = isThisActive\r\n    const [questionArray, setquestionArray] = useState(data.options)\r\n\r\n\r\n    function setThisActive() {\r\n        setIdOfActiveQue(id)\r\n    }\r\n\r\n    const [options, setOptions] = useState(data.options)\r\n\r\n    return (\r\n        <div onClick={() => { setThisActive() }}>\r\n            <div className=\" relative container mx-auto rounded-lg   my-8  p-4 shadow-sm bg-white\">\r\n                <div className=\"flex\">\r\n                    <div class=\"p-4 inline appearance-none  rounded w-1/2 text-gray-800   overflow-hidden font-semibold\"\r\n\r\n\r\n                        style={{ height: height, resize: \"none\" }}\r\n\r\n\r\n                    >{data.question ? data.question : \"Question\"}</div>\r\n                    <span className=\"inline-flex align-center justify-center mx-4 p-2 rounded-full hover:bg-gray-300  \"><svg className=\"w-8 text-gray-700\" xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\r\n                        <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth=\"2\" d=\"M4 16l4.586-4.586a2 2 0 012.828 0L16 16m-2-2l1.586-1.586a2 2 0 012.828 0L20 14m-6-6h.01M6 20h12a2 2 0 002-2V6a2 2 0 00-2-2H6a2 2 0 00-2 2v12a2 2 0 002 2z\" />\r\n                    </svg></span>\r\n\r\n\r\n\r\n                    <span className=\"w-1/3 aline-center m-auto\">\r\n                        <div class=\"z-0 bg-gray-900 relative text-sm block w-full  rounded hover:bg-gray-800 py-1 px-4 text-gray-100\" name=\"questionType\" >\r\n                            {data.questiontype}\r\n\r\n\r\n                        </div>\r\n\r\n                    </span>\r\n                </div>\r\n\r\n                <div>\r\n\r\n                    <div className=\"mt-6\">\r\n\r\n\r\n\r\n\r\n                        {questionArray.map((items, index) => <Boxes key={index} index={index} values={items} questionType={data.questiontype} />)}\r\n\r\n\r\n\r\n                    </div >\r\n\r\n                </div>\r\n\r\n\r\n\r\n            </div >\r\n\r\n\r\n\r\n\r\n        </div >\r\n    )\r\n}\r\n\r\n\r\n\r\nconst Boxes = ({ values, questionType }) => {\r\n    const [checkboxValue, setCheckboxValue] = useState(false)\r\n\r\n\r\n\r\n    if (questionType != \"Short Answer\")\r\n        return (\r\n\r\n\r\n            <div class=\" my-auto p-2  outline-none mx-4  rounded py-1 px-2 w-2/3 bg-white text-sm text-gray-800  focus:outline-none focus:shadow-outline align-center\" > <span className=\"w-6 h-6 border inline-block align-center mx-4 my-auto rounded-lg \">  </span ><span class=\"inline-flex justify-start align-center\">{values.option ? values.option : \"Option\"}</span></div >\r\n\r\n\r\n        )\r\n    else {\r\n        return(\r\n        <div class=\" my-auto p-2  outline-none mx-4  rounded py-1 px-2 w-2/3 bg-white text-sm text-gray-800  focus:outline-none focus:shadow-outline align-center\" > <span className=\"w-6 h-6 border inline-block align-center mx-4 my-auto rounded-lg \">  </span ><span class=\"inline-flex justify-start align-center\">Answer</span></div >)\r\n    }\r\n}\r\n","D:\\Projects\\google-form\\src\\routers\\AllRouters.js",[],"D:\\Projects\\google-form\\src\\firebase.js",[],"D:\\Projects\\google-form\\src\\Context\\AuthContext.js",[],"D:\\Projects\\google-form\\src\\routers\\PrivateRoute.js",["205"],"\r\nimport React from \"react\";\r\nimport { Route, Redirect } from \"react-router-dom\";\r\nimport { useAuth } from \"../Context/AuthContext\";\r\n\r\nconst PrivateRoute = ({ component: RouteComponent, ...rest }) => {\r\n    const { currentUser } = useAuth();\r\n\r\n    return (\r\n        <Route\r\n            {...rest}\r\n            render={props => {\r\n                return true ? <RouteComponent {...props} /> : <Redirect to=\"/login\" />\r\n            }}\r\n        ></Route>\r\n    );\r\n};\r\n\r\n\r\nexport default PrivateRoute","D:\\Projects\\google-form\\src\\componants\\Forms\\SavePopUp.js",[],"D:\\Projects\\google-form\\src\\pages\\SubmittedFormPage.js",["206","207","208"],"import React, { useState } from 'react'\r\nimport { FormHome } from '../componants/SubmittedForm/FormHome'\r\n\r\nimport { fireDb } from '../firebase'\r\n\r\n\r\nexport const SubmittedFormPage = ({ match }) => {\r\n    const thisID = match.params.id\r\n\r\n\r\n    // this is the page where question and responces are shown\r\n\r\n    const [allFormData, setallFormData] = useState()\r\n    React.useEffect(() => {\r\n\r\n\r\n        const todoRef = fireDb.ref('currentUser').child(\"Forms\");\r\n        todoRef.on('value', (snapshot) => {\r\n            const todos = snapshot.val();\r\n            const todoList = [];\r\n            for (let id in todos) {\r\n                todoList.push({ id, ...todos[id] });\r\n            }\r\n\r\n            let newArr = todoList.filter((data) => {\r\n\r\n                return (\r\n                    data.uniqueID === thisID)\r\n\r\n            })\r\n\r\n\r\n            setallFormData(newArr);\r\n\r\n        });\r\n    }, [])\r\n\r\n\r\n\r\n    const [responceList, setResponceList] = useState()\r\n\r\n\r\n\r\n    if (allFormData) {\r\n\r\n        return (\r\n            <div>\r\n                {allFormData.map((allData, i) => {\r\n                    return <FormHome data={allData} key={i} />\r\n                })}\r\n            </div>\r\n        )\r\n    }\r\n    return (\r\n        <div>\r\n            Loading\r\n        </div>\r\n    )\r\n}\r\n","D:\\Projects\\google-form\\src\\componants\\SubmittedForm\\FormHome.js",["209","210"],"D:\\Projects\\google-form\\src\\componants\\SubmittedForm\\SubmittedFormHeader.js",["211"],"D:\\Projects\\google-form\\src\\componants\\SubmittedForm\\SubmittedFormQuestionBox.js",["212"],"import React from 'react'\r\n\r\nexport const SubmittedFormQuestionBox = ({ data, color }) => {\r\n    //     options: (2) [{…}, {…}]\r\n    // question: \"11\"\r\n    // questiontype: \"Multiple Choice\"\r\n    // required: true\r\n    return (\r\n        <div className=\"container mx-auto my-4 \">\r\n            <div className=\"  container mx-auto border-l-8 rounded-lg   my-8  p-4 shadow-sm bg-white border-blue-400 border \" style={{ borderColor: ` ${color ? color : \"#F1F1F0\"}` }} >\r\n                <div class=\" p-4   text-gray-700 leading-tight \" >{data.question}\r\n                    {data.required ? <span className=\"mx-8  text-red-500\">* required</span> : null}</div>\r\n\r\n\r\n                {data.options.map((option, i) => {\r\n                    return <Box checkOption={option} key={i} />\r\n                })}\r\n\r\n            </div >\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\n\r\nconst Box = (checkOption) => {\r\n    const [checkBox, setCheckBox] = React.useState(false)\r\n\r\n    return (\r\n        <label class=\"custom-label p-2 flex w-full\">\r\n            <input type=\"checkbox\" class=\"hidden\" checked={checkBox}\r\n            />\r\n\r\n\r\n            <div className=\"w-6 h-6 border inline-block align-center mx-4 my-auto rounded-lg \">{!checkBox ? \"\" : <svg className=\"bg-blue-700 text-white rounded-lg\" xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\r\n                <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth=\"2\" d=\"M5 13l4 4L19 7\" />\r\n            </svg>}\r\n\r\n            </div>\r\n            <div class=\"inline  outline-none  border-gray-400 rounded py-1 px-2 w-2/3 bg-white text-lg text-gray-700 placeholder-gray-400 focus:outline-none focus:shadow-outline\"  >  {checkOption.checkOption.option}  </div>\r\n        </label>\r\n\r\n    )\r\n}\r\n","D:\\Projects\\google-form\\src\\componants\\SubmittedForm\\SubmittedFormTitle.js",[],"D:\\Projects\\google-form\\src\\pages\\SharedFormPage.js",["213","214","215","216"],"import React, { useState } from 'react'\r\n\r\nimport { fireDb } from '../firebase'\r\n\r\nimport { SharedForm } from '../componants/SharedForm/SharedForm'\r\n\r\nexport const SharedFormPage = ({ match }) => {\r\n\r\n    // This is shared form an will be shown when user share link with someOne\r\n\r\n\r\n    const id = match.params.id\r\n\r\n\r\n    const thisID = match.params.id\r\n\r\n\r\n    const [allFormData, setallFormData] = useState()\r\n    React.useEffect(() => {\r\n\r\n\r\n        const todoRef = fireDb.ref('currentUser').child(\"Forms\");\r\n        todoRef.on('value', (snapshot) => {\r\n            const todos = snapshot.val();\r\n            const todoList = [];\r\n            for (let id in todos) {\r\n                todoList.push({ id, ...todos[id] });\r\n            }\r\n\r\n            let newArr = todoList.filter((data) => {\r\n\r\n                return (\r\n                    data.uniqueID === thisID)\r\n\r\n            })\r\n\r\n\r\n            setallFormData(newArr);\r\n\r\n        });\r\n    }, [])\r\n\r\n    const [responceList, setResponceList] = useState()\r\n\r\n    if (allFormData) {\r\n\r\n        return (\r\n            <div>\r\n                {allFormData.map((allData, i) => {\r\n                    return <SharedForm data={allData} key={i} />\r\n                })}\r\n            </div>\r\n        )\r\n    }\r\n    return (\r\n        <div>\r\n            Loading\r\n        </div>\r\n    )\r\n\r\n}\r\n","D:\\Projects\\google-form\\src\\componants\\SharedForm\\SharedForm.js",["217","218","219"],"import React, { useState, useEffect } from 'react'\r\nimport { fireDb } from '../../firebase'\r\nimport { SubmittedFormQuestionBox } from '../SubmittedForm/SubmittedFormQuestionBox'\r\nimport { SubmittedFormTitle } from '../SubmittedForm/SubmittedFormTitle'\r\nimport { SharedFormQuestionBox } from './SharedFormQuestionBox'\r\nimport { SubmitedForm } from './SubmitedForm'\r\n\r\nexport const SharedForm = ({ data }) => {\r\n\r\n\r\n\r\n    const [formSubbmited, setformSubbmited] = useState(() => {\r\n        var retrievedObject = localStorage.getItem('form');\r\n\r\n        if (retrievedObject) {\r\n\r\n            return retrievedObject.includes(data.uniqueID);\r\n        }\r\n\r\n    })\r\n\r\n    const [responceList, setresponceList] = useState(() => {\r\n        let val = []\r\n        for (let i = 0; i < data.content.length; i++) {\r\n            val.push(0)\r\n        }\r\n        return val\r\n    })\r\n\r\n    function updatestorage() {\r\n        var retrievedObject = JSON.parse(localStorage.getItem('form'));\r\n\r\n        if (retrievedObject) {\r\n\r\n            localStorage.setItem('form', JSON.stringify([...retrievedObject, data.uniqueID]));\r\n        }\r\n        else {\r\n            localStorage.setItem('form', JSON.stringify([data.uniqueID]));\r\n\r\n        }\r\n\r\n    }\r\n\r\n\r\n\r\n    const onSubmit = () => {\r\n        const formdataRef = fireDb.ref(\"currentUser\").child('Forms');\r\n        const thisformref = formdataRef.child(data.id).child('responceList')\r\n        thisformref.push(responceList)\r\n        console.log(responceList)\r\n        setformSubbmited(true)\r\n        updatestorage()\r\n    }\r\n\r\n\r\n    const [questions, setquestions] = useState(data.content)\r\n\r\n\r\n    if (formSubbmited) {\r\n        return <div><SubmitedForm title={data.title} setformSubbmited={setformSubbmited} /></div>\r\n    }\r\n\r\n\r\n    return (\r\n        <div>\r\n            <div className=\"mt-16\">\r\n\r\n                <SubmittedFormTitle title={data.title} />\r\n\r\n                {/* <SubmittedFormQuestionBox />  */}\r\n                {questions.map((question, i) => {\r\n                    return <SharedFormQuestionBox id={i} data={question} color={data.color} value={{ responceList, setresponceList }} />\r\n                })}\r\n                <div className=\"container mx-auto \">\r\n                    <button onClick={onSubmit}>Submit</button>\r\n                </div>\r\n            </div>\r\n            <center>This content is neither created nor endorsed by MeForm. Never subbmit your passwoed </center>\r\n        </div>\r\n    )\r\n}\r\n","D:\\Projects\\google-form\\src\\componants\\SharedForm\\SharedFormQuestionBox.js",["220"],"import React, { useState } from 'react'\r\n\r\nexport const SharedFormQuestionBox = ({ data, color, id, value }) => {\r\n    //     options: (2) [{…}, {…}]\r\n    // question: \"11\"\r\n    // questiontype: \"Multiple Choice\"\r\n    // required: true\r\n\r\n    const { responceList, setresponceList } = value\r\n\r\n    const updateResponce = (a, b) => {\r\n        let newArr = [...responceList]\r\n        console.log(newArr)\r\n        newArr[b] = ++a\r\n        setresponceList(newArr)\r\n    }\r\n\r\n    const [idSelected, setidSelected] = useState()\r\n\r\n    const handelChange = (a) => {\r\n        setidSelected(a)\r\n        updateResponce(a, id)\r\n\r\n        console.log(++a,id)\r\n    }\r\n\r\n\r\n\r\n\r\n    return (\r\n        <div className=\"container mx-auto my-4 \">\r\n            <div className=\" relative container mx-auto border-l-8 rounded-lg   my-8  p-4 shadow-sm bg-white border-blue-400 border \" style={{ borderColor: ` ${color ? color : \"#F1F1F0\"}` }} >\r\n                <div class=\" p-4   text-gray-700 leading-tight \" >{data.question}\r\n                    {data.required ? <span className=\"mx-8  text-red-500\">* required</span> : null}</div>\r\n\r\n\r\n                {data.options.map((option, i) => {\r\n                    return <Box checkOption={option} key={i} index={i} updateResponce={updateResponce} handelChange={handelChange} isSelected={idSelected} />\r\n                })}\r\n\r\n            </div >\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\n\r\nconst Box = ({ checkOption, updateResponce, handelChange, index, isSelected }) => {\r\n    const [checkBox, setCheckBox] = useState(false)\r\n\r\n    React.useEffect(() => {\r\n        if (isSelected === index) {\r\n            setCheckBox(true)\r\n        }\r\n        else {\r\n            setCheckBox(false)\r\n        }\r\n    }, [handelChange])\r\n\r\n    return (\r\n        <label class=\"custom-label p-2 flex w-full\">\r\n            <input type=\"checkbox\" class=\"hidden\" checked={checkBox}\r\n                onClick={() => handelChange(index)} />\r\n\r\n\r\n            <div className=\"w-6 h-6 border inline-block align-center mx-4 my-auto rounded-lg \">{!checkBox ? \"\" : <svg className=\"bg-blue-700 text-white rounded-lg\" xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\r\n                <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth=\"2\" d=\"M5 13l4 4L19 7\" />\r\n            </svg>}\r\n\r\n            </div>\r\n            <div class=\"inline  outline-none border border-gray-400 rounded py-1 px-2 w-2/3 bg-white text-sm text-gray-700 placeholder-gray-400 focus:outline-none focus:shadow-outline\"  >  {checkOption.option}  </div>\r\n        </label>\r\n\r\n    )\r\n}\r\n\r\n\r\n\r\n","D:\\Projects\\google-form\\src\\componants\\SharedForm\\SubmitedForm.js",[],"D:\\Projects\\google-form\\src\\componants\\SubmittedForm\\Responses.js",["221","222","223","224","225","226","227","228","229"],"import React, { useState, useEffect } from 'react'\r\nimport { ResponsesBox } from './ResponsesBox';\r\n\r\nexport const Responses = ({ data, questions }) => {\r\n\r\n    // function transposeArray(array, arrayLength) {\r\n    //     const newArray = [];\r\n    //     for (var i = 0; i < array.length; i++) {\r\n    //         newArray.push([]);\r\n    //     };\r\n\r\n    //     for (var i = 0; i < array.length; i++) {\r\n    //         for (var j = 0; j < arrayLength; j++) {\r\n    //             newArray[j].push(array[i][j]);\r\n    //         };\r\n    //     };\r\n\r\n    //     return newArray;\r\n    // }\r\n\r\n\r\n\r\n\r\n    const [responsesArr, setResponsesArr] = useState(() => {\r\n\r\n        let todoList = []\r\n        for (let id in data.responceList) {\r\n            todoList.push([...data.responceList[id]]);\r\n        }\r\n        todoList = todoList[0].map((_, colIndex) => todoList.map(row => row[colIndex]));\r\n\r\n\r\n        return (todoList);\r\n    })\r\n\r\n    const [totalAns, setTotalAns] = useState(() => {\r\n\r\n        let todoList = []\r\n        for (let id in data.responceList) {\r\n            todoList.push([...data.responceList[id]]);\r\n        }\r\n\r\n\r\n\r\n        return (todoList.length);\r\n    })\r\n\r\n\r\n    React.useEffect(() => {\r\n        let chartarr = []\r\n\r\n        for (let i = 0; i < data.content.length; i++) {\r\n\r\n\r\n            let thisquesAnsArr = Array(data.content[i].options.length)\r\n            const countOccurrences = (arr, val) => arr.reduce((a, v) => (v === val ? a + 1 : a), 0);\r\n            let thisarray = (responsesArr[i])\r\n\r\n        }\r\n    }, [])\r\n\r\n    const countOccurrences = arr => arr.reduce((prev, curr) => (prev[curr] = ++prev[curr] || 1, prev), {});\r\n\r\n\r\n\r\n\r\n    if (questions) {\r\n\r\n\r\n        return (\r\n            <div className=\" container mx-auto\">\r\n\r\n                <div className=\"\">\r\n                    {questions.map((question, i) => {\r\n                        return <ResponsesBox key={i} data={question} color={data.color} allData={data} index={i} responsesArr={countOccurrences(responsesArr[i])} totalVote={totalAns} />\r\n                    })}\r\n                </div>\r\n\r\n            </div>\r\n        )\r\n    }\r\n    return (\r\n\r\n        <div>\r\n            No Data subbmited Yet\r\n        </div>\r\n    )\r\n}\r\n","D:\\Projects\\google-form\\src\\componants\\SubmittedForm\\ResponsesBox.js",["230","231","232"],{"ruleId":"233","replacedBy":"234"},{"ruleId":"235","replacedBy":"236"},{"ruleId":"237","severity":1,"message":"238","line":4,"column":30,"nodeType":"239","messageId":"240","endLine":4,"endColumn":40},{"ruleId":"237","severity":1,"message":"241","line":5,"column":20,"nodeType":"239","messageId":"240","endLine":5,"endColumn":30},{"ruleId":"242","severity":1,"message":"243","line":27,"column":9,"nodeType":"244","endLine":27,"endColumn":18,"suggestions":"245"},{"ruleId":"246","severity":1,"message":"247","line":44,"column":25,"nodeType":"248","endLine":47,"endColumn":27},{"ruleId":"249","severity":1,"message":"250","line":144,"column":17,"nodeType":"248","endLine":144,"endColumn":76},{"ruleId":"249","severity":1,"message":"250","line":148,"column":17,"nodeType":"248","endLine":148,"endColumn":76},{"ruleId":"237","severity":1,"message":"251","line":3,"column":22,"nodeType":"239","messageId":"240","endLine":3,"endColumn":28},{"ruleId":"237","severity":1,"message":"252","line":7,"column":25,"nodeType":"239","messageId":"240","endLine":7,"endColumn":39},{"ruleId":"237","severity":1,"message":"253","line":6,"column":12,"nodeType":"239","messageId":"240","endLine":6,"endColumn":18},{"ruleId":"237","severity":1,"message":"254","line":6,"column":20,"nodeType":"239","messageId":"240","endLine":6,"endColumn":29},{"ruleId":"237","severity":1,"message":"255","line":5,"column":10,"nodeType":"239","messageId":"240","endLine":5,"endColumn":19},{"ruleId":"237","severity":1,"message":"256","line":6,"column":23,"nodeType":"239","messageId":"240","endLine":6,"endColumn":35},{"ruleId":"237","severity":1,"message":"257","line":11,"column":11,"nodeType":"239","messageId":"240","endLine":11,"endColumn":18},{"ruleId":"242","severity":1,"message":"258","line":42,"column":8,"nodeType":"244","endLine":42,"endColumn":22,"suggestions":"259"},{"ruleId":"237","severity":1,"message":"260","line":7,"column":23,"nodeType":"239","messageId":"240","endLine":7,"endColumn":35},{"ruleId":"237","severity":1,"message":"261","line":8,"column":29,"nodeType":"239","messageId":"240","endLine":8,"endColumn":47},{"ruleId":"237","severity":1,"message":"238","line":1,"column":27,"nodeType":"239","messageId":"240","endLine":1,"endColumn":37},{"ruleId":"237","severity":1,"message":"262","line":2,"column":10,"nodeType":"239","messageId":"240","endLine":2,"endColumn":21},{"ruleId":"237","severity":1,"message":"263","line":15,"column":28,"nodeType":"239","messageId":"240","endLine":15,"endColumn":44},{"ruleId":"264","severity":1,"message":"265","line":22,"column":34,"nodeType":"266","messageId":"267","endLine":22,"endColumn":36},{"ruleId":"242","severity":1,"message":"268","line":24,"column":8,"nodeType":"244","endLine":24,"endColumn":23,"suggestions":"269"},{"ruleId":"242","severity":1,"message":"270","line":43,"column":8,"nodeType":"244","endLine":43,"endColumn":10,"suggestions":"271"},{"ruleId":"242","severity":1,"message":"270","line":17,"column":8,"nodeType":"244","endLine":17,"endColumn":23,"suggestions":"272"},{"ruleId":"242","severity":1,"message":"270","line":17,"column":8,"nodeType":"244","endLine":17,"endColumn":23,"suggestions":"273"},{"ruleId":"237","severity":1,"message":"274","line":79,"column":28,"nodeType":"239","messageId":"240","endLine":79,"endColumn":44},{"ruleId":"242","severity":1,"message":"270","line":17,"column":8,"nodeType":"244","endLine":17,"endColumn":23,"suggestions":"275"},{"ruleId":"237","severity":1,"message":"274","line":70,"column":28,"nodeType":"239","messageId":"240","endLine":70,"endColumn":44},{"ruleId":"237","severity":1,"message":"276","line":5,"column":8,"nodeType":"239","messageId":"240","endLine":5,"endColumn":16},{"ruleId":"237","severity":1,"message":"277","line":16,"column":13,"nodeType":"239","messageId":"240","endLine":16,"endColumn":26},{"ruleId":"237","severity":1,"message":"278","line":17,"column":23,"nodeType":"239","messageId":"240","endLine":17,"endColumn":34},{"ruleId":"242","severity":1,"message":"270","line":13,"column":8,"nodeType":"244","endLine":13,"endColumn":18,"suggestions":"279"},{"ruleId":"237","severity":1,"message":"280","line":34,"column":13,"nodeType":"239","messageId":"240","endLine":34,"endColumn":19},{"ruleId":"237","severity":1,"message":"277","line":5,"column":13,"nodeType":"239","messageId":"240","endLine":5,"endColumn":26},{"ruleId":"237","severity":1,"message":"274","line":6,"column":27,"nodeType":"239","messageId":"240","endLine":6,"endColumn":43},{"ruleId":"237","severity":1,"message":"281","line":13,"column":12,"nodeType":"239","messageId":"240","endLine":13,"endColumn":19},{"ruleId":"237","severity":1,"message":"282","line":13,"column":21,"nodeType":"239","messageId":"240","endLine":13,"endColumn":31},{"ruleId":"237","severity":1,"message":"283","line":71,"column":12,"nodeType":"239","messageId":"240","endLine":71,"endColumn":25},{"ruleId":"237","severity":1,"message":"284","line":71,"column":27,"nodeType":"239","messageId":"240","endLine":71,"endColumn":43},{"ruleId":"264","severity":1,"message":"285","line":75,"column":22,"nodeType":"266","messageId":"267","endLine":75,"endColumn":24},{"ruleId":"237","severity":1,"message":"286","line":7,"column":13,"nodeType":"239","messageId":"240","endLine":7,"endColumn":24},{"ruleId":"242","severity":1,"message":"287","line":36,"column":8,"nodeType":"244","endLine":36,"endColumn":10,"suggestions":"288"},{"ruleId":"237","severity":1,"message":"289","line":40,"column":12,"nodeType":"239","messageId":"240","endLine":40,"endColumn":24},{"ruleId":"237","severity":1,"message":"290","line":40,"column":26,"nodeType":"239","messageId":"240","endLine":40,"endColumn":41},{"ruleId":"237","severity":1,"message":"291","line":20,"column":23,"nodeType":"239","messageId":"240","endLine":20,"endColumn":35},{"ruleId":"264","severity":1,"message":"265","line":28,"column":25,"nodeType":"266","messageId":"267","endLine":28,"endColumn":27},{"ruleId":"237","severity":1,"message":"292","line":71,"column":13,"nodeType":"239","messageId":"240","endLine":71,"endColumn":24},{"ruleId":"237","severity":1,"message":"293","line":27,"column":22,"nodeType":"239","messageId":"240","endLine":27,"endColumn":33},{"ruleId":"237","severity":1,"message":"294","line":12,"column":11,"nodeType":"239","messageId":"240","endLine":12,"endColumn":13},{"ruleId":"242","severity":1,"message":"287","line":41,"column":8,"nodeType":"244","endLine":41,"endColumn":10,"suggestions":"295"},{"ruleId":"237","severity":1,"message":"289","line":43,"column":12,"nodeType":"239","messageId":"240","endLine":43,"endColumn":24},{"ruleId":"237","severity":1,"message":"290","line":43,"column":26,"nodeType":"239","messageId":"240","endLine":43,"endColumn":41},{"ruleId":"237","severity":1,"message":"296","line":1,"column":27,"nodeType":"239","messageId":"240","endLine":1,"endColumn":36},{"ruleId":"237","severity":1,"message":"297","line":3,"column":10,"nodeType":"239","messageId":"240","endLine":3,"endColumn":34},{"ruleId":"237","severity":1,"message":"291","line":56,"column":23,"nodeType":"239","messageId":"240","endLine":56,"endColumn":35},{"ruleId":"242","severity":1,"message":"298","line":58,"column":8,"nodeType":"244","endLine":58,"endColumn":22,"suggestions":"299"},{"ruleId":"237","severity":1,"message":"296","line":1,"column":27,"nodeType":"239","messageId":"240","endLine":1,"endColumn":36},{"ruleId":"237","severity":1,"message":"300","line":24,"column":26,"nodeType":"239","messageId":"240","endLine":24,"endColumn":41},{"ruleId":"237","severity":1,"message":"301","line":36,"column":22,"nodeType":"239","messageId":"240","endLine":36,"endColumn":33},{"ruleId":"237","severity":1,"message":"302","line":50,"column":13,"nodeType":"239","messageId":"240","endLine":50,"endColumn":21},{"ruleId":"237","severity":1,"message":"303","line":55,"column":17,"nodeType":"239","messageId":"240","endLine":55,"endColumn":31},{"ruleId":"237","severity":1,"message":"304","line":56,"column":19,"nodeType":"239","messageId":"240","endLine":56,"endColumn":35},{"ruleId":"237","severity":1,"message":"305","line":57,"column":17,"nodeType":"239","messageId":"240","endLine":57,"endColumn":26},{"ruleId":"242","severity":1,"message":"306","line":60,"column":8,"nodeType":"244","endLine":60,"endColumn":10,"suggestions":"307"},{"ruleId":"308","severity":1,"message":"309","line":62,"column":95,"nodeType":"310","messageId":"311","endLine":62,"endColumn":96},{"ruleId":"312","severity":1,"message":"313","line":26,"column":93,"nodeType":"314","endLine":26,"endColumn":100},{"ruleId":"237","severity":1,"message":"315","line":42,"column":12,"nodeType":"239","messageId":"240","endLine":42,"endColumn":20},{"ruleId":"237","severity":1,"message":"293","line":42,"column":22,"nodeType":"239","messageId":"240","endLine":42,"endColumn":33},"no-native-reassign",["316"],"no-negated-in-lhs",["317"],"no-unused-vars","'useContext' is defined but never used.","Identifier","unusedVar","'useHistory' is defined but never used.","react-hooks/exhaustive-deps","React Hook useCallback has a missing dependency: 'login'. Either include it or remove the dependency array.","ArrayExpression",["318"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","'Router' is defined but never used.","'setformOptions' is assigned a value but never used.","'isOpen' is assigned a value but never used.","'setIsOpen' is assigned a value but never used.","'SavePopUp' is defined but never used.","'FormProvider' is defined but never used.","'tamplet' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'setFormData'. Either include it or remove the dependency array.",["319"],"'setFormTitle' is assigned a value but never used.","'setformDiscreption' is assigned a value but never used.","'FormContext' is defined but never used.","'setIdOfActiveQue' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","React Hook useEffect has a missing dependency: 'id'. Either include it or remove the dependency array. If 'setIsactive' needs the current value of 'id', you can also switch to useReducer instead of useState and read 'id' in the reducer.",["320"],"React Hook useEffect has missing dependencies: 'allquestions', 'id', and 'setAllquestions'. Either include them or remove the dependency array.",["321"],["322"],["323"],"'setquestionArray' is assigned a value but never used.",["324"],"'ReactDOM' is defined but never used.","'idOfActiveQue' is assigned a value but never used.","'setFormData' is assigned a value but never used.",["325"],"'values' is assigned a value but never used.","'options' is assigned a value but never used.","'setOptions' is assigned a value but never used.","'checkboxValue' is assigned a value but never used.","'setCheckboxValue' is assigned a value but never used.","Expected '!==' and instead saw '!='.","'currentUser' is assigned a value but never used.","React Hook React.useEffect has a missing dependency: 'thisID'. Either include it or remove the dependency array.",["326"],"'responceList' is assigned a value but never used.","'setResponceList' is assigned a value but never used.","'setquestions' is assigned a value but never used.","'showSideBar' is assigned a value but never used.","'setCheckBox' is assigned a value but never used.","'id' is assigned a value but never used.",["327"],"'useEffect' is defined but never used.","'SubmittedFormQuestionBox' is defined but never used.","React Hook React.useEffect has missing dependencies: 'index' and 'isSelected'. Either include them or remove the dependency array.",["328"],"'setResponsesArr' is assigned a value but never used.","'setTotalAns' is assigned a value but never used.","'chartarr' is assigned a value but never used.","'thisquesAnsArr' is assigned a value but never used.","'countOccurrences' is assigned a value but never used.","'thisarray' is assigned a value but never used.","React Hook React.useEffect has missing dependencies: 'data.content' and 'responsesArr'. Either include them or remove the dependency array.",["329"],"no-sequences","Unexpected use of comma operator.","SequenceExpression","unexpectedCommaExpression","react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","'checkBox' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"330","fix":"331"},{"desc":"332","fix":"333"},{"desc":"334","fix":"335"},{"desc":"336","fix":"337"},{"desc":"338","fix":"339"},{"desc":"338","fix":"340"},{"desc":"338","fix":"341"},{"desc":"342","fix":"343"},{"desc":"344","fix":"345"},{"desc":"344","fix":"346"},{"desc":"347","fix":"348"},{"desc":"349","fix":"350"},"Update the dependencies array to be: [history, login]",{"range":"351","text":"352"},"Update the dependencies array to be: [allquestions, setFormData]",{"range":"353","text":"354"},"Update the dependencies array to be: [id, idOfActiveQue]",{"range":"355","text":"356"},"Update the dependencies array to be: [allquestions, id, setAllquestions]",{"range":"357","text":"358"},"Update the dependencies array to be: [allquestions, id, questionArray, setAllquestions]",{"range":"359","text":"360"},{"range":"361","text":"360"},{"range":"362","text":"360"},"Update the dependencies array to be: [allquestions, id, required, setAllquestions]",{"range":"363","text":"364"},"Update the dependencies array to be: [thisID]",{"range":"365","text":"366"},{"range":"367","text":"366"},"Update the dependencies array to be: [handelChange, index, isSelected]",{"range":"368","text":"369"},"Update the dependencies array to be: [data.content, responsesArr]",{"range":"370","text":"371"},[653,662],"[history, login]",[1456,1470],"[allquestions, setFormData]",[783,798],"[id, idOfActiveQue]",[1226,1228],"[allquestions, id, setAllquestions]",[453,468],"[allquestions, id, questionArray, setAllquestions]",[456,471],[452,467],[486,496],"[allquestions, id, required, setAllquestions]",[901,903],"[thisID]",[954,956],[1716,1730],"[handelChange, index, isSelected]",[1535,1537],"[data.content, responsesArr]"]