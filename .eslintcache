[{"D:\\Projects\\google-form\\src\\index.js":"1","D:\\Projects\\google-form\\src\\App.js":"2","D:\\Projects\\google-form\\src\\serviceWorker.js":"3","D:\\Projects\\google-form\\src\\pages\\LogIn.js":"4","D:\\Projects\\google-form\\src\\pages\\HomePage.js":"5","D:\\Projects\\google-form\\src\\componants\\Header.js":"6","D:\\Projects\\google-form\\src\\componants\\DocsHomescreen.js":"7","D:\\Projects\\google-form\\src\\componants\\FreeTamplate.js":"8","D:\\Projects\\google-form\\src\\componants\\RecentForms.js":"9","D:\\Projects\\google-form\\src\\componants\\OldFormslist.js":"10","D:\\Projects\\google-form\\src\\pages\\FormPage.js":"11","D:\\Projects\\google-form\\src\\Context\\FormContext.js":"12","D:\\Projects\\google-form\\src\\routers\\AllRouters.js":"13","D:\\Projects\\google-form\\src\\firebase.js":"14","D:\\Projects\\google-form\\src\\Context\\AuthContext.js":"15","D:\\Projects\\google-form\\src\\routers\\PrivateRoute.js":"16","D:\\Projects\\google-form\\src\\pages\\SubmittedFormPage.js":"17","D:\\Projects\\google-form\\src\\componants\\SubmittedForm\\FormHome.js":"18","D:\\Projects\\google-form\\src\\componants\\SubmittedForm\\SubmittedFormHeader.js":"19","D:\\Projects\\google-form\\src\\componants\\SubmittedForm\\SubmittedFormQuestionBox.js":"20","D:\\Projects\\google-form\\src\\componants\\SubmittedForm\\SubmittedFormTitle.js":"21","D:\\Projects\\google-form\\src\\pages\\SharedFormPage.js":"22","D:\\Projects\\google-form\\src\\componants\\SharedForm\\SharedForm.js":"23","D:\\Projects\\google-form\\src\\componants\\SharedForm\\SharedFormQuestionBox.js":"24","D:\\Projects\\google-form\\src\\componants\\SharedForm\\SubmitedForm.js":"25","D:\\Projects\\google-form\\src\\componants\\SubmittedForm\\Responses.js":"26","D:\\Projects\\google-form\\src\\componants\\SubmittedForm\\ResponsesBox.js":"27","D:\\Projects\\google-form\\src\\componants\\FormModule\\FormHeader.js":"28","D:\\Projects\\google-form\\src\\componants\\FormModule\\EnterFormTitle.js":"29","D:\\Projects\\google-form\\src\\componants\\FormModule\\BoxQuestionSingle.js":"30","D:\\Projects\\google-form\\src\\componants\\FormModule\\OptionBox.js":"31","D:\\Projects\\google-form\\src\\componants\\FormModule\\OperationBoxForQuestion.js":"32","D:\\Projects\\google-form\\src\\componants\\FormModule\\FormToolBar.js":"33","D:\\Projects\\google-form\\src\\componants\\FormModule\\NotActiveQuestion.js":"34","D:\\Projects\\google-form\\src\\componants\\FormModule\\SaveErrors.js":"35","D:\\Projects\\google-form\\src\\Context\\ErrorContext.js":"36"},{"size":464,"mtime":1614839260056,"results":"37","hashOfConfig":"38"},{"size":249,"mtime":1615138926400,"results":"39","hashOfConfig":"38"},{"size":5086,"mtime":1614839260056,"results":"40","hashOfConfig":"38"},{"size":9762,"mtime":1616428901299,"results":"41","hashOfConfig":"38"},{"size":320,"mtime":1616404835350,"results":"42","hashOfConfig":"38"},{"size":1989,"mtime":1616428282355,"results":"43","hashOfConfig":"38"},{"size":626,"mtime":1616419725577,"results":"44","hashOfConfig":"38"},{"size":2875,"mtime":1616419725585,"results":"45","hashOfConfig":"38"},{"size":2626,"mtime":1616419725465,"results":"46","hashOfConfig":"38"},{"size":1291,"mtime":1616420608728,"results":"47","hashOfConfig":"38"},{"size":1986,"mtime":1616423067595,"results":"48","hashOfConfig":"38"},{"size":791,"mtime":1616422651224,"results":"49","hashOfConfig":"38"},{"size":1377,"mtime":1616422526441,"results":"50","hashOfConfig":"38"},{"size":988,"mtime":1616058534931,"results":"51","hashOfConfig":"38"},{"size":1169,"mtime":1615473049123,"results":"52","hashOfConfig":"38"},{"size":504,"mtime":1616404863336,"results":"53","hashOfConfig":"38"},{"size":1379,"mtime":1616405756058,"results":"54","hashOfConfig":"38"},{"size":1610,"mtime":1616420709871,"results":"55","hashOfConfig":"38"},{"size":7099,"mtime":1616421260235,"results":"56","hashOfConfig":"38"},{"size":1896,"mtime":1616420701948,"results":"57","hashOfConfig":"38"},{"size":820,"mtime":1616419725585,"results":"58","hashOfConfig":"38"},{"size":1410,"mtime":1616422097364,"results":"59","hashOfConfig":"38"},{"size":3332,"mtime":1616422879306,"results":"60","hashOfConfig":"38"},{"size":2557,"mtime":1616420692321,"results":"61","hashOfConfig":"38"},{"size":605,"mtime":1615917903553,"results":"62","hashOfConfig":"38"},{"size":2199,"mtime":1616420695283,"results":"63","hashOfConfig":"38"},{"size":1701,"mtime":1616420698203,"results":"64","hashOfConfig":"38"},{"size":5764,"mtime":1616421005588,"results":"65","hashOfConfig":"38"},{"size":1358,"mtime":1616420047918,"results":"66","hashOfConfig":"38"},{"size":6714,"mtime":1616420621726,"results":"67","hashOfConfig":"38"},{"size":1488,"mtime":1616419725585,"results":"68","hashOfConfig":"38"},{"size":3188,"mtime":1616423087970,"results":"69","hashOfConfig":"38"},{"size":8108,"mtime":1616420984283,"results":"70","hashOfConfig":"38"},{"size":2683,"mtime":1616420624678,"results":"71","hashOfConfig":"38"},{"size":1147,"mtime":1616421077074,"results":"72","hashOfConfig":"38"},{"size":516,"mtime":1616392360894,"results":"73","hashOfConfig":"38"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},"1qcl4f4",{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"91","usedDeprecatedRules":"76"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"94","usedDeprecatedRules":"76"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"97","usedDeprecatedRules":"76"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"112","usedDeprecatedRules":"76"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"115","usedDeprecatedRules":"76"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"118","usedDeprecatedRules":"76"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"121","usedDeprecatedRules":"76"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"126","usedDeprecatedRules":"76"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"129","usedDeprecatedRules":"76"},{"filePath":"130","messages":"131","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"132","usedDeprecatedRules":"76"},{"filePath":"133","messages":"134","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"135","messages":"136","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"137","usedDeprecatedRules":"76"},{"filePath":"138","messages":"139","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"140","usedDeprecatedRules":"76"},{"filePath":"141","messages":"142","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"143","usedDeprecatedRules":"76"},{"filePath":"144","messages":"145","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"146","messages":"147","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"148","messages":"149","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"150","usedDeprecatedRules":"76"},{"filePath":"151","messages":"152","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"153","messages":"154","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"155","usedDeprecatedRules":"76"},{"filePath":"156","messages":"157","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"158","usedDeprecatedRules":"76"},{"filePath":"159","messages":"160","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"161","messages":"162","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},"D:\\Projects\\google-form\\src\\index.js",[],["163","164"],"D:\\Projects\\google-form\\src\\App.js",[],"D:\\Projects\\google-form\\src\\serviceWorker.js",[],"D:\\Projects\\google-form\\src\\pages\\LogIn.js",["165","166","167"],"D:\\Projects\\google-form\\src\\pages\\HomePage.js",[],"D:\\Projects\\google-form\\src\\componants\\Header.js",[],"D:\\Projects\\google-form\\src\\componants\\DocsHomescreen.js",[],"D:\\Projects\\google-form\\src\\componants\\FreeTamplate.js",["168","169"],"import React from 'react'\r\nimport {\r\n    BrowserRouter as Router,\r\n    Link\r\n} from \"react-router-dom\";\r\nexport const FreeTamplate = () => {\r\n    const [formOptions, setformOptions] = React.useState([\"Blanks\", \"Contact Information\", \"Rsvp\", \"Party Invite\", \"T-shirt Sign up\", \"Event Registration\"])\r\n\r\n    return (\r\n        <div>\r\n            <div className=\"p-4 flex items-center justify-center bg-gray-100  \">\r\n                <div className=\"w-full max-w-screen-md mx-auto\">\r\n                    <fieldset className=\"space-y-6\">\r\n                        <div className=\"flex items-center justify-between py-4 border-b border-gray-300\">\r\n                            <div className=\"sm:font-semibold font-extrabold text-2xl\">Start a new form </div>\r\n                            <div className=\"flex items-center justify-center\"><span className=\"hover:bg-gray-400 p-2 rounded-md cursor-pointer hidden sm:block\" >Tamplate Gallery <svg className=\"w-4 mx-2 inline\" xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\r\n                                <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth=\"2\" d=\"M7 16V4m0 0L3 8m4-4l4 4m6 0v12m0 0l4-4m-4 4l-4-4\" />\r\n                            </svg> </span>\r\n\r\n                                <span className=\"rounded-full cursor-pointer hover:bg-gray-400  p-2 hidden sm:block\"><svg className=\"w-8 mx-2 inline    text-gray-500\" xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\r\n                                    <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth=\"2\" d=\"M12 5v.01M12 12v.01M12 19v.01M12 6a1 1 0 110-2 1 1 0 010 2zm0 7a1 1 0 110-2 1 1 0 010 2zm0 7a1 1 0 110-2 1 1 0 010 2z\" />\r\n                                </svg></span>\r\n                            </div>\r\n                        </div>\r\n                        <Link to=\"/form\">\r\n                            <div className=\"grid grid-col gap-6\">\r\n                                {formOptions.map((data, i) => {\r\n                                    return (<div key={i}>\r\n                                        <div className=\" relative flex flex-col p-1 bg-white  rounded-lg shadow-md cursor-pointer \r\n                                    border-2  hover:border-blue-400  \">\r\n                                            <img src={process.env.PUBLIC_URL + '/ques.jpg'} alt=\"a\" className=\"md:w-full md:h-auto rounded-lg\" />\r\n                                            <span className=\"font-semibold\">{data}</span>\r\n                                        </div>\r\n                                    </div>)\r\n                                })\r\n                                }\r\n                            </div>\r\n                        </Link >\r\n                    </fieldset>\r\n                </div>\r\n            </div >\r\n\r\n        </div >\r\n    )\r\n}\r\n","D:\\Projects\\google-form\\src\\componants\\RecentForms.js",["170"],"import React from 'react'\r\nimport { useAuth } from '../Context/AuthContext'\r\nimport { fireDb } from '../firebase'\r\nimport { OldFormslist } from './OldFormslist'\r\n\r\nexport const RecentForms = () => {\r\n    const { currentUser } = useAuth()\r\n\r\n\r\n    const [allFormData, setallFormData] = React.useState()\r\n    React.useEffect(() => {\r\n\r\n\r\n        const todoRef = fireDb.ref(currentUser.uid).child(\"Forms\");\r\n        todoRef.on('value', (snapshot) => {\r\n            const todos = snapshot.val();\r\n            const todoList = [];\r\n            for (let id in todos) {\r\n                todoList.push({ id, ...todos[id] });\r\n            }\r\n\r\n\r\n\r\n\r\n            setallFormData(todoList);\r\n\r\n        });\r\n    }, [])\r\n\r\n\r\n\r\n    if (allFormData) {\r\n\r\n        return (\r\n            <div className=\"p-4 flex items-center justify-center \">\r\n                <div className=\"w-full max-w-screen-md mx-auto\">\r\n                    <fieldset className=\"space-y-6\">\r\n                        <div className=\"flex items-center justify-between py-4 border-b border-gray-300\">\r\n                            <div className=\"sm:font-semibold font-extrabold text-2xl\">Recent forms </div>\r\n\r\n                            <div className=\"flex items-center justify-center\"><span className=\" hidden sm:inline hover:bg-gray-300 px-2 rounded-md cursor-pointer\" > Owned by anyone <svg className=\"w-4 mx-2 inline\" xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\r\n                                <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth=\"2\" d=\"M19 9l-7 7-7-7\" />\r\n                            </svg></span>\r\n\r\n                                <span className=\"rounded-full cursor-pointer hover:bg-gray-400  p-2 \"><svg className=\" hidden sm:inline w-8 mx-2     text-gray-800\" xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\r\n                                    <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth=\"2\" d=\"M3 10h18M3 14h18m-9-4v8m-7 0h14a2 2 0 002-2V8a2 2 0 00-2-2H5a2 2 0 00-2 2v8a2 2 0 002 2z\" />\r\n                                </svg></span>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"grid grid-col-2 gap-4\">\r\n                            {allFormData.map(data => {\r\n                                return <OldFormslist data={data} key={data.id} />\r\n                            })}\r\n\r\n                        </div>\r\n                    </fieldset>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    return (\r\n        <div>Loading</div>\r\n    )\r\n}\r\n\r\n","D:\\Projects\\google-form\\src\\componants\\OldFormslist.js",["171","172"],"import React, { useState } from 'react'\r\nimport { Link } from 'react-router-dom'\r\n\r\nexport const OldFormslist = ({ data }) => {\r\n    const [isOpen, setIsOpen] = useState(false)\r\n\r\n    return (\r\n        <Link to={`/form/a/${data.uniqueID}`} className=\"block h-42 w-42   border-2 border-gray-700  sm:border-gray-400 hover:border-blue-400 hover:text-blue-700  hover:font-semibold  rounded\">\r\n            <div className=\"  flex flex-col justify-evenly \">\r\n                <div className=\" m-2  overflow-hidden w-auto\">\r\n\r\n                    <img src={process.env.PUBLIC_URL + '/ques.jpg'} alt=\"a\" className=\" rounded-lg\" />\r\n\r\n                </div>\r\n                <div className=\"px p-2  \">\r\n                    <svg className=\"text-white  w-4 h-4 rounded-2xl bg-purple-600 inline\" xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\r\n                        <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M9 17v-2m3 2v-4m3 4v-6m2 10H7a2 2 0 01-2-2V5a2 2 0 012-2h5.586a1 1 0 01.707.293l5.414 5.414a1 1 0 01.293.707V19a2 2 0 01-2 2z\" />\r\n                    </svg>  <span className=\"font-semibold  inline\">{data.title ? data.title : \"Untitle Form\"}</span>\r\n                </div>\r\n            </div>\r\n        </Link >\r\n\r\n    )\r\n}\r\n","D:\\Projects\\google-form\\src\\pages\\FormPage.js",["173","174","175"],"D:\\Projects\\google-form\\src\\Context\\FormContext.js",[],"D:\\Projects\\google-form\\src\\routers\\AllRouters.js",[],"D:\\Projects\\google-form\\src\\firebase.js",[],"D:\\Projects\\google-form\\src\\Context\\AuthContext.js",[],"D:\\Projects\\google-form\\src\\routers\\PrivateRoute.js",[],"D:\\Projects\\google-form\\src\\pages\\SubmittedFormPage.js",["176","177","178"],"import React, { useState } from 'react'\r\nimport { FormHome } from '../componants/SubmittedForm/FormHome'\r\nimport { useAuth } from '../Context/AuthContext'\r\n\r\nimport { fireDb } from '../firebase'\r\n\r\n\r\nexport const SubmittedFormPage = ({ match }) => {\r\n    const thisID = match.params.id\r\n\r\n    const { currentUser } = useAuth()\r\n\r\n    // this is the page where question and responces are shown\r\n\r\n    const [allFormData, setallFormData] = useState()\r\n    React.useEffect(() => {\r\n\r\n\r\n        const todoRef = fireDb.ref(currentUser.uid).child(\"Forms\");\r\n        todoRef.on('value', (snapshot) => {\r\n            const todos = snapshot.val();\r\n            const todoList = [];\r\n            for (let id in todos) {\r\n                todoList.push({ id, ...todos[id] });\r\n            }\r\n\r\n            let newArr = todoList.filter((data) => {\r\n\r\n                return (\r\n                    data.uniqueID === thisID)\r\n\r\n            })\r\n\r\n\r\n            setallFormData(newArr);\r\n\r\n        });\r\n    }, [])\r\n\r\n\r\n\r\n    const [responceList, setResponceList] = useState()\r\n\r\n\r\n\r\n    if (allFormData) {\r\n\r\n        return (\r\n            <div>\r\n                {allFormData.map((allData, i) => {\r\n                    return <FormHome data={allData} key={i} />\r\n                })}\r\n            </div>\r\n        )\r\n    }\r\n    return (\r\n        <div>\r\n            Loading\r\n        </div>\r\n    )\r\n}\r\n","D:\\Projects\\google-form\\src\\componants\\SubmittedForm\\FormHome.js",["179","180"],"import React, { useState } from 'react'\r\nimport { SubmittedFormTitle } from './SubmittedFormTitle'\r\nimport { SubmittedFormHeader } from './SubmittedFormHeader'\r\nimport { SubmittedFormQuestionBox } from './SubmittedFormQuestionBox'\r\nimport { Responses } from './Responses'\r\n\r\nexport const FormHome = ({ data }) => {\r\n\r\n\r\n    //     color: \"\"\r\n    // content: [{…}]\r\n    // createdBy: \"currentUser\"\r\n    // discription: \"\"\r\n    // id: \"-MVtxZfKRksQohvXmmgN\"\r\n    // title: \"\"\r\n    // uniqueID: \"0t80r7qmo\r\n\r\n    const [idOpen, setIdOpen] = useState(1)\r\n\r\n    const [questions, setquestions] = useState(data.content)\r\n\r\n    return (\r\n        <div className=\"bg-gray-300 min-h-screen font-bold \">\r\n            <SubmittedFormHeader id={data.uniqueID} value={{ idOpen, setIdOpen }} title={data.title} discription={data.discription} />\r\n\r\n\r\n            {\r\n                (idOpen == 1) ? < div className=\"form-container mx-auto p-4\">\r\n                    <SubmittedFormTitle title={data.title} />\r\n\r\n                    {questions.map((question, i) => {\r\n                        return <SubmittedFormQuestionBox data={question} color={data.color} />\r\n                    })}\r\n\r\n\r\n                </div>\r\n                    :\r\n                    (data.responceList ? < Responses data={data} questions={questions} /> : <div className=\"flex justify-center\">\r\n                        No Data subbmited Yet\r\n                </div>\r\n                    )\r\n            }\r\n\r\n            <center>This content is neither created nor endorsed by MeForm. Never subbmit your passwoed </center>\r\n        </div >\r\n    )\r\n}\r\n\r\n\r\n","D:\\Projects\\google-form\\src\\componants\\SubmittedForm\\SubmittedFormHeader.js",["181"],"import React from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport QRCode from 'react-qr-code';\r\nimport { useAuth } from '../../Context/AuthContext';\r\n\r\nexport const SubmittedFormHeader = ({ id, value, title, }) => {\r\n    const { idOpen, setIdOpen } = value\r\n\r\n\r\n    const [showSideBar, setShowSideBar] = React.useState(false)\r\n    return (\r\n        <div className=\"border-b shadow-lg \" >\r\n            {showSideBar ? <SideBar value={{ showSideBar, setShowSideBar }} id={id} /> : null}\r\n\r\n            <header className=\" md:flex md:items-center md:justify-between p-4 pb-0  md:pb-4\">\r\n                <div className=\" md:flex md:items-center\">\r\n                    <Link to=\"/\" className=\"mx-4 my-auto text-gray-800\"><svg className=\"text-gray-800 h-4 w-4 inline\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 20 20\" fill=\"currentColor\">\r\n                        <path d=\"M10.707 2.293a1 1 0 00-1.414 0l-7 7a1 1 0 001.414 1.414L4 10.414V17a1 1 0 001 1h2a1 1 0 001-1v-2a1 1 0 011-1h2a1 1 0 011 1v2a1 1 0 001 1h2a1 1 0 001-1v-6.586l.293.293a1 1 0 001.414-1.414l-7-7z\" />\r\n                    </svg></Link>\r\n                    {title.length > 0 ? title : \"Untitled Form\"}\r\n                </div>\r\n                <nav className=\"w-auto text-gray-700 flex justify-center flex-row items-center\r\n                \">\r\n\r\n\r\n                    <button className=\"mx-4 my-4 inline-flex  text-white bg-indigo-500 border-0 py-2 px-8 focus:outline-none hover:bg-indigo-600 rounded text-lg \" onClick={() => { setShowSideBar(true) }}>\r\n                        {/* <Link to={`/form/b/fill/${id}`} className=\"\" >Share</Link></button> */}\r\n\r\nShare</button>\r\n\r\n\r\n                    <span>\r\n                        <img alt=\"Placeholder\" className=\"inline mx-4 rounded-full\" src=\"https://picsum.photos/32/32/?random\" />\r\n\r\n                    </span>\r\n\r\n\r\n\r\n\r\n                </nav>\r\n\r\n\r\n\r\n            </header >\r\n\r\n\r\n            <div className=\"flex justify-center \">\r\n                <div onClick={() => { setIdOpen(1) }} className={\"mx-4 p-4 py-2  cursor-pointer\" +\r\n                    (idOpen === 1 ? \" font-semibold border-blue-600 border-b-4 text-blue-600\" : \"\")} >  Questions</div>\r\n\r\n                <div onClick={() => { setIdOpen(2) }} className={\"mx-4 p-4 py-2  cursor-pointer\" +\r\n                    (idOpen === 2 ? \" font-semibold border-blue-600 border-b-4 text-blue-600\" : \"\")}>  Responses</div>\r\n            </div>\r\n        </div >\r\n\r\n\r\n\r\n\r\n\r\n\r\n    )\r\n}\r\n\r\n\r\n\r\n\r\n\r\nconst SideBar = ({ value, id }) => {\r\n    const { currentUser } = useAuth()\r\n\r\n\r\n\r\n    const domain = window.location.hostname\r\n\r\n    const { showSideBar, setShowSideBar } = value\r\n    const tourl = `https%3A%2F%2F${domain}%2Fform%2Fb%2Ffill%2F${id}%2F${currentUser.uid}`\r\n    const text = `Fill%20this%20survey%20${tourl}`\r\n    return (\r\n        <transition name=\"slide z-50 slide-enter-active transition-slow ease-in transition-transform slide-enter \">\r\n            <div v-if=\"showmenu\">\r\n                <button onClick={() => { setShowSideBar(false) }} className=\"fixed top-0 right-0 bottom-0 left-0 h-full w-full bg-black opacity-50\">X</button>\r\n                <div onClick={() => { setShowSideBar(false) }} className=\" md:w-1/2  w-10/12 min-h-screen p-8 bg-gray-200 fixed right-0 top-0 shadow-2xl ease-in-out  transition-transform transition-medium\">\r\n\r\n\r\n                    <p className=\"md:mt-32 text-center  text-gray-600 flex flex-col justify-center items-center  text-xl\" >\r\n\r\n                        <a href={`/form/b/fill/${id}/${currentUser.uid}`} target=\"_blank\" rel=\"noreferrer noopener\">link to form</a>\r\n\r\n\r\n                        <a href={`https://api.whatsapp.com/send?text=${text}`} target=\"_blank\" rel=\"noreferrer noopener\" aria-label=\"Share on WhatsApp\" title=\"Share on WhatsApp\" className=\"block py-3 px-2 my-2 bg-green-300 text-gray-800 rounded-lg font-bold  border border-green-600 w-64\"> <svg className=\"w-4 h-4 inline mx-2\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\"><path d=\"M20.1 3.9C17.9 1.7 15 .5 12 .5 5.8.5.7 5.6.7 11.9c0 2 .5 3.9 1.5 5.6L.6 23.4l6-1.6c1.6.9 3.5 1.3 5.4 1.3 6.3 0 11.4-5.1 11.4-11.4-.1-2.8-1.2-5.7-3.3-7.8zM12 21.4c-1.7 0-3.3-.5-4.8-1.3l-.4-.2-3.5 1 1-3.4L4 17c-1-1.5-1.4-3.2-1.4-5.1 0-5.2 4.2-9.4 9.4-9.4 2.5 0 4.9 1 6.7 2.8 1.8 1.8 2.8 4.2 2.8 6.7-.1 5.2-4.3 9.4-9.5 9.4zm5.1-7.1c-.3-.1-1.7-.9-1.9-1-.3-.1-.5-.1-.7.1-.2.3-.8 1-.9 1.1-.2.2-.3.2-.6.1s-1.2-.5-2.3-1.4c-.9-.8-1.4-1.7-1.6-2-.2-.3 0-.5.1-.6s.3-.3.4-.5c.2-.1.3-.3.4-.5.1-.2 0-.4 0-.5C10 9 9.3 7.6 9 7c-.1-.4-.4-.3-.5-.3h-.6s-.4.1-.7.3c-.3.3-1 1-1 2.4s1 2.8 1.1 3c.1.2 2 3.1 4.9 4.3.7.3 1.2.5 1.6.6.7.2 1.3.2 1.8.1.6-.1 1.7-.7 1.9-1.3.2-.7.2-1.2.2-1.3-.1-.3-.3-.4-.6-.5z\"></path></svg>Whatsapp</a>\r\n\r\n                        <a href={`https://twitter.com/intent/tweet/?text=${text}`} target=\"_blank\" rel=\"noreferrer noopener\" aria-label=\"Share on Twitter\" title=\"Share on Twitter\" className=\"block py-3 px-2 my-2 bg-green-300 text-gray-800 rounded-lg font-bold  border border-green-600 w-64\"> <svg className=\"w-4 h-4 inline mx-2\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\"><path d=\"M23.44 4.83c-.8.37-1.5.38-2.22.02.93-.56.98-.96 1.32-2.02-.88.52-1.86.9-2.9 1.1-.82-.88-2-1.43-3.3-1.43-2.5 0-4.55 2.04-4.55 4.54 0 .36.03.7.1 1.04-3.77-.2-7.12-2-9.36-4.75-.4.67-.6 1.45-.6 2.3 0 1.56.8 2.95 2 3.77-.74-.03-1.44-.23-2.05-.57v.06c0 2.2 1.56 4.03 3.64 4.44-.67.2-1.37.2-2.06.08.58 1.8 2.26 3.12 4.25 3.16C5.78 18.1 3.37 18.74 1 18.46c2 1.3 4.4 2.04 6.97 2.04 8.35 0 12.92-6.92 12.92-12.93 0-.2 0-.4-.02-.6.9-.63 1.96-1.22 2.56-2.14z\"></path></svg>Twitter</a>\r\n\r\n                        <a href={`https://www.linkedin.com/sharing/share-offsite/?url=${tourl}`} target=\"_blank\" rel=\"noreferrer noopener\" aria-label=\"Share on LinkdIn\" title=\"Share on LinkdIn\" className=\"block py-3 px-2 my-2 bg-green-300 text-gray-800 rounded-lg font-bold  border border-green-600 w-64\"><svg className=\"w-4 h-4 inline mx-2\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\"><path d=\"M6.5 21.5h-5v-13h5v13zM4 6.5C2.5 6.5 1.5 5.3 1.5 4s1-2.4 2.5-2.4c1.6 0 2.5 1 2.6 2.5 0 1.4-1 2.5-2.6 2.5zm11.5 6c-1 0-2 1-2 2v7h-5v-13h5V10s1.6-1.5 4-1.5c3 0 5 2.2 5 6.3v6.7h-5v-7c0-1-1-2-2-2z\"></path></svg>LinkdIn</a>\r\n\r\n                        <a href={`https://telegram.me/share/url?text=&url=${tourl}`} target=\"_blank\" rel=\"noreferrer noopener\" aria-label=\"Share on Telegram\" title=\"Share on Telegram\" className=\"block py-3 px-2 my-2 bg-green-300 text-gray-800 rounded-lg font-bold  border border-green-600 w-64\"><svg className=\"w-4 h-4 inline mx-2\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\"><path d=\"M.707 8.475C.275 8.64 0 9.508 0 9.508s.284.867.718 1.03l5.09 1.897 1.986 6.38a1.102 1.102 0 0 0 1.75.527l2.96-2.41a.405.405 0 0 1 .494-.013l5.34 3.87a1.1 1.1 0 0 0 1.046.135 1.1 1.1 0 0 0 .682-.803l3.91-18.795A1.102 1.102 0 0 0 22.5.075L.706 8.475z\"></path></svg> Telegram</a>\r\n\r\n                        <div className=\" my-8\"> <QRCode value={`https://${domain}/form/b/fill/${id}`} />,</div>\r\n\r\n\r\n\r\n\r\n                    </p>\r\n                </div >\r\n            </div >\r\n        </transition >\r\n    )\r\n}\r\n","D:\\Projects\\google-form\\src\\componants\\SubmittedForm\\SubmittedFormQuestionBox.js",["182"],"import React from 'react'\r\n\r\nexport const SubmittedFormQuestionBox = ({ data, color }) => {\r\n    //     options: (2) [{…}, {…}]\r\n    // question: \"11\"\r\n    // questiontype: \"Multiple Choice\"\r\n    // required: true\r\n\r\n\r\n    if (data) {\r\n        return (\r\n            <div className=\"container mx-auto my-4 \">\r\n                <div className=\"  container mx-auto border-l-8 rounded-lg   my-8  p-4 shadow-sm bg-white border-blue-400 border \" style={{ borderColor: ` ${color ? color : \"#F1F1F0\"}` }} >\r\n                    <div className=\" p-4   text-gray-700 leading-tight \" >{data.question}\r\n                        {data.required ? <span className=\"mx-8  text-red-500\">* required</span> : null}</div>\r\n\r\n\r\n                    {data.options.map((option, i) => {\r\n                        return <Box checkOption={option} key={i} />\r\n                    })}\r\n\r\n                </div >\r\n            </div>\r\n        )\r\n    }\r\n    else {\r\n        return <div>Loading</div>\r\n    }\r\n}\r\n\r\n\r\n\r\nconst Box = ({ checkOption }) => {\r\n\r\n    const [checkBox, setCheckBox] = React.useState(false)\r\n\r\n    return (\r\n        <label className=\"custom-label p-2 flex w-full\">\r\n            <input type=\"checkbox\" className=\"hidden\" checked={checkBox}\r\n            />\r\n\r\n\r\n            <div className=\"w-6 h-6 border inline-block align-center mx-4 my-auto rounded-lg \">{!checkBox ? \"\" : <svg className=\"bg-blue-700 text-white rounded-lg\" xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\r\n                <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth=\"2\" d=\"M5 13l4 4L19 7\" />\r\n            </svg>}\r\n\r\n            </div>\r\n            <div className=\"inline  outline-none  border-gray-400 rounded py-1 px-2 w-2/3 bg-white text-lg text-gray-700 placeholder-gray-400 focus:outline-none focus:shadow-outline\"  >  {checkOption}  </div>\r\n        </label>\r\n\r\n    )\r\n}\r\n","D:\\Projects\\google-form\\src\\componants\\SubmittedForm\\SubmittedFormTitle.js",[],"D:\\Projects\\google-form\\src\\pages\\SharedFormPage.js",["183","184","185","186"],"import React, { useState } from 'react'\r\n\r\nimport { fireDb } from '../firebase'\r\n\r\nimport { SharedForm } from '../componants/SharedForm/SharedForm'\r\nimport { useAuth } from '../Context/AuthContext'\r\n\r\nexport const SharedFormPage = ({ match }) => {\r\n\r\n    // This is shared form an will be shown when user share link with someOne\r\n    const { currentUser } = useAuth()\r\n\r\n\r\n    const uid = match.params.uid\r\n    const thisID = match.params.id\r\n\r\n\r\n    const [allFormData, setallFormData] = useState()\r\n    React.useEffect(() => {\r\n\r\n\r\n        const todoRef = fireDb.ref(uid).child(\"Forms\");\r\n        todoRef.on('value', (snapshot) => {\r\n            const todos = snapshot.val();\r\n            const todoList = [];\r\n            for (let id in todos) {\r\n                todoList.push({ id, ...todos[id] });\r\n            }\r\n\r\n            let newArr = todoList.filter((data) => {\r\n\r\n                return (\r\n                    data.uniqueID === thisID)\r\n\r\n            })\r\n            setallFormData(newArr);\r\n\r\n        });\r\n    }, [])\r\n\r\n    const [responceList, setResponceList] = useState()\r\n\r\n    if (allFormData) {\r\n\r\n        return (\r\n            <div>\r\n                {allFormData.map((allData, i) => {\r\n                    return <SharedForm data={allData} key={i} />\r\n                })}\r\n            </div>\r\n        )\r\n    }\r\n    return (\r\n        <div>\r\n            Loading\r\n        </div>\r\n    )\r\n\r\n}\r\n","D:\\Projects\\google-form\\src\\componants\\SharedForm\\SharedForm.js",["187","188","189","190"],"import React, { useState, useEffect } from 'react'\r\nimport { useAuth } from '../../Context/AuthContext'\r\nimport { fireDb } from '../../firebase'\r\nimport { SaveError } from '../FormModule/SaveErrors'\r\nimport { SubmittedFormQuestionBox } from '../SubmittedForm/SubmittedFormQuestionBox'\r\nimport { SubmittedFormTitle } from '../SubmittedForm/SubmittedFormTitle'\r\nimport { SharedFormQuestionBox } from './SharedFormQuestionBox'\r\nimport { SubmitedForm } from './SubmitedForm'\r\n\r\nexport const SharedForm = ({ data }) => {\r\n\r\n    const { currentUser } = useAuth()\r\n\r\n    const [formSubbmited, setformSubbmited] = useState(() => {\r\n        var retrievedObject = localStorage.getItem('form');\r\n\r\n        if (retrievedObject) {\r\n\r\n            return retrievedObject.includes(data.uniqueID);\r\n        }\r\n\r\n    })\r\n\r\n    const [responceList, setresponceList] = useState(() => {\r\n        let val = []\r\n        for (let i = 0; i < data.content.length; i++) {\r\n            val.push(0)\r\n        }\r\n        return val\r\n    })\r\n\r\n\r\n    const [iserror, setiserror] = useState(false)\r\n\r\n    const onSubmit = () => {\r\n\r\n        let checkRequired = false\r\n        for (let i = 0; i < data.content.length; i++) {\r\n            const element = data.content[i];\r\n\r\n\r\n            if (element.required && (responceList[i] === 0)) {\r\n                checkRequired = true\r\n\r\n            }\r\n            else {\r\n                checkRequired = false\r\n\r\n            }\r\n        }\r\n\r\n        if (checkRequired) {\r\n            setiserror(true)\r\n            setTimeout(() => {\r\n                setiserror(false)\r\n\r\n            }, 3000);\r\n        }\r\n        else {\r\n            console.log(data)\r\n            const formdataRef = fireDb.ref(data.createdBy).child('Forms');\r\n            const thisformref = formdataRef.child(data.id).child('responceList')\r\n            thisformref.push(responceList)\r\n            setformSubbmited(true)\r\n            var retrievedObject = localStorage.getItem('form');\r\n\r\n            localStorage.setItem(\"form\", retrievedObject ? JSON.stringify([...retrievedObject, data.uniqueID]) : JSON.stringify([data.uniqueID]))\r\n        }\r\n\r\n\r\n\r\n    }\r\n\r\n\r\n    const [questions, setquestions] = useState(data.content)\r\n\r\n\r\n    if (formSubbmited) {\r\n        return <div><SubmitedForm title={data.title} setformSubbmited={setformSubbmited} /></div>\r\n    }\r\n\r\n\r\n    return (\r\n        <div>\r\n            <div className=\"mt-16\">\r\n                <SaveError msg={\"* marked fields are required\"} show={iserror} />\r\n\r\n                <SubmittedFormTitle title={data.title} />\r\n\r\n                {/* <SubmittedFormQuestionBox />  */}\r\n                {questions.map((question, i) => {\r\n                    return <SharedFormQuestionBox id={i} data={question} color={data.color} value={{ responceList, setresponceList }} />\r\n                })}\r\n                <div className=\"container mx-auto \">\r\n                    <button onClick={() => { onSubmit() }} className=\"focus:outline-none  py-4 font-semibold focus:shadow  text-xl w-full md:w-auto bg-green-400 text-white px-16 transition-all duration-300 shadow-lg hover:shadow-xl to-green-500 rounded-lg\">Submit </button>\r\n                </div>\r\n            </div>\r\n            <center>This content is neither created nor endorsed by MeForm. Never subbmit your passwoed </center>\r\n        </div>\r\n    )\r\n}\r\n","D:\\Projects\\google-form\\src\\componants\\SharedForm\\SharedFormQuestionBox.js",["191"],"import React, { useState } from 'react'\r\n\r\nexport const SharedFormQuestionBox = ({ data, color, id, value }) => {\r\n    //     options: (2) [{…}, {…}]\r\n    // question: \"11\"\r\n    // questiontype: \"Multiple Choice\"\r\n    // required: true\r\n\r\n    const { responceList, setresponceList } = value\r\n\r\n    const updateResponce = (a, b) => {\r\n        let newArr = [...responceList]\r\n        newArr[b] = ++a\r\n        setresponceList(newArr)\r\n    }\r\n\r\n    const [idSelected, setidSelected] = useState()\r\n\r\n    const handelChange = (a) => {\r\n\r\n\r\n\r\n        setidSelected(a)\r\n        updateResponce(a, id)\r\n\r\n    }\r\n\r\n\r\n\r\n\r\n    return (\r\n        <div className=\"container mx-auto my-4 \">\r\n            <div className=\" relative container mx-auto border-l-8 rounded-lg   my-8  p-4 shadow-sm bg-white border-blue-400 border \" style={{ borderColor: ` ${color ? color : \"#F1F1F0\"}` }} >\r\n                <div className=\" p-4   text-gray-700 leading-tight \" >{data.question}\r\n                    {data.required ? <span className=\"mx-8  text-red-500\">* required</span> : null}</div>\r\n\r\n\r\n                {data.options.map((option, i) => {\r\n                    return <Box checkOption={option} key={i} index={i} updateResponce={updateResponce} handelChange={handelChange} isSelected={idSelected} />\r\n                })}\r\n\r\n            </div >\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\n\r\nconst Box = ({ checkOption, updateResponce, handelChange, index, isSelected }) => {\r\n    const [checkBox, setCheckBox] = useState(false)\r\n\r\n    React.useEffect(() => {\r\n        if (isSelected === index) {\r\n            setCheckBox(true)\r\n        }\r\n        else {\r\n            setCheckBox(false)\r\n        }\r\n    }, [handelChange])\r\n\r\n    return (\r\n        // <label className={`\"flex items-center mt-3 py-5 hover:shadow-2xl px-6 border-2  rounded-md shadow-xl  transition-all duration-500 bg-white w-full  \" ${checkBox ? \" border-green-500\" : \"  border-gray-200\"}`}>\r\n        //     <input type=\"checkbox\" className=\"form-checkbox h-5 w-5 text-green-600\" onClick={() => handelChange(index)} checked={checkBox} /><span className=\"ml-2 text-gray-700\">{checkOption}</span>\r\n        // </label >\r\n\r\n\r\n\r\n        <label className={`flex items-center mt-3  w-full border p-2 transition-all duration-500 rounded-md   ${checkBox ? \"border-green-500\" : \"border-gray-200\"}`}>\r\n            <input type=\"checkbox\" className=\"form-checkbox h-5 w-5 text-green-600\" onClick={() => handelChange(index)} checked={checkBox} /><span className=\"ml-2 text-gray-700\">{checkOption}</span>\r\n        </label>\r\n    )\r\n}\r\n\r\n\r\n\r\n","D:\\Projects\\google-form\\src\\componants\\SharedForm\\SubmitedForm.js",[],"D:\\Projects\\google-form\\src\\componants\\SubmittedForm\\Responses.js",["192","193","194","195","196","197","198","199"],"import React, { useState } from 'react'\r\nimport { ResponsesBox } from './ResponsesBox';\r\n\r\nexport const Responses = ({ data, questions }) => {\r\n\r\n    // function transposeArray(array, arrayLength) {\r\n    //     const newArray = [];\r\n    //     for (var i = 0; i < array.length; i++) {\r\n    //         newArray.push([]);\r\n    //     };\r\n\r\n    //     for (var i = 0; i < array.length; i++) {\r\n    //         for (var j = 0; j < arrayLength; j++) {\r\n    //             newArray[j].push(array[i][j]);\r\n    //         };\r\n    //     };\r\n\r\n    //     return newArray;\r\n    // }\r\n\r\n\r\n\r\n    const [responsesArr, setResponsesArr] = useState(() => {\r\n\r\n        let todoList = []\r\n        for (let id in data.responceList) {\r\n            todoList.push([...data.responceList[id]]);\r\n        }\r\n        todoList = todoList[0].map((_, colIndex) => todoList.map(row => row[colIndex]));\r\n        return (todoList);\r\n    })\r\n\r\n    const [totalAns, setTotalAns] = useState(() => {\r\n\r\n        let todoList = []\r\n        for (let id in data.responceList) {\r\n            todoList.push([...data.responceList[id]]);\r\n        }\r\n        return (todoList.length);\r\n    })\r\n\r\n\r\n    React.useEffect(() => {\r\n        let chartarr = []\r\n\r\n        for (let i = 0; i < data.content.length; i++) {\r\n\r\n\r\n            let thisquesAnsArr = Array(data.content[i].options.length)\r\n            const countOccurrences = (arr, val) => arr.reduce((a, v) => (v === val ? a + 1 : a), 0);\r\n            let thisarray = (responsesArr[i])\r\n\r\n        }\r\n    }, [])\r\n\r\n    const countOccurrences = arr => arr.reduce((prev, curr) => (prev[curr] = ++prev[curr] || 1, prev), {});\r\n\r\n\r\n\r\n    if (data.responceList) {\r\n\r\n\r\n\r\n        return (\r\n            <div className=\" container mx-auto\">\r\n\r\n                <div className=\"\">\r\n                    {questions.map((question, i) => {\r\n                        return <ResponsesBox key={i} data={question} color={data.color} allData={data} index={i} responsesArr={countOccurrences(responsesArr[i])} totalVote={totalAns} />\r\n                    })}\r\n                </div>\r\n\r\n            </div>\r\n        )\r\n    }\r\n    return (\r\n\r\n        <div>\r\n            No Data subbmited Yet\r\n        </div>\r\n    )\r\n}\r\n","D:\\Projects\\google-form\\src\\componants\\SubmittedForm\\ResponsesBox.js",["200","201","202"],"import React from 'react'\r\n\r\nexport const ResponsesBox = ({ data, color, allData, index, responsesArr, totalVote }) => {\r\n    //     options: (2) [{…}, {…}]\r\n    // question: \"11\"\r\n    // questiontype: \"Multiple Choice\"\r\n    // required: true\r\n\r\n\r\n\r\n\r\n    return (\r\n\r\n        <div className=\"container mx-auto my-4  \">\r\n            <div className=\"  container mx-auto border-l-8 rounded-lg   my-8   p-4 shadow-sm bg-white border-blue-400 border flex justify-between\" style={{ borderColor: ` ${color ? color : \"#F1F1F0\"}` }} >\r\n\r\n\r\n                <div className=\" md:w-2/3 \">\r\n                    <div className=\" p-4  w-full  text-gray-800 leading-tight text-4xl font-extrabold \" >{data.question}\r\n                        {data.required ? <span className=\"mx-8  text-red-500 font-bold text-xl \">* required</span> : null}</div>\r\n\r\n\r\n                    {data.options.map((option, i) => {\r\n                        return <Box checkOption={option} key={i} volume={responsesArr[++i]} key={i} />\r\n                    })}\r\n                </div>\r\n                <div>\r\n                    {responsesArr[0] ? <div> Skipped By: {responsesArr[0]}</div> : null}\r\n                 Total submission: {totalVote}\r\n                </div>\r\n            </div >\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\n\r\nconst Box = ({ checkOption, volume }) => {\r\n    const [checkBox, setCheckBox] = React.useState(false)\r\n\r\n    return (\r\n        <div className=\" p-2 flex w-full\">\r\n            <div className=\"inline  outline-none border rounded py-1 px-2 w-2/3 bg-white text-sm text-gray-700  \"  > {checkOption}</div>   {(volume ? <span className=\"mx-4\">{volume}</span> : <span className=\"mx-4\">0</span>)}\r\n        </div>\r\n\r\n    )\r\n}\r\n","D:\\Projects\\google-form\\src\\componants\\FormModule\\FormHeader.js",["203","204"],"import React, { useState, useContext } from 'react'\r\nimport {\r\n    Link,\r\n    useHistory\r\n} from \"react-router-dom\";\r\nimport { useAuth } from '../../Context/AuthContext';\r\nimport { ErrorContext } from '../../Context/ErrorContext';\r\nimport { fireDb } from '../../firebase';\r\n\r\nexport const FormHeader = ({ title, id, thiscolor, changeColor, formData }) => {\r\n    let history = useHistory();\r\n    const { iserror, msg } = useContext(ErrorContext)\r\n    const [showError, setshowError] = iserror\r\n    const [errorMessage, seterrorMessage] = msg\r\n\r\n\r\n    const [colorOpen, setColorOpen] = useState(false)\r\n    const { currentUser } = useAuth()\r\n\r\n\r\n    const color = ['#6E3Cf4', '#F1C335', '#F09052', '#54BAAE', '#2D5Cf6', '#B835F6'];\r\n\r\n    const changeThisColor = (value) => {\r\n        changeColor(value)\r\n        setColorOpen(false)\r\n\r\n    }\r\n\r\n\r\n    const saveForm = () => {\r\n        let allClear = false\r\n\r\n        if (formData.title <= 0) {\r\n            setshowError(true)\r\n            seterrorMessage(\"Title can't be empty\")\r\n            setTimeout(() => {\r\n                setshowError(false)\r\n\r\n            }, 3000);\r\n        }\r\n        else {\r\n\r\n            for (let i = 0; i < formData.content.length; i++) {\r\n                const element = formData.content[i];\r\n                if (element.question.length <= 0) {\r\n                    setshowError(true)\r\n                    seterrorMessage(\"Question can't be empty\")\r\n                    setTimeout(() => {\r\n                        setshowError(false)\r\n\r\n                    }, 3000);\r\n                }\r\n                else {\r\n                    let emptyOption = false\r\n                    for (let j = 0; j < element.options.length; j++) {\r\n                        const opt = element.options[j];\r\n                        if (opt.length <= 0) {\r\n                            emptyOption = true\r\n\r\n                        }\r\n\r\n                    } if (emptyOption) {\r\n                        setshowError(true)\r\n                        seterrorMessage(\"Option can't be empty\")\r\n                        setTimeout(() => {\r\n                            setshowError(false)\r\n\r\n                        }, 3000)\r\n                    }\r\n\r\n                    else {\r\n                        allClear = true\r\n\r\n                    }\r\n                }\r\n\r\n\r\n\r\n\r\n            }\r\n            if (allClear) {\r\n                const formdataRef = fireDb.ref(currentUser.uid).child('Forms');\r\n                try {\r\n                    formdataRef.push(formData)\r\n\r\n                    history.push(`/form/a/${formData.uniqueID}`)\r\n                } catch (error) {\r\n                    setshowError(true)\r\n                    seterrorMessage(error)\r\n                    setTimeout(() => {\r\n                        setshowError(false)\r\n\r\n                    }, 3000)\r\n                }\r\n            }\r\n\r\n\r\n        }\r\n\r\n\r\n    }\r\n\r\n\r\n\r\n    return (\r\n        <div className=\"border-b shadow-lg  \" >\r\n\r\n            <header className=\" md:flex mb-2 md:mb-0 md:items-center justify-between p-4 pb-0  md:pb-4 \">\r\n                <div className=\" md:flex md:items-center\">\r\n                    <Link to=\"/\" className=\"mx-4 my-auto text-gray-800\"><svg className=\"text-gray-800 h-4 w-4 inline\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 20 20\" fill=\"currentColor\">\r\n                        <path d=\"M10.707 2.293a1 1 0 00-1.414 0l-7 7a1 1 0 001.414 1.414L4 10.414V17a1 1 0 001 1h2a1 1 0 001-1v-2a1 1 0 011-1h2a1 1 0 011 1v2a1 1 0 001 1h2a1 1 0 001-1v-6.586l.293.293a1 1 0 001.414-1.414l-7-7z\" />\r\n                    </svg></Link>\r\n                    {title ? title : \"Untitled Form\"}\r\n                </div>\r\n\r\n\r\n\r\n\r\n                <nav className=\"w-auto text-gray-700 my-4 md:my-0 flex flex-row justify-between md:justify-end\">\r\n                    <span className=\"mx-2 p-2 rounded-full relative hover:bg-gray-300 \" onClick={() => { setColorOpen(!colorOpen) }}><svg className=\" h-6 inline \" xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\" style={{ color: formData.color }}>\r\n                        <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth=\"2\" d=\"M7 21a4 4 0 01-4-4V5a2 2 0 012-2h4a2 2 0 012 2v12a4 4 0 01-4 4zm0 0h12a2 2 0 002-2v-4a2 2 0 00-2-2h-2.343M11 7.343l1.657-1.657a2 2 0 012.828 0l2.829 2.829a2 2 0 010 2.828l-8.486 8.485M7 17h.01\" />\r\n                    </svg>\r\n\r\n                    </span >\r\n\r\n\r\n                    {colorOpen ? <div id=\"usermenu\" className=\"absolute    z-40  w-auto \" style={{ right: \"25px\", top: '65px' }}>\r\n                        {color.map(color => {\r\n                            return <span onClick={() => { changeThisColor(color) }} className=\"w-auto mx-2 p-2 cursor-pointer  block my-1 \" style={{ backgroundColor: color, right: \"25px\", top: '75px' }}>{color}</span>\r\n                        })}\r\n                    </div> : null}\r\n\r\n                    <span className=\"mx-4\">\r\n                        <button onClick={saveForm} className=\" inline-flex  text-white bg-indigo-500 border-0 py-2 px-8 focus:outline-none hover:bg-indigo-600 rounded text-lg\" style={{ backgroundColor: formData.color }} >Save</button></span>\r\n\r\n\r\n                    <span>\r\n                        <img alt=\"Placeholder\" className=\"inline mx-4 rounded-full\" src=\"https://picsum.photos/32/32/?random\" />\r\n\r\n                    </span>\r\n\r\n\r\n\r\n\r\n                </nav>\r\n\r\n\r\n\r\n            </header >\r\n\r\n\r\n            <div className=\"flex justify-center \">\r\n                <div className=\"mx-4 p-4 py-2 text-blue-500 font-semibold border-blue-600 border-b-4 cursor-pointer \">Questions</div>\r\n                <div className=\"mx-4 p-4 py-2  cursor-pointer \">Responses</div>\r\n            </div>\r\n\r\n\r\n\r\n\r\n        </div >\r\n\r\n\r\n\r\n\r\n\r\n    )\r\n}\r\n","D:\\Projects\\google-form\\src\\componants\\FormModule\\EnterFormTitle.js",[],"D:\\Projects\\google-form\\src\\componants\\FormModule\\BoxQuestionSingle.js",[],"D:\\Projects\\google-form\\src\\componants\\FormModule\\OptionBox.js",["205"],"import React from 'react'\r\nimport { OperationBoxForQuestion } from './OperationBoxForQuestion'\r\n\r\nexport const OptionBox = ({ removeOption, data, index, handelOptionhange, length }) => {\r\n    return (\r\n        <div className=\"p-2 flex w-full md:justify-between\">\r\n            <label className=\"custom-label p-2 flex w-full\">\r\n                <input type=\"checkbox\" className=\"hidden\" defaultChecked={false}\r\n                />\r\n\r\n\r\n                <div className=\" w-4 h-4  md:w-6 md:h-6 border inline-block align-center mx-2 md:mx-4 my-auto rounded-lg \">\r\n                </div>\r\n\r\n                <input type=\"text\" className=\"inline  outline-none border border-gray-400 rounded py-1 px-2 w-full md:w-2/3 bg-white text-sm text-gray-700 placeholder-gray-400 focus:outline-none focus:shadow-outline\" value={data} placeholder=\"Options\" onChange={(e) => { handelOptionhange(e, index) }} />\r\n            </label>\r\n\r\n\r\n            {length <= 1 ? null : <div className=\"  align-center mx-4 my-auto rounded-full p-2 md:p-4 hover:bg-gray-200 hover:text-red-600 \"\r\n                onClick={() => { removeOption(index) }}>\r\n\r\n                <svg className=\"md:w-8 w-4 text-gray-700 cursor-pointer hover:text-red-600 \" xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\r\n                    <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth=\"2\" d=\"M6 18L18 6M6 6l12 12\" />\r\n                </svg>\r\n            </div>}\r\n        </div>\r\n    )\r\n}\r\n","D:\\Projects\\google-form\\src\\componants\\FormModule\\OperationBoxForQuestion.js",["206"],"D:\\Projects\\google-form\\src\\componants\\FormModule\\FormToolBar.js",["207","208","209","210","211"],"import React, { useContext, useState } from 'react'\r\nimport { FormContext } from '../../Context/FormContext'\r\nimport { fireDb } from '../../firebase'\r\nimport {\r\n    useHistory,\r\n} from \"react-router-dom\";\r\nimport { ErrorContext } from '../../Context/ErrorContext';\r\nimport { useAuth } from '../../Context/AuthContext';\r\n\r\n\r\n\r\nexport const FormToolBar = ({ value, id, isThisActive }) => {\r\n    let history = useHistory();\r\n    const { currentUser } = useAuth()\r\n\r\n\r\n    const { iserror, msg } = useContext(ErrorContext)\r\n    const [showError, setshowError] = iserror\r\n    const [errorMessage, seterrorMessage] = msg\r\n\r\n\r\n    const { allQuestions, setAllQuestions } = value\r\n    const { idOfActiveQue, setidOfActiveQue } = isThisActive\r\n\r\n\r\n    const { formData, setFormData } = useContext(FormContext)\r\n\r\n    const [saveWarning, setSaveWarning] = useState(false)\r\n\r\n    function addOne() {\r\n        let value = {\r\n            question: \"\",\r\n            questiontype: \"\",\r\n            required: \"\",\r\n            options: [\"\", \"\"]\r\n\r\n        }\r\n\r\n        setAllQuestions(allQuestions => {\r\n            return [...allQuestions, value]\r\n        })\r\n        setidOfActiveQue(allQuestions.length)\r\n\r\n    }\r\n    function removeOne() {\r\n        let values = [...allQuestions]\r\n        values.splice(id, 1)\r\n        setAllQuestions(values)\r\n\r\n    }\r\n\r\n\r\n\r\n    const submitForm = () => {\r\n\r\n        let allClear = false\r\n\r\n        if (formData.title <= 0) {\r\n            setshowError(true)\r\n            seterrorMessage(\"Title can't be empty\")\r\n            setTimeout(() => {\r\n                setshowError(false)\r\n\r\n            }, 3000);\r\n        }\r\n        else {\r\n\r\n            for (let i = 0; i < formData.content.length; i++) {\r\n                const element = formData.content[i];\r\n                if (element.question.length <= 0) {\r\n                    setshowError(true)\r\n                    seterrorMessage(\"Question can't be empty\")\r\n                    setTimeout(() => {\r\n                        setshowError(false)\r\n\r\n                    }, 3000);\r\n                }\r\n                else {\r\n                    let emptyOption = false\r\n                    for (let j = 0; j < element.options.length; j++) {\r\n                        const opt = element.options[j];\r\n                        if (opt.length <= 0) {\r\n                            emptyOption = true\r\n\r\n                        }\r\n\r\n                    } if (emptyOption) {\r\n                        setshowError(true)\r\n                        seterrorMessage(\"Option can't be empty\")\r\n                        setTimeout(() => {\r\n                            setshowError(false)\r\n\r\n                        }, 3000)\r\n                    }\r\n\r\n                    else {\r\n                        allClear = true\r\n\r\n                    }\r\n                }\r\n\r\n\r\n\r\n\r\n            }\r\n            if (allClear) {\r\n                const formdataRef = fireDb.ref(currentUser.uid).child('Forms');\r\n                try {\r\n                    formdataRef.push(formData)\r\n\r\n                    history.push(`/form/a/${formData.uniqueID}`)\r\n                } catch (error) {\r\n                    setshowError(true)\r\n                    seterrorMessage(error)\r\n                    setTimeout(() => {\r\n                        setshowError(false)\r\n\r\n                    }, 3000)\r\n                }\r\n            }\r\n\r\n\r\n        }\r\n        setSaveWarning(false)\r\n    }\r\n\r\n\r\n\r\n    return (\r\n        <>\r\n            <div className=\"flex flex-row md:flex-col w-full md:w-auto  md:my-4  fixed bottom-0 left-0  md:ml-16 rounded-lg bg-gray-200 justify-around md:static z-40 \">\r\n\r\n\r\n                <div class=\"flex  items-center cursor-pointer rounded-md m-2 \" onClick={() => { addOne() }}><span className=\"rounded-full hover:bg-gray-400 p-2\"><svg className=\"h-8 inline \" xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\r\n                    <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth=\"2\" d=\"M12 9v3m0 0v3m0-3h3m-3 0H9m12 0a9 9 0 11-18 0 9 9 0 0118 0z\" />\r\n                </svg></span></div>\r\n\r\n\r\n\r\n                <div class=\"flex items-center cursor-pointer rounded-md m-2\"><span className=\"rounded-full hover:bg-gray-400 p-2\"><svg className=\"h-8 inline \" xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\r\n                    <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth=\"2\" d=\"M4 16l4.586-4.586a2 2 0 012.828 0L16 16m-2-2l1.586-1.586a2 2 0 012.828 0L20 14m-6-6h.01M6 20h12a2 2 0 002-2V6a2 2 0 00-2-2H6a2 2 0 00-2 2v12a2 2 0 002 2z\" />\r\n                </svg></span></div>\r\n\r\n                <div class=\"flex relative items-center cursor-pointer rounded-md m-2\"><span className=\"rounded-full hover:bg-gray-400 p-2\" onClick={() => { setSaveWarning(true) }}><svg className=\"h-8 inline \" xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\r\n                    <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M8 7H5a2 2 0 00-2 2v9a2 2 0 002 2h14a2 2 0 002-2V9a2 2 0 00-2-2h-3m-1 4l-3 3m0 0l-3-3m3 3V4\" />\r\n                </svg></span>\r\n                    {saveWarning ? <div className=\"save-pop-up \"  >\r\n                        <SavePopUp show={{ saveWarning, setSaveWarning }} saveForm={submitForm} />\r\n                    </div> : null}\r\n                </div>\r\n\r\n\r\n                <div class={`flex items-center  rounded-md m-2  + ${allQuestions ? \" cursor-pointer \" : \" cursor-not-allowed \"}`} onClick={() => { removeOne() }}>  <span class=\" text-red-300 hover:text-red-800 p-2\"  > <svg className=\"h-8 inline \" xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\r\n                    <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth=\"2\" d=\"M19 7l-.867 12.142A2 2 0 0116.138 21H7.862a2 2 0 01-1.995-1.858L5 7m5 4v6m4-6v6m1-10V4a1 1 0 00-1-1h-4a1 1 0 00-1 1v3M4 7h16\" />\r\n                </svg></span></div>\r\n\r\n            </div>\r\n\r\n\r\n\r\n\r\n\r\n\r\n        </>\r\n    )\r\n}\r\n\r\n\r\n\r\nconst SavePopUp = ({ show, saveForm }) => {\r\n\r\n    const { saveWarning, setSaveWarning } = show\r\n    return (\r\n        <div class=\" flex flex-col rounded-lg bg-white border \" >\r\n            < div class=\"bg-white opacity-25 rounded-lg  absolute z-10 inset-0 \" ></div >\r\n            <div class=\"bg-white rounded-lg md:max-w-md md:mx-auto p-4 fixed inset-x-0 bottom-0 z-50 mb-4 mx-4 md:relative\">\r\n                <div class=\"flex md:flex-col items-center \">\r\n                    <div class=\"rounded-full border border-gray-300 flex items-center justify-center w-16 h-16 flex-shrink-0 mx-auto\">\r\n                        <svg className=\"w-8 h-8 text-green-800 rounded-lg\" xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\r\n                            <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M20.618 5.984A11.955 11.955 0 0112 2.944a11.955 11.955 0 01-8.618 3.04A12.02 12.02 0 003 9c0 5.591 3.824 10.29 9 11.622 5.176-1.332 9-6.03 9-11.622 0-1.042-.133-2.052-.382-3.016zM12 9v2m0 4h.01\" />\r\n                        </svg>\r\n                    </div>\r\n                    <div class=\"mt-4 md:mt-0 md:ml-6 text-center md:text-left\">\r\n                        <p class=\"font-bold\" >Save Form</p>\r\n                        <p class=\"text-sm text-gray-700 mt-1\">Once Saved you won't be abel to edit it.\r\n                    </p>\r\n                    </div>\r\n                </div>\r\n                <div class=\"text-center md:text-right mt-4 md:flex md:justify-end\">\r\n                    <button class=\"block w-full md:inline-block md:w-auto px-4 py-3 md:py-2 bg-red-200 text-green-700 rounded-lg font-semibold text-sm md:ml-2 md:order-2\" onClick={saveForm}>Save </button>\r\n\r\n                    <button class=\"block w-full md:inline-block md:w-auto px-4 py-3 md:py-2 bg-gray-500 rounded-lg font-semibold text-sm mt-4\r\n                    md:mt-0 md:order-1\" onClick={() => { setSaveWarning(false) }}>Cancel</button>\r\n                </div>\r\n            </div>\r\n\r\n\r\n        </div >\r\n\r\n    )\r\n\r\n\r\n}\r\n\r\n\r\n\r\n","D:\\Projects\\google-form\\src\\componants\\FormModule\\NotActiveQuestion.js",["212","213","214","215","216","217"],"import React, { useState } from 'react'\r\n\r\nexport const NotActiveQuestion = ({ data, id, isThisActive, height }) => {\r\n\r\n    const { idOfActiveQue, setidOfActiveQue } = isThisActive\r\n\r\n    const [questionArray, setquestionArray] = useState(data.options)\r\n\r\n\r\n    function setThisActive() {\r\n        setidOfActiveQue(id)\r\n    }\r\n\r\n    const [options, setOptions] = useState(data.options)\r\n\r\n    return (\r\n        <div onClick={() => { setThisActive() }}>\r\n            <div className=\" relative container mx-auto rounded-lg   my-8  p-4 shadow-sm bg-white\">\r\n                <div className=\"flex\">\r\n                    <div className=\"p-4 inline appearance-none  rounded w-1/2 text-gray-800   overflow-hidden font-semibold\"\r\n\r\n\r\n                        style={{ height: height, resize: \"none\" }}\r\n\r\n\r\n                    >{data.question ? data.question : \"Question\"}</div>\r\n                    <span className=\"inline-flex align-center justify-center mx-4 p-2 rounded-full hover:bg-gray-300  \"><svg className=\"w-8 text-gray-700\" xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\r\n                        <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth=\"2\" d=\"M4 16l4.586-4.586a2 2 0 012.828 0L16 16m-2-2l1.586-1.586a2 2 0 012.828 0L20 14m-6-6h.01M6 20h12a2 2 0 002-2V6a2 2 0 00-2-2H6a2 2 0 00-2 2v12a2 2 0 002 2z\" />\r\n                    </svg></span>\r\n\r\n\r\n\r\n                    <span className=\"w-1/3 aline-center m-auto\">\r\n                        <div className=\"z-0 bg-gray-900 relative text-sm block w-full  rounded hover:bg-gray-800 py-1 px-4 text-gray-100\" name=\"questionType\" >\r\n                            {data.questiontype}\r\n\r\n\r\n                        </div>\r\n\r\n                    </span>\r\n                </div>\r\n\r\n                <div>\r\n\r\n                    <div className=\"mt-6\">\r\n\r\n\r\n\r\n\r\n                        {questionArray.map((items, index) => <Boxes key={index} index={index} values={items} questionType={data.questiontype} />)}\r\n\r\n\r\n\r\n                    </div >\r\n\r\n                </div>\r\n\r\n\r\n\r\n            </div >\r\n\r\n\r\n\r\n\r\n        </div >\r\n    )\r\n}\r\n\r\n\r\n\r\nconst Boxes = ({ values, questionType }) => {\r\n    const [checkboxValue, setCheckboxValue] = useState(false)\r\n\r\n\r\n\r\n    return (\r\n        <div className=\" my-auto p-2  outline-none mx-4  rounded py-1 px-2 w-2/3 bg-white text-sm text-gray-800  focus:outline-none focus:shadow-outline align-center flex flex-row justify-start align-center\" > <span className=\"w-6 h-6 border inline-block align-center mx-4 my-auto rounded-lg \">  </span ><span className=\"inline-flex justify-start align-center\">{values ? values : \"Option\"}</span></div >\r\n\r\n\r\n    )\r\n\r\n}","D:\\Projects\\google-form\\src\\componants\\FormModule\\SaveErrors.js",[],"D:\\Projects\\google-form\\src\\Context\\ErrorContext.js",[],{"ruleId":"218","replacedBy":"219"},{"ruleId":"220","replacedBy":"221"},{"ruleId":"222","severity":1,"message":"223","line":4,"column":30,"nodeType":"224","messageId":"225","endLine":4,"endColumn":40},{"ruleId":"222","severity":1,"message":"226","line":5,"column":20,"nodeType":"224","messageId":"225","endLine":5,"endColumn":30},{"ruleId":"227","severity":1,"message":"228","line":29,"column":9,"nodeType":"229","endLine":29,"endColumn":18,"suggestions":"230"},{"ruleId":"222","severity":1,"message":"231","line":3,"column":22,"nodeType":"224","messageId":"225","endLine":3,"endColumn":28},{"ruleId":"222","severity":1,"message":"232","line":7,"column":25,"nodeType":"224","messageId":"225","endLine":7,"endColumn":39},{"ruleId":"227","severity":1,"message":"233","line":28,"column":8,"nodeType":"229","endLine":28,"endColumn":10,"suggestions":"234"},{"ruleId":"222","severity":1,"message":"235","line":5,"column":12,"nodeType":"224","messageId":"225","endLine":5,"endColumn":18},{"ruleId":"222","severity":1,"message":"236","line":5,"column":20,"nodeType":"224","messageId":"225","endLine":5,"endColumn":29},{"ruleId":"222","severity":1,"message":"237","line":13,"column":23,"nodeType":"224","messageId":"225","endLine":13,"endColumn":35},{"ruleId":"222","severity":1,"message":"238","line":14,"column":26,"nodeType":"224","messageId":"225","endLine":14,"endColumn":41},{"ruleId":"227","severity":1,"message":"239","line":43,"column":8,"nodeType":"229","endLine":43,"endColumn":22,"suggestions":"240"},{"ruleId":"227","severity":1,"message":"241","line":38,"column":8,"nodeType":"229","endLine":38,"endColumn":10,"suggestions":"242"},{"ruleId":"222","severity":1,"message":"243","line":42,"column":12,"nodeType":"224","messageId":"225","endLine":42,"endColumn":24},{"ruleId":"222","severity":1,"message":"244","line":42,"column":26,"nodeType":"224","messageId":"225","endLine":42,"endColumn":41},{"ruleId":"222","severity":1,"message":"245","line":20,"column":23,"nodeType":"224","messageId":"225","endLine":20,"endColumn":35},{"ruleId":"246","severity":1,"message":"247","line":28,"column":25,"nodeType":"248","messageId":"249","endLine":28,"endColumn":27},{"ruleId":"222","severity":1,"message":"250","line":75,"column":13,"nodeType":"224","messageId":"225","endLine":75,"endColumn":24},{"ruleId":"222","severity":1,"message":"251","line":35,"column":22,"nodeType":"224","messageId":"225","endLine":35,"endColumn":33},{"ruleId":"222","severity":1,"message":"252","line":11,"column":13,"nodeType":"224","messageId":"225","endLine":11,"endColumn":24},{"ruleId":"227","severity":1,"message":"253","line":39,"column":8,"nodeType":"229","endLine":39,"endColumn":10,"suggestions":"254"},{"ruleId":"222","severity":1,"message":"243","line":41,"column":12,"nodeType":"224","messageId":"225","endLine":41,"endColumn":24},{"ruleId":"222","severity":1,"message":"244","line":41,"column":26,"nodeType":"224","messageId":"225","endLine":41,"endColumn":41},{"ruleId":"222","severity":1,"message":"255","line":1,"column":27,"nodeType":"224","messageId":"225","endLine":1,"endColumn":36},{"ruleId":"222","severity":1,"message":"256","line":5,"column":10,"nodeType":"224","messageId":"225","endLine":5,"endColumn":34},{"ruleId":"222","severity":1,"message":"252","line":12,"column":13,"nodeType":"224","messageId":"225","endLine":12,"endColumn":24},{"ruleId":"222","severity":1,"message":"245","line":75,"column":23,"nodeType":"224","messageId":"225","endLine":75,"endColumn":35},{"ruleId":"227","severity":1,"message":"257","line":59,"column":8,"nodeType":"229","endLine":59,"endColumn":22,"suggestions":"258"},{"ruleId":"222","severity":1,"message":"259","line":23,"column":26,"nodeType":"224","messageId":"225","endLine":23,"endColumn":41},{"ruleId":"222","severity":1,"message":"260","line":33,"column":22,"nodeType":"224","messageId":"225","endLine":33,"endColumn":33},{"ruleId":"222","severity":1,"message":"261","line":44,"column":13,"nodeType":"224","messageId":"225","endLine":44,"endColumn":21},{"ruleId":"222","severity":1,"message":"262","line":49,"column":17,"nodeType":"224","messageId":"225","endLine":49,"endColumn":31},{"ruleId":"222","severity":1,"message":"263","line":50,"column":19,"nodeType":"224","messageId":"225","endLine":50,"endColumn":35},{"ruleId":"222","severity":1,"message":"264","line":51,"column":17,"nodeType":"224","messageId":"225","endLine":51,"endColumn":26},{"ruleId":"227","severity":1,"message":"265","line":54,"column":8,"nodeType":"229","endLine":54,"endColumn":10,"suggestions":"266"},{"ruleId":"267","severity":1,"message":"268","line":56,"column":95,"nodeType":"269","messageId":"270","endLine":56,"endColumn":96},{"ruleId":"271","severity":1,"message":"272","line":24,"column":93,"nodeType":"273","endLine":24,"endColumn":100},{"ruleId":"222","severity":1,"message":"274","line":39,"column":12,"nodeType":"224","messageId":"225","endLine":39,"endColumn":20},{"ruleId":"222","severity":1,"message":"251","line":39,"column":22,"nodeType":"224","messageId":"225","endLine":39,"endColumn":33},{"ruleId":"222","severity":1,"message":"275","line":13,"column":12,"nodeType":"224","messageId":"225","endLine":13,"endColumn":21},{"ruleId":"222","severity":1,"message":"276","line":14,"column":12,"nodeType":"224","messageId":"225","endLine":14,"endColumn":24},{"ruleId":"222","severity":1,"message":"277","line":2,"column":10,"nodeType":"224","messageId":"225","endLine":2,"endColumn":33},{"ruleId":"222","severity":1,"message":"278","line":1,"column":27,"nodeType":"224","messageId":"225","endLine":1,"endColumn":36},{"ruleId":"222","severity":1,"message":"275","line":18,"column":12,"nodeType":"224","messageId":"225","endLine":18,"endColumn":21},{"ruleId":"222","severity":1,"message":"276","line":19,"column":12,"nodeType":"224","messageId":"225","endLine":19,"endColumn":24},{"ruleId":"222","severity":1,"message":"279","line":23,"column":13,"nodeType":"224","messageId":"225","endLine":23,"endColumn":26},{"ruleId":"222","severity":1,"message":"280","line":26,"column":23,"nodeType":"224","messageId":"225","endLine":26,"endColumn":34},{"ruleId":"222","severity":1,"message":"281","line":172,"column":13,"nodeType":"224","messageId":"225","endLine":172,"endColumn":24},{"ruleId":"222","severity":1,"message":"279","line":5,"column":13,"nodeType":"224","messageId":"225","endLine":5,"endColumn":26},{"ruleId":"222","severity":1,"message":"282","line":7,"column":27,"nodeType":"224","messageId":"225","endLine":7,"endColumn":43},{"ruleId":"222","severity":1,"message":"283","line":14,"column":12,"nodeType":"224","messageId":"225","endLine":14,"endColumn":19},{"ruleId":"222","severity":1,"message":"284","line":14,"column":21,"nodeType":"224","messageId":"225","endLine":14,"endColumn":31},{"ruleId":"222","severity":1,"message":"285","line":72,"column":12,"nodeType":"224","messageId":"225","endLine":72,"endColumn":25},{"ruleId":"222","severity":1,"message":"286","line":72,"column":27,"nodeType":"224","messageId":"225","endLine":72,"endColumn":43},"no-native-reassign",["287"],"no-negated-in-lhs",["288"],"no-unused-vars","'useContext' is defined but never used.","Identifier","unusedVar","'useHistory' is defined but never used.","react-hooks/exhaustive-deps","React Hook useCallback has missing dependencies: 'login' and 'signup'. Either include them or remove the dependency array.","ArrayExpression",["289"],"'Router' is defined but never used.","'setformOptions' is assigned a value but never used.","React Hook React.useEffect has a missing dependency: 'currentUser.uid'. Either include it or remove the dependency array.",["290"],"'isOpen' is assigned a value but never used.","'setIsOpen' is assigned a value but never used.","'setshowError' is assigned a value but never used.","'seterrorMessage' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'setFormData'. Either include it or remove the dependency array.",["291"],"React Hook React.useEffect has missing dependencies: 'currentUser.uid' and 'thisID'. Either include them or remove the dependency array.",["292"],"'responceList' is assigned a value but never used.","'setResponceList' is assigned a value but never used.","'setquestions' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'showSideBar' is assigned a value but never used.","'setCheckBox' is assigned a value but never used.","'currentUser' is assigned a value but never used.","React Hook React.useEffect has missing dependencies: 'thisID' and 'uid'. Either include them or remove the dependency array.",["293"],"'useEffect' is defined but never used.","'SubmittedFormQuestionBox' is defined but never used.","React Hook React.useEffect has missing dependencies: 'index' and 'isSelected'. Either include them or remove the dependency array.",["294"],"'setResponsesArr' is assigned a value but never used.","'setTotalAns' is assigned a value but never used.","'chartarr' is assigned a value but never used.","'thisquesAnsArr' is assigned a value but never used.","'countOccurrences' is assigned a value but never used.","'thisarray' is assigned a value but never used.","React Hook React.useEffect has missing dependencies: 'data.content' and 'responsesArr'. Either include them or remove the dependency array.",["295"],"no-sequences","Unexpected use of comma operator.","SequenceExpression","unexpectedCommaExpression","react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","'checkBox' is assigned a value but never used.","'showError' is assigned a value but never used.","'errorMessage' is assigned a value but never used.","'OperationBoxForQuestion' is defined but never used.","'USeEffect' is defined but never used.","'idOfActiveQue' is assigned a value but never used.","'setFormData' is assigned a value but never used.","'saveWarning' is assigned a value but never used.","'setquestionArray' is assigned a value but never used.","'options' is assigned a value but never used.","'setOptions' is assigned a value but never used.","'checkboxValue' is assigned a value but never used.","'setCheckboxValue' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"296","fix":"297"},{"desc":"298","fix":"299"},{"desc":"300","fix":"301"},{"desc":"302","fix":"303"},{"desc":"304","fix":"305"},{"desc":"306","fix":"307"},{"desc":"308","fix":"309"},"Update the dependencies array to be: [history, login, signup]",{"range":"310","text":"311"},"Update the dependencies array to be: [currentUser.uid]",{"range":"312","text":"313"},"Update the dependencies array to be: [allQuestions, setFormData]",{"range":"314","text":"315"},"Update the dependencies array to be: [currentUser.uid, thisID]",{"range":"316","text":"317"},"Update the dependencies array to be: [thisID, uid]",{"range":"318","text":"319"},"Update the dependencies array to be: [handelChange, index, isSelected]",{"range":"320","text":"321"},"Update the dependencies array to be: [data.content, responsesArr]",{"range":"322","text":"323"},[838,847],"[history, login, signup]",[702,704],"[currentUser.uid]",[1156,1170],"[allQuestions, setFormData]",[992,994],"[currentUser.uid, thisID]",[1027,1029],"[thisID, uid]",[1668,1682],"[handelChange, index, isSelected]",[1512,1514],"[data.content, responsesArr]"]