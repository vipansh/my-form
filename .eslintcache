[{"D:\\Projects\\google-form\\src\\index.js":"1","D:\\Projects\\google-form\\src\\App.js":"2","D:\\Projects\\google-form\\src\\serviceWorker.js":"3","D:\\Projects\\google-form\\src\\pages\\LogIn.js":"4","D:\\Projects\\google-form\\src\\pages\\HomePage.js":"5","D:\\Projects\\google-form\\src\\componants\\Header.js":"6","D:\\Projects\\google-form\\src\\componants\\DocsHomescreen.js":"7","D:\\Projects\\google-form\\src\\componants\\FreeTamplate.js":"8","D:\\Projects\\google-form\\src\\componants\\RecentForms.js":"9","D:\\Projects\\google-form\\src\\componants\\OldFormslist.js":"10","D:\\Projects\\google-form\\src\\pages\\FormPage.js":"11","D:\\Projects\\google-form\\src\\componants\\Forms\\FormHeader.js":"12","D:\\Projects\\google-form\\src\\componants\\Forms\\FormBody.js":"13","D:\\Projects\\google-form\\src\\componants\\Forms\\QuestionBox.js":"14","D:\\Projects\\google-form\\src\\componants\\Forms\\ShortAnswer.js":"15","D:\\Projects\\google-form\\src\\componants\\Forms\\MultipleChoice.js":"16","D:\\Projects\\google-form\\src\\componants\\Forms\\CheckBoxes.js":"17","D:\\Projects\\google-form\\src\\componants\\Forms\\FormToolBar.js":"18","D:\\Projects\\google-form\\src\\Context\\FormContext.js":"19","D:\\Projects\\google-form\\src\\componants\\Forms\\DeleteQuestionBox.js":"20","D:\\Projects\\google-form\\src\\componants\\Forms\\NotActiveQuestion.js":"21","D:\\Projects\\google-form\\src\\routers\\AllRouters.js":"22","D:\\Projects\\google-form\\src\\firebase.js":"23","D:\\Projects\\google-form\\src\\Context\\AuthContext.js":"24","D:\\Projects\\google-form\\src\\routers\\PrivateRoute.js":"25","D:\\Projects\\google-form\\src\\componants\\Forms\\SavePopUp.js":"26","D:\\Projects\\google-form\\src\\pages\\SubmittedFormPage.js":"27","D:\\Projects\\google-form\\src\\componants\\SubmittedForm\\FormHome.js":"28","D:\\Projects\\google-form\\src\\componants\\SubmittedForm\\SubmittedFormHeader.js":"29","D:\\Projects\\google-form\\src\\componants\\SubmittedForm\\SubmittedFormQuestionBox.js":"30","D:\\Projects\\google-form\\src\\componants\\SubmittedForm\\SubmittedFormTitle.js":"31","D:\\Projects\\google-form\\src\\pages\\SharedFormPage.js":"32","D:\\Projects\\google-form\\src\\componants\\SharedForm\\SharedForm.js":"33","D:\\Projects\\google-form\\src\\componants\\SharedForm\\SharedFormQuestionBox.js":"34","D:\\Projects\\google-form\\src\\componants\\SharedForm\\SubmitedForm.js":"35","D:\\Projects\\google-form\\src\\componants\\SubmittedForm\\Responses.js":"36","D:\\Projects\\google-form\\src\\componants\\SubmittedForm\\ResponsesBox.js":"37"},{"size":464,"mtime":1614839260056,"results":"38","hashOfConfig":"39"},{"size":249,"mtime":1615138926400,"results":"40","hashOfConfig":"39"},{"size":5086,"mtime":1614839260056,"results":"41","hashOfConfig":"39"},{"size":9484,"mtime":1615474763391,"results":"42","hashOfConfig":"39"},{"size":308,"mtime":1615480126537,"results":"43","hashOfConfig":"39"},{"size":2645,"mtime":1615479801742,"results":"44","hashOfConfig":"39"},{"size":614,"mtime":1614877867861,"results":"45","hashOfConfig":"39"},{"size":4825,"mtime":1615525097841,"results":"46","hashOfConfig":"39"},{"size":2488,"mtime":1615918585518,"results":"47","hashOfConfig":"39"},{"size":1222,"mtime":1615918946121,"results":"48","hashOfConfig":"39"},{"size":2132,"mtime":1615914244062,"results":"49","hashOfConfig":"39"},{"size":4454,"mtime":1615911981823,"results":"50","hashOfConfig":"39"},{"size":1424,"mtime":1615482345987,"results":"51","hashOfConfig":"39"},{"size":6092,"mtime":1615704579368,"results":"52","hashOfConfig":"39"},{"size":1070,"mtime":1615134587521,"results":"53","hashOfConfig":"39"},{"size":3503,"mtime":1615473625541,"results":"54","hashOfConfig":"39"},{"size":3524,"mtime":1615878580911,"results":"55","hashOfConfig":"39"},{"size":3853,"mtime":1615878697974,"results":"56","hashOfConfig":"39"},{"size":526,"mtime":1615880078091,"results":"57","hashOfConfig":"39"},{"size":3582,"mtime":1615874791584,"results":"58","hashOfConfig":"39"},{"size":3066,"mtime":1615476505072,"results":"59","hashOfConfig":"39"},{"size":1221,"mtime":1615911833257,"results":"60","hashOfConfig":"39"},{"size":984,"mtime":1615527782249,"results":"61","hashOfConfig":"39"},{"size":1169,"mtime":1615473049123,"results":"62","hashOfConfig":"39"},{"size":497,"mtime":1615479692008,"results":"63","hashOfConfig":"39"},{"size":2357,"mtime":1615533030252,"results":"64","hashOfConfig":"39"},{"size":1222,"mtime":1615913518737,"results":"65","hashOfConfig":"39"},{"size":1527,"mtime":1615922294288,"results":"66","hashOfConfig":"39"},{"size":2021,"mtime":1615920665766,"results":"67","hashOfConfig":"39"},{"size":1825,"mtime":1615921425162,"results":"68","hashOfConfig":"39"},{"size":828,"mtime":1615880788170,"results":"69","hashOfConfig":"39"},{"size":1252,"mtime":1615912302333,"results":"70","hashOfConfig":"39"},{"size":2480,"mtime":1615921917238,"results":"71","hashOfConfig":"39"},{"size":2567,"mtime":1615917068880,"results":"72","hashOfConfig":"39"},{"size":605,"mtime":1615917903553,"results":"73","hashOfConfig":"39"},{"size":659,"mtime":1615922633867,"results":"74","hashOfConfig":"39"},{"size":1281,"mtime":1615922452016,"results":"75","hashOfConfig":"39"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},"1qcl4f4",{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"85","usedDeprecatedRules":"78"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"94","usedDeprecatedRules":"78"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"97","messages":"98","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"99","messages":"100","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"103","messages":"104","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"105","usedDeprecatedRules":"78"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"108","usedDeprecatedRules":"78"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"111","usedDeprecatedRules":"78"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"114","usedDeprecatedRules":"78"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"117","usedDeprecatedRules":"78"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"120","usedDeprecatedRules":"78"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"123","messages":"124","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"125","usedDeprecatedRules":"78"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"128","usedDeprecatedRules":"78"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"131","messages":"132","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"133","messages":"134","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"135","messages":"136","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"137","usedDeprecatedRules":"78"},{"filePath":"138","messages":"139","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"140","messages":"141","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"142","messages":"143","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"144","messages":"145","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"146","messages":"147","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"148","messages":"149","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"150","messages":"151","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"152","messages":"153","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"154","messages":"155","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"156","messages":"157","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"158","messages":"159","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"160","messages":"161","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"D:\\Projects\\google-form\\src\\index.js",[],["162","163"],"D:\\Projects\\google-form\\src\\App.js",[],"D:\\Projects\\google-form\\src\\serviceWorker.js",[],"D:\\Projects\\google-form\\src\\pages\\LogIn.js",["164","165","166","167","168","169"],"\r\n\r\n\r\nimport React, { useCallback, useContext } from \"react\"\r\nimport { Redirect, useHistory } from \"react-router-dom\"\r\n\r\nimport { useAuth } from \"../Context/AuthContext\";\r\nexport const LogIn = ({ history }) => {\r\n\r\n    const { currentUser, login } = useAuth()\r\n\r\n\r\n    const handleLogin = useCallback(\r\n        async event => {\r\n            event.preventDefault();\r\n\r\n\r\n            const { email, password } = event.target.elements;\r\n\r\n            try {\r\n                await login(email.value, password.value);\r\n                history.push(\"/\");\r\n            } catch (error) {\r\n                console.log(error);\r\n            }\r\n        },\r\n        [history]\r\n    );\r\n\r\n    \r\n\r\n    if (currentUser) {\r\n        return <Redirect to=\"/\" />;\r\n    }\r\n\r\n    return (\r\n        <div class=\"min-h-screen bg-gray-100 text-gray-900 flex justify-center\">\r\n            <div\r\n                class=\"max-w-screen-xl m-0 sm:m-20 bg-white shadow sm:rounded-lg flex justify-center flex-1\"\r\n            >\r\n                <div class=\"lg:w-1/2 xl:w-5/12 p-6 sm:p-12\">\r\n                    <div>\r\n                        <img\r\n                            src=\"https://storage.googleapis.com/devitary-image-host.appspot.com/15846435184459982716-LogoMakr_7POjrN.png\"\r\n                            class=\"w-32 mx-auto\"\r\n                        />\r\n                    </div>\r\n                    <div class=\"mt-12 flex flex-col items-center\">\r\n                        <h1 class=\"text-2xl xl:text-3xl font-extrabold\">\r\n                            Sign up for Google Form\r\n          </h1>\r\n                        <div class=\"w-full flex-1 mt-8\">\r\n                            <div class=\"flex flex-col items-center\">\r\n                                <button\r\n                                    class=\"w-full max-w-xs font-bold shadow-sm rounded-lg py-3 bg-indigo-100 text-gray-800 flex items-center justify-center transition-all duration-300 ease-in-out focus:outline-none hover:shadow focus:shadow-sm focus:shadow-outline\"\r\n                                >\r\n                                    <div class=\"bg-white p-2 rounded-full\">\r\n                                        <svg class=\"w-4\" viewBox=\"0 0 533.5 544.3\">\r\n                                            <path\r\n                                                d=\"M533.5 278.4c0-18.5-1.5-37.1-4.7-55.3H272.1v104.8h147c-6.1 33.8-25.7 63.7-54.4 82.7v68h87.7c51.5-47.4 81.1-117.4 81.1-200.2z\"\r\n                                                fill=\"#4285f4\"\r\n                                            />\r\n                                            <path\r\n                                                d=\"M272.1 544.3c73.4 0 135.3-24.1 180.4-65.7l-87.7-68c-24.4 16.6-55.9 26-92.6 26-71 0-131.2-47.9-152.8-112.3H28.9v70.1c46.2 91.9 140.3 149.9 243.2 149.9z\"\r\n                                                fill=\"#34a853\"\r\n                                            />\r\n                                            <path\r\n                                                d=\"M119.3 324.3c-11.4-33.8-11.4-70.4 0-104.2V150H28.9c-38.6 76.9-38.6 167.5 0 244.4l90.4-70.1z\"\r\n                                                fill=\"#fbbc04\"\r\n                                            />\r\n                                            <path\r\n                                                d=\"M272.1 107.7c38.8-.6 76.3 14 104.4 40.8l77.7-77.7C405 24.6 339.7-.8 272.1 0 169.2 0 75.1 58 28.9 150l90.4 70.1c21.5-64.5 81.8-112.4 152.8-112.4z\"\r\n                                                fill=\"#ea4335\"\r\n                                            />\r\n                                        </svg>\r\n                                    </div>\r\n                                    <span class=\"ml-4\">\r\n                                        Sign Up with Google\r\n                </span>\r\n                                </button>\r\n\r\n                                <button\r\n                                    class=\"w-full max-w-xs font-bold shadow-sm rounded-lg py-3 bg-indigo-100 text-gray-800 flex items-center justify-center transition-all duration-300 ease-in-out focus:outline-none hover:shadow focus:shadow-sm focus:shadow-outline mt-5\"\r\n                                >\r\n                                    <div class=\"bg-white p-1 rounded-full\">\r\n                                        <svg class=\"w-6\" viewBox=\"0 0 32 32\">\r\n                                            <path\r\n                                                fillRule=\"evenodd\"\r\n                                                d=\"M16 4C9.371 4 4 9.371 4 16c0 5.3 3.438 9.8 8.207 11.387.602.11.82-.258.82-.578 0-.286-.011-1.04-.015-2.04-3.34.723-4.043-1.609-4.043-1.609-.547-1.387-1.332-1.758-1.332-1.758-1.09-.742.082-.726.082-.726 1.203.086 1.836 1.234 1.836 1.234 1.07 1.836 2.808 1.305 3.492 1 .11-.777.422-1.305.762-1.605-2.664-.301-5.465-1.332-5.465-5.93 0-1.313.469-2.383 1.234-3.223-.121-.3-.535-1.523.117-3.175 0 0 1.008-.32 3.301 1.23A11.487 11.487 0 0116 9.805c1.02.004 2.047.136 3.004.402 2.293-1.55 3.297-1.23 3.297-1.23.656 1.652.246 2.875.12 3.175.77.84 1.231 1.91 1.231 3.223 0 4.61-2.804 5.621-5.476 5.922.43.367.812 1.101.812 2.219 0 1.605-.011 2.898-.011 3.293 0 .32.214.695.824.578C24.566 25.797 28 21.3 28 16c0-6.629-5.371-12-12-12z\"\r\n                                            />\r\n                                        </svg>\r\n                                    </div>\r\n                                    <span class=\"ml-4\">\r\n                                        Sign Up with GitHub\r\n                </span>\r\n                                </button>\r\n                            </div>\r\n\r\n                            <div class=\"my-12 border-b text-center\">\r\n                                <div\r\n                                    class=\"leading-none px-2 inline-block text-sm text-gray-600 tracking-wide font-medium bg-white transform translate-y-1/2\"\r\n                                >\r\n                                    Or sign up with e-mail\r\n              </div>\r\n                            </div>\r\n\r\n                            <form class=\"mx-auto max-w-xs\" onSubmit={handleLogin}>\r\n                                <input\r\n                                    class=\"w-full px-8 py-4 rounded-lg font-medium bg-gray-100 border border-gray-200 placeholder-gray-500 text-sm focus:outline-none focus:border-gray-400 focus:bg-white\"\r\n                                    type=\"text\"\r\n                                    placeholder=\"Email\"\r\n                                    required\r\n                                    name=\"email\"\r\n                                />\r\n                                <input\r\n                                    class=\"w-full px-8 py-4 rounded-lg font-medium bg-gray-100 border border-gray-200 placeholder-gray-500 text-sm focus:outline-none focus:border-gray-400 focus:bg-white mt-5\"\r\n                                    type=\"password\"\r\n                                    placeholder=\"Password\"\r\n                                    required\r\n                                    name=\"password\"\r\n                                />\r\n                                <button\r\n                                    class=\"mt-5 tracking-wide font-semibold bg-indigo-500 text-gray-100 w-full py-4 rounded-lg hover:bg-indigo-700 transition-all duration-300 ease-in-out flex items-center justify-center focus:shadow-outline focus:outline-none\"\r\n                                    type=\"submit\">\r\n                                    <svg\r\n                                        class=\"w-6 h-6 -ml-2\"\r\n                                        fill=\"none\"\r\n                                        stroke=\"currentColor\"\r\n                                        strokeWidth=\"2\"\r\n                                        strokeLinecap=\"round\"\r\n                                        strokeLinejoin=\"round\"\r\n                                    >\r\n                                        <path d=\"M16 21v-2a4 4 0 00-4-4H5a4 4 0 00-4 4v2\" />\r\n                                        <circle cx=\"8.5\" cy=\"7\" r=\"4\" />\r\n                                        <path d=\"M20 8v6M23 11h-6\" />\r\n                                    </svg>\r\n                                    <span class=\"ml-3\">\r\n                                        Sign Up\r\n                </span>\r\n                                </button>\r\n                                <p class=\"mt-6 text-xs text-gray-600 text-center\">\r\n                                    I agree to abide by templatana's\r\n                <a href=\"#\" class=\"border-b border-gray-500 border-dotted\">\r\n                                        Terms of Service\r\n                </a>\r\n                and its\r\n                <a href=\"#\" class=\"border-b border-gray-500 border-dotted\">\r\n                                        Privacy Policy\r\n                </a>\r\n                                </p>\r\n                            </form>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div class=\"flex-1 bg-indigo-100 text-center hidden lg:flex\">\r\n                    <div\r\n                        class=\"m-12 xl:m-16 w-full bg-contain bg-center bg-no-repeat\"\r\n                        style={{ backgroundImage: \"url('https://storage.googleapis.com/devitary-image-host.appspot.com/15848031292911696601-undraw_designer_life_w96d.svg')\" }}\r\n                    ></div>\r\n                </div>\r\n            </div>\r\n\r\n        </div >\r\n    )\r\n}\r\n","D:\\Projects\\google-form\\src\\pages\\HomePage.js",[],"D:\\Projects\\google-form\\src\\componants\\Header.js",[],"D:\\Projects\\google-form\\src\\componants\\DocsHomescreen.js",[],"D:\\Projects\\google-form\\src\\componants\\FreeTamplate.js",["170"],"import React from 'react'\r\nimport {\r\n    BrowserRouter as Router,\r\n    Link\r\n} from \"react-router-dom\";\r\nexport const FreeTamplate = () => {\r\n    return (\r\n        <div>\r\n            <div class=\"p-4 flex items-center justify-center bg-gray-100 \">\r\n                <div class=\"w-full max-w-screen-md mx-auto\">\r\n                    <fieldset class=\"space-y-6\">\r\n                        <div class=\"flex items-center justify-between py-4 border-b border-gray-300\">\r\n                            <div>Start a new form </div>\r\n                            <div className=\"flex items-center justify-center\"><span className=\"hover:bg-gray-400 p-2 rounded-md cursor-pointer\" >Tamplate Gallery <svg className=\"w-4 mx-2 inline\" xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\r\n                                <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth=\"2\" d=\"M7 16V4m0 0L3 8m4-4l4 4m6 0v12m0 0l4-4m-4 4l-4-4\" />\r\n                            </svg> </span>\r\n\r\n                                <span className=\"rounded-full cursor-pointer hover:bg-gray-400  p-2 \"><svg className=\"w-8 mx-2 inline    text-gray-500\" xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\r\n                                    <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth=\"2\" d=\"M12 5v.01M12 12v.01M12 19v.01M12 6a1 1 0 110-2 1 1 0 010 2zm0 7a1 1 0 110-2 1 1 0 010 2zm0 7a1 1 0 110-2 1 1 0 010 2z\" />\r\n                                </svg></span>\r\n                            </div>\r\n                        </div>\r\n                        <Link to=\"/form\">\r\n                            <div class=\"grid sm:grid-cols-6 gap-6\">\r\n                                <div>\r\n                                    <div class=\" h-32 relative flex flex-col p-1 bg-white  rounded-lg shadow-md cursor-pointer \r\n                            border-2  hover:border-blue-400  \">\r\n                                        <img src={process.env.PUBLIC_URL + '/ques.jpg'} alt=\"a\" class=\"w-full h-auto rounded-lg\" />\r\n                                    </div>\r\n                                    <span class=\"font-semibold\">Blanks</span>\r\n                                </div>\r\n                                <div>\r\n                                    <div class=\"h-32 relative flex flex-col bg-white p-1 rounded-lg shadow-md cursor-pointer  border-2  hover:border-blue-400\">\r\n                                        <img src={process.env.PUBLIC_URL + '/ques.jpg'} alt=\"a\" class=\"w-full h-auto rounded-lg\" />\r\n\r\n                                    </div>\r\n                                    <span class=\"font-semibold\"> Contact Information</span>\r\n                                </div><div>\r\n\r\n                                    <div class=\"h-32 relative flex flex-col bg-white p-1 rounded-lg shadow-md cursor-pointer  border-2  hover:border-blue-400\">\r\n                                        <img src={process.env.PUBLIC_URL + '/ques.jpg'} alt=\"a\" class=\"w-full h-auto rounded-lg\" />\r\n\r\n                                    </div>\r\n                                    <span class=\"font-semibold\"> Rsvp</span>\r\n\r\n                                </div><div>\r\n\r\n                                    <div class=\"h-32 relative flex flex-col bg-white p-1 rounded-lg shadow-md cursor-pointer  border-2  hover:border-blue-400\">\r\n                                        <img src={process.env.PUBLIC_URL + '/ques.jpg'} alt=\"a\" class=\"w-full h-auto rounded-lg\" />\r\n\r\n                                    </div>\r\n                                    <span class=\"font-semibold\">   Party Invite</span>\r\n\r\n                                </div><div>\r\n\r\n                                    <div class=\"h-32 relative flex flex-col bg-white p-1 rounded-lg shadow-md cursor-pointer  border-2  hover:border-blue-400\">\r\n                                        <img src={process.env.PUBLIC_URL + '/ques.jpg'} alt=\"a\" class=\"w-full h-auto rounded-lg\" />\r\n\r\n                                    </div>\r\n                                    <span class=\"font-semibold\">  T-shirt Sign up</span>\r\n\r\n                                </div><div>\r\n\r\n                                    <div class=\"h-32 relative flex flex-col bg-white p-1 rounded-lg shadow-md cursor-pointer  border-2  hover:border-blue-400\">\r\n                                        <img src={process.env.PUBLIC_URL + '/ques.jpg'} alt=\"a\" class=\"w-full h-auto rounded-lg\" />\r\n\r\n                                    </div>\r\n                                    <span class=\"font-semibold\">Event Registration</span>\r\n\r\n                                </div>\r\n                            </div>\r\n                        </Link >\r\n                    </fieldset>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","D:\\Projects\\google-form\\src\\componants\\RecentForms.js",[],"D:\\Projects\\google-form\\src\\componants\\OldFormslist.js",["171","172"],"D:\\Projects\\google-form\\src\\pages\\FormPage.js",["173","174","175","176"],"D:\\Projects\\google-form\\src\\componants\\Forms\\FormHeader.js",[],"D:\\Projects\\google-form\\src\\componants\\Forms\\FormBody.js",["177","178"],"import React, { useState, useContext } from 'react'\r\nimport { FormContext } from '../../Context/FormContext'\r\n\r\n\r\nexport const FormBody = () => {\r\n\r\n    const [formTitle, setFormTitle] = useState(\"\")\r\n    const [formDiscreption, setformDiscreption] = useState(\"\")\r\n\r\n\r\n\r\n    const { formData, setFormData } = useContext(FormContext)\r\n\r\n    function handelchange(e) {\r\n\r\n\r\n        setFormData(prevState => ({\r\n            ...prevState,\r\n            [e.target.name]: e.target.value\r\n\r\n        }))\r\n\r\n    }\r\n\r\n\r\n\r\n\r\n    return (\r\n        <div className=\"container mx-auto border-t-8 rounded-lg    p-4 shadow-sm bg-white\" style={{ borderColor: formData.color }}>\r\n            <div className=\"p-4\">\r\n                <input type=\"text\" name=\"title\" onChange={(e) => { handelchange(e) }} class=\"relative outline-none rounded py-4 px-3 w-full bg-white hover:shadow text-5xl text-gray-700 placeholder-gray-800 focus:outline-none focus:shadow-outline\" placeholder=\"Untitled Form\" value={formTitle.title} />\r\n            </div>\r\n            <div className=\"p-4\">\r\n                <input type=\"text\" name=\"discription\" onChange={(e) => { handelchange(e) }} class=\"relative outline-none rounded py-4 px-3 w-full bg-white hover:shadow text-base text-gray-700 placeholder-gray-800 focus:outline-none focus:shadow-outline\" placeholder=\"Form Discription\" value={formDiscreption.discription} />\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","D:\\Projects\\google-form\\src\\componants\\Forms\\QuestionBox.js",["179","180","181","182","183","184"],"import React, { useState, useContext, useEffect } from 'react'\r\nimport { FormContext } from '../../Context/FormContext'\r\nimport { CheckBoxes } from './CheckBoxes'\r\nimport { DeleteQuestionBox } from './DeleteQuestionBox'\r\nimport { FormToolBar } from './FormToolBar'\r\nimport { MultipleChoice } from './MultipleChoice'\r\nimport { NotActiveQuestion } from './NotActiveQuestion'\r\nimport { ShortAnswer } from './ShortAnswer'\r\n\r\nexport const QuestionBox = ({ value, id, data, isThisActive,color }) => {\r\n\r\n    const { allquestions, setAllquestions } = value\r\n\r\n\r\n    const { idOfActiveQue, setIdOfActiveQue } = isThisActive\r\n\r\n\r\n    const [isactive, setIsactive] = useState()\r\n\r\n    useEffect(() => {\r\n        setIsactive(() => {\r\n            return idOfActiveQue == id\r\n        })\r\n    }, [idOfActiveQue])\r\n\r\n\r\n\r\n\r\n    const [textQuetionHeight, setTextQuetionHeight] = useState(\"auto\")\r\n\r\n\r\n    const [isOpen, setIsOpen] = useState(false)\r\n\r\n\r\n\r\n    const [questionType, setQuestionType] = useState(\"Question Type\")\r\n\r\n    \r\n    useEffect(() => {\r\n        const updatedData = allquestions.map((data, i) => id === i ?\r\n            Object.assign(data, { questiontype: \"CheckBoxes\" }) : data)\r\n        setAllquestions(updatedData)\r\n    }, [])\r\n\r\n    function handelquestionType(values, e) {\r\n        setIsOpen(!isOpen)\r\n        setQuestionType(values)\r\n        const updatedData = allquestions.map((data, i) => id === i ?\r\n            Object.assign(data, { questiontype: values }) : data)\r\n        setAllquestions(updatedData)\r\n    }\r\n\r\n    function handelChange(e, id) {\r\n        const updatedData = allquestions.map((data, i) => id === i ?\r\n            Object.assign(data, { [e.target.name]: e.target.value }) : data)\r\n        setAllquestions(updatedData)\r\n    }\r\n\r\n\r\n    function autoGrow(e, id) {\r\n        setTextQuetionHeight(e.target.scrollHeight + \"px\")\r\n        handelChange(e, id)\r\n    }\r\n\r\n\r\n\r\n    if (!isactive) {\r\n        return <NotActiveQuestion data={data} isThisActive={isThisActive} id={id} height={textQuetionHeight} />\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n    return (\r\n        <div className=\" relative container mx-auto border-l-8 rounded-lg   my-8  p-4 shadow-sm bg-white\" style={{ borderColor: color }}>\r\n            <FormToolBar value={value} id={id} isThisActive={isThisActive} />\r\n            <div className=\"flex\">\r\n                <textarea\r\n                    rows=\"1\"\r\n                    cols=\"1\"\r\n                    class=\"bg-gray-100 p-4 inline appearance-none border rounded w-1/2 text-gray-700 leading-tight focus:outline-none focus:shadow-outline  overflow-hidden\"\r\n\r\n                    name=\"question\"\r\n                    value={data.question}\r\n                    style={{ height: textQuetionHeight, resize: \"none\" }}\r\n                    onChange={(e) => { autoGrow(e, id) }}\r\n                    type=\"text\"\r\n                    placeholder=\"Question\"\r\n                />\r\n                <span className=\"inline-flex align-center justify-center mx-4 p-2 rounded-full hover:bg-gray-300  \"><svg className=\"w-8 text-gray-700\" xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\r\n                    <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth=\"2\" d=\"M4 16l4.586-4.586a2 2 0 012.828 0L16 16m-2-2l1.586-1.586a2 2 0 012.828 0L20 14m-6-6h.01M6 20h12a2 2 0 002-2V6a2 2 0 00-2-2H6a2 2 0 00-2 2v12a2 2 0 002 2z\" />\r\n                </svg></span>\r\n\r\n\r\n\r\n                <span className=\"w-1/3 aline-center m-auto\">\r\n                    <div class=\"z-15 bg-gray-900 relative text-sm block w-full  rounded hover:bg-gray-800 py-1 px-4 text-gray-100\" onClick={() => { setIsOpen(!isOpen) }} name=\"questionType\" >\r\n                        {questionType}\r\n\r\n                        {isOpen ? <div class=\"absolute rounded mt-2 py-2 text-gray-900 bg-gray-200   shadow w-full inset-x-0 z-10\">\r\n                            <span class=\"hover:bg-gray-200 z-15 text-left block px-4 py-1\" values=\"Checkbox\" onClick={(e) => { handelquestionType(\"Checkbox\", e) }} ><svg className=\"h-8 inline\" xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\r\n                                <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth=\"2\" d=\"M9 12l2 2 4-4m6 2a9 9 0 11-18 0 9 9 0 0118 0z\" />\r\n                            </svg> CheckBoxes</span>\r\n                            <span class=\"hover:bg-gray-200 z-10 text-left block px-4 py-1\" values=\"Multiple Choice\" onClick={(e) => { handelquestionType(\"Multiple Choice\", e) }} ><svg className=\"h-8 inline\" xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\r\n                                <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth=\"2\" d=\"M9 5H7a2 2 0 00-2 2v12a2 2 0 002 2h10a2 2 0 002-2V7a2 2 0 00-2-2h-2M9 5a2 2 0 002 2h2a2 2 0 002-2M9 5a2 2 0 012-2h2a2 2 0 012 2m-3 7h3m-3 4h3m-6-4h.01M9 16h.01\" />\r\n                            </svg>Multiple Choice</span>\r\n                            <span class=\"hover:bg-gray-200 z-10 text-left block px-4 py-1\" values=\"Short Answer\" onClick={(e) => { handelquestionType(\"Short Answer\", e) }} ><svg className=\"h-8 inline\" xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\r\n                                <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth=\"2\" d=\"M7 8h10M7 12h4m1 8l-4-4H5a2 2 0 01-2-2V6a2 2 0 012-2h14a2 2 0 012 2v8a2 2 0 01-2 2h-3l-4 4z\" />\r\n                            </svg>Short Answer</span>\r\n\r\n                        </div> : null}\r\n                    </div>\r\n\r\n                </span>\r\n            </div>\r\n\r\n            <div>\r\n\r\n                {questionType === \"Short Answer\" ? <ShortAnswer value={value} id={id} data={data} /> : questionType === \"Multiple Choice\" ? <MultipleChoice value={value} id={id} data={data} /> :\r\n                    <CheckBoxes value={value} id={id} data={data} />}\r\n\r\n            </div>\r\n\r\n\r\n            <div>\r\n                <DeleteQuestionBox value={value} id={id} data={data} />\r\n            </div>\r\n        </div >\r\n    )\r\n}\r\n\r\n\r\n\r\n\r\n","D:\\Projects\\google-form\\src\\componants\\Forms\\ShortAnswer.js",["185"],"import React, { useState, useEffect } from 'react'\r\n\r\n\r\n\r\n\r\nexport const ShortAnswer = ({ value, id, data }) => {\r\n    const { allquestions, setAllquestions } = value\r\n\r\n\r\n    const [questionArray, setquestionArray] = useState(data.options)\r\n\r\n    useEffect(() => {\r\n        const updatedData = allquestions.map((data, i) => id === i ?\r\n            Object.assign(data, { options: questionArray }) : data)\r\n        setAllquestions(updatedData)\r\n\r\n    }, [questionArray])\r\n\r\n\r\n\r\n    function handelChange(e, index) {\r\n\r\n\r\n\r\n        const values = [...questionArray]\r\n        values[index].option = e.target.value\r\n        setquestionArray(values)\r\n\r\n\r\n\r\n    }\r\n\r\n    return (\r\n        <div className=\"mt-6\">\r\n\r\n\r\n\r\n            <input type=\"text\" class=\"inline mx-4  outline-none border border-gray-400 rounded py-1 px-4 w-2/3 bg-white text-sm text-gray-700 placeholder-gray-400 focus:outline-none focus:shadow-outline\" value={allquestions.option} placeholder=\"placeholder\" onChange={(e) => { handelChange(e, id) }} />\r\n\r\n\r\n\r\n\r\n        </div >\r\n    )\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n","D:\\Projects\\google-form\\src\\componants\\Forms\\MultipleChoice.js",["186","187"],"import React, { useState, useEffect } from 'react'\r\n\r\n\r\n\r\n\r\nexport const MultipleChoice = ({ value, id, data }) => {\r\n    const { allquestions, setAllquestions } = value\r\n\r\n\r\n    const [questionArray, setquestionArray] = useState(data.options)\r\n\r\n    useEffect(() => {\r\n        const updatedData = allquestions.map((data, i) => id === i ?\r\n            Object.assign(data, { options: questionArray }) : data)\r\n        setAllquestions(updatedData)\r\n\r\n    }, [questionArray])\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n    function handelAdd() {\r\n        let values = [...questionArray]\r\n        values.push({ option: null })\r\n        setquestionArray(values)\r\n    }\r\n\r\n    function handelRemove(a) {\r\n\r\n        let values = [...questionArray]\r\n        values.splice(a, 1)\r\n        setquestionArray(values)\r\n    }\r\n\r\n    function handelChange(e, index) {\r\n\r\n\r\n\r\n        const values = [...questionArray]\r\n        values[index].option = e.target.value\r\n        setquestionArray(values)\r\n\r\n\r\n\r\n    }\r\n\r\n    return (\r\n        <div className=\"mt-6\">\r\n\r\n\r\n\r\n\r\n            { questionArray.map((all, index) => <Boxes key={index} index={index} handelRemove={handelRemove} handelChange={handelChange} values={{ questionArray, setquestionArray }} allquestions={all} />)}\r\n\r\n\r\n            <div onClick={() => { handelAdd() }} className=\"cursor-pointer mx-8 hover:underline\"><svg className=\"w-8 h-8 inline  \" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 20 20\" fill=\"currentColor\">\r\n                <path fillRule=\"evenodd\" d=\"M10 5a1 1 0 011 1v3h3a1 1 0 110 2h-3v3a1 1 0 11-2 0v-3H6a1 1 0 110-2h3V6a1 1 0 011-1z\" clip-rule=\"evenodd\" />\r\n            </svg>Add Another</div>\r\n        </div >\r\n    )\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nconst Boxes = ({ index, handelRemove, values, handelChange, allquestions }) => {\r\n    const [checkboxValue, setCheckboxValue] = useState(false)\r\n\r\n    const { questionArray, setquestionArray } = values\r\n\r\n\r\n    return (\r\n        <div class=\"p-2 flex w-full justify-between\">\r\n            <label class=\"custom-label p-2 flex w-full\">\r\n                <input type=\"checkbox\" class=\"hidden\" checked={checkboxValue}\r\n                    onChange={() => setCheckboxValue(!checkboxValue)} />\r\n\r\n\r\n                <div className=\"w-6 h-6 border inline-block align-center mx-4 my-auto rounded-lg \">{!checkboxValue ? \"\" : <svg className=\"bg-blue-700 text-white rounded-lg\" xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\r\n                    <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth=\"2\" d=\"M5 13l4 4L19 7\" />\r\n                </svg>}\r\n                </div>\r\n\r\n                <input type=\"text\" class=\"inline  outline-none border border-gray-400 rounded py-1 px-2 w-2/3 bg-white text-sm text-gray-700 placeholder-gray-400 focus:outline-none focus:shadow-outline\" value={allquestions.option} placeholder=\"placeholder\" onChange={(e) => { handelChange(e, index) }} />\r\n            </label>\r\n\r\n\r\n            {questionArray.length === 1 ? \"\" : <div className=\"  align-center mx-4 my-auto rounded-full p-4 hover:bg-gray-200 hover:text-red-600 \"\r\n                onClick={() => { handelRemove(index) }}\r\n            >\r\n                <svg className=\"w-8 text-gray-700 hover:text-red-600 \" xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\r\n                    <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth=\"2\" d=\"M6 18L18 6M6 6l12 12\" />\r\n                </svg>\r\n            </div>}\r\n        </div>\r\n\r\n    )\r\n}\r\n","D:\\Projects\\google-form\\src\\componants\\Forms\\CheckBoxes.js",["188","189"],"import React, { useState, useEffect } from 'react'\r\n\r\n\r\n\r\n\r\nexport const CheckBoxes = ({ value, id, data }) => {\r\n    const { allquestions, setAllquestions } = value\r\n\r\n\r\n    const [questionArray, setquestionArray] = useState(data.options)\r\n\r\n    useEffect(() => {\r\n        const updatedData = allquestions.map((data, i) => id === i ?\r\n            Object.assign(data, { options: questionArray }) : data)\r\n        setAllquestions(updatedData)\r\n\r\n    }, [questionArray])\r\n\r\n    function handelAdd() {\r\n        let values = [...questionArray]\r\n        values.push({ option: null })\r\n        setquestionArray(values)\r\n    }\r\n\r\n    function handelRemove(a) {\r\n\r\n        let values = [...questionArray]\r\n        values.splice(a, 1)\r\n        setquestionArray(values)\r\n    }\r\n\r\n    function handelChange(e, index) {\r\n        const values = [...questionArray]\r\n\r\n        console.log(values, index, id)\r\n        values[index].option = e.target.value\r\n\r\n        setquestionArray(values)\r\n    }\r\n\r\n    return (\r\n        <div className=\"mt-6\">\r\n\r\n\r\n\r\n\r\n            { questionArray.map((all, index) => <Boxes key={index} thisId={index} handelRemove={handelRemove} handelChange={handelChange} values={{ questionArray, setquestionArray }} allquestions={all} />)}\r\n\r\n\r\n            <div onClick={() => { handelAdd() }} className=\"cursor-pointer mx-8 hover:underline\"><svg className=\"w-8 h-8 inline  \" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 20 20\" fill=\"currentColor\">\r\n                <path fillRule=\"evenodd\" d=\"M10 5a1 1 0 011 1v3h3a1 1 0 110 2h-3v3a1 1 0 11-2 0v-3H6a1 1 0 110-2h3V6a1 1 0 011-1z\" clip-rule=\"evenodd\" />\r\n            </svg>Add Another</div>\r\n        </div >\r\n    )\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nconst Boxes = ({ key, thisId, handelRemove, values, handelChange, allquestions }) => {\r\n    const [checkboxValue, setCheckboxValue] = useState(false)\r\n\r\n    const { questionArray, setquestionArray } = values\r\n\r\n\r\n    return (\r\n        <div class=\"p-2 flex w-full justify-between\">\r\n            <label class=\"custom-label p-2 flex w-full\">\r\n                <input type=\"checkbox\" class=\"hidden\" checked={checkboxValue}\r\n                    onChange={() => setCheckboxValue(!checkboxValue)} />\r\n\r\n\r\n                <div className=\"w-6 h-6 border inline-block align-center mx-4 my-auto rounded-lg \">{!checkboxValue ? \"\" : <svg className=\"bg-blue-700 text-white rounded-lg\" xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\r\n                    <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth=\"2\" d=\"M5 13l4 4L19 7\" />\r\n                </svg>}\r\n                </div>\r\n\r\n                <input type=\"text\" class=\"inline  outline-none border border-gray-400 rounded py-1 px-2 w-2/3 bg-white text-sm text-gray-700 placeholder-gray-400 focus:outline-none focus:shadow-outline\" value={allquestions.option} placeholder=\"Options\" onChange={(e) => { handelChange(e, thisId) }} />\r\n            </label>\r\n\r\n\r\n            {questionArray.length === 1 ? \"\" : <div className=\"  align-center mx-4 my-auto rounded-full p-4 hover:bg-gray-200 hover:text-red-600 \"\r\n                onClick={() => { handelRemove(thisId) }}\r\n            >\r\n                <svg className=\"w-8 text-gray-700 hover:text-red-600 \" xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\r\n                    <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth=\"2\" d=\"M6 18L18 6M6 6l12 12\" />\r\n                </svg>\r\n            </div>}\r\n        </div>\r\n\r\n    )\r\n}\r\n","D:\\Projects\\google-form\\src\\componants\\Forms\\FormToolBar.js",["190","191","192"],"import React, { useContext } from 'react'\r\nimport { FormContext } from '../../Context/FormContext'\r\nimport { fireDb } from '../../firebase'\r\nimport { SavePopUp } from './SavePopUp'\r\nimport ReactDOM from \"react-dom\";\r\nimport {\r\n    useHistory,\r\n} from \"react-router-dom\";\r\n\r\n\r\n\r\nexport const FormToolBar = ({ value, id, isThisActive }) => {\r\n    let history = useHistory();\r\n\r\n    const { allquestions, setAllquestions } = value\r\n    const { idOfActiveQue, setIdOfActiveQue } = isThisActive\r\n    const { formData, setFormData } = useContext(FormContext)\r\n\r\n    const [saveWorning, setSaveWorning] = React.useState(false)\r\n\r\n    function addOne() {\r\n        let value = {\r\n            question: \"\",\r\n            questiontype: \"\",\r\n            required: \"\",\r\n            options: [{ \"option\": null }]\r\n\r\n        }\r\n        setAllquestions(allquestions => {\r\n            return [...allquestions, value]\r\n        })\r\n        setIdOfActiveQue(allquestions.length)\r\n    }\r\n    function removeOne() {\r\n        if (allquestions.length !== 1) {\r\n            let values = [...allquestions]\r\n            values.splice(id, 1)\r\n            setAllquestions(values)\r\n        }\r\n\r\n    }\r\n    const submitForm = () => {\r\n\r\n\r\n        const formdataRef = fireDb.ref(\"currentUser\").child('Forms');\r\n        try {\r\n            formdataRef.push(formData)\r\n\r\n            history.push(`/form/a/${formData.uniqueID}`)\r\n        } catch (error) {\r\n            console.log(error);\r\n        }\r\n\r\n\r\n\r\n        setSaveWorning(false)\r\n\r\n    }\r\n    return (\r\n        <div className=\"absolute flex flex-col bg-white rounded-lg\" style={{ right: \"-87px\", top: \"3px\" }}>\r\n            <SavePopUp show={{ saveWorning, setSaveWorning }} saveForm={submitForm} />\r\n\r\n            <div class=\"flex items-center cursor-pointer rounded-md m-2 \" onClick={() => { addOne() }}><span className=\"rounded-full hover:bg-gray-400 p-2\"><svg className=\"h-8 inline \" xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\r\n                <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth=\"2\" d=\"M12 9v3m0 0v3m0-3h3m-3 0H9m12 0a9 9 0 11-18 0 9 9 0 0118 0z\" />\r\n            </svg></span></div>\r\n\r\n\r\n\r\n            <div class=\"flex items-center cursor-pointer rounded-md m-2\"><span className=\"rounded-full hover:bg-gray-400 p-2\"><svg className=\"h-8 inline \" xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\r\n                <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth=\"2\" d=\"M4 16l4.586-4.586a2 2 0 012.828 0L16 16m-2-2l1.586-1.586a2 2 0 012.828 0L20 14m-6-6h.01M6 20h12a2 2 0 002-2V6a2 2 0 00-2-2H6a2 2 0 00-2 2v12a2 2 0 002 2z\" />\r\n            </svg></span></div>\r\n\r\n            <div class=\"flex items-center cursor-pointer rounded-md m-2\"><span className=\"rounded-full hover:bg-gray-400 p-2\" onClick={() => { setSaveWorning(true) }}><svg className=\"h-8 inline \" xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\r\n                <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M8 7H5a2 2 0 00-2 2v9a2 2 0 002 2h14a2 2 0 002-2V9a2 2 0 00-2-2h-3m-1 4l-3 3m0 0l-3-3m3 3V4\" />\r\n            </svg></span></div>\r\n\r\n\r\n            <div class={`flex items-center  rounded-md m-2  + ${allquestions.length !== 1 ? \" cursor-pointer \" : \" cursor-not-allowed \"}`} onClick={() => { removeOne() }}>  <span class=\" text-red-300 hover:text-red-800 p-2\"  > <svg className=\"h-8 inline \" xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\r\n                <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth=\"2\" d=\"M19 7l-.867 12.142A2 2 0 0116.138 21H7.862a2 2 0 01-1.995-1.858L5 7m5 4v6m4-6v6m1-10V4a1 1 0 00-1-1h-4a1 1 0 00-1 1v3M4 7h16\" />\r\n            </svg></span></div>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\n","D:\\Projects\\google-form\\src\\Context\\FormContext.js",[],"D:\\Projects\\google-form\\src\\componants\\Forms\\DeleteQuestionBox.js",["193","194"],"import React, { useState, useEffect } from 'react'\r\n\r\nexport const DeleteQuestionBox = ({ value, id, data }) => {\r\n\r\n    const { allquestions, setAllquestions } = value\r\n\r\n    const [required, setRequired] = useState(false)\r\n    const [deleteMsg, setdeleteMsg] = useState(\"Delete\")\r\n    useEffect(() => {\r\n        const updatedData = allquestions.map((data, i) => id === i ?\r\n            Object.assign(data, { required: required }) : data)\r\n        setAllquestions(updatedData)\r\n    }, [required])\r\n\r\n    function removeOne() {\r\n        if (allquestions.length !== 1) {\r\n            let values = [...allquestions]\r\n            values.splice(id, 1)\r\n            setAllquestions(values)\r\n        }\r\n        else {\r\n            setdeleteMsg(\"Form Can't be empty\")\r\n            setInterval(() => { setdeleteMsg(\"Delete\") }, 3000)\r\n        }\r\n    }\r\n\r\n    function dublicateOne() {\r\n        const tamplet = {\r\n            question: data.question,\r\n            questiontype: data.questiontype,\r\n            required: data.required,\r\n            options: [...data.options]\r\n        }\r\n        let values = [...allquestions, tamplet]\r\n\r\n        setAllquestions(allquestions => {\r\n            return [...allquestions, tamplet]\r\n        })\r\n        // setIdOfActiveQue(allquestions.length)\r\n    }\r\n\r\n\r\n    return (\r\n        <div className=\"flex justify-end\">\r\n            <div class=\"flex items-center cursor-pointer rounded-md hover:text-gray-900\" onClick={() => { dublicateOne() }}>\r\n                <span><svg class=\" text-gray-700 hover:text-gray-900 h-8 inline\" xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\r\n                    <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth=\"2\" d=\"M8 7v8a2 2 0 002 2h6M8 7V5a2 2 0 012-2h4.586a1 1 0 01.707.293l4.414 4.414a1 1 0 01.293.707V15a2 2 0 01-2 2h-2M8 7H6a2 2 0 00-2 2v10a2 2 0 002 2h8a2 2 0 002-2v-2\" />\r\n                </svg>Dublicate</span>\r\n\r\n\r\n            </div>\r\n            <div class=\"flex items-center cursor-pointer rounded-md m-4\" onClick={() => { removeOne() }}>  <span class=\" text-red-300 hover:text-red-800  text-left  px-4 py-1\"  > <svg className=\"h-8 inline\" xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\r\n                <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth=\"2\" d=\"M19 7l-.867 12.142A2 2 0 0116.138 21H7.862a2 2 0 01-1.995-1.858L5 7m5 4v6m4-6v6m1-10V4a1 1 0 00-1-1h-4a1 1 0 00-1 1v3M4 7h16\" />\r\n            </svg>{deleteMsg}</span></div>\r\n\r\n\r\n            <div class=\"m-4 flex items-center cursor-pointer rounded-md\">\r\n                <label\r\n\r\n                    class=\"flex items-center cursor-pointer\"\r\n                >\r\n                    <div class=\"relative\">\r\n                        <input id=\"toogleA\" type=\"checkbox\" class=\"hidden\" checked={required} onChange={() => { setRequired(!required) }} />\r\n                        <div\r\n                            class=\"toggle__line w-10 h-4 bg-gray-400 rounded-full shadow-inner\"\r\n                        ></div>\r\n                        <div\r\n                            class=\"toggle__dot absolute w-6 h-6 bg-white rounded-full shadow inset-y-0 left-0\"\r\n                        ></div>\r\n                    </div>\r\n                    <div\r\n                        class=\"ml-3 text-gray-700 font-medium\"\r\n                    >\r\n                        <span className={!required ? \"text-gray-700\" : \"text-green-700\"}>Required</span>\r\n                    </div>\r\n                </label>\r\n\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","D:\\Projects\\google-form\\src\\componants\\Forms\\NotActiveQuestion.js",["195","196","197","198","199","200","201"],"import React, { useState } from 'react'\r\n\r\nexport const NotActiveQuestion = ({ data, id, isThisActive, height }) => {\r\n\r\n    const { idOfActiveQue, setIdOfActiveQue } = isThisActive\r\n    const [questionArray, setquestionArray] = useState(data.options)\r\n\r\n\r\n    function setThisActive() {\r\n        setIdOfActiveQue(id)\r\n    }\r\n\r\n    const [options, setOptions] = useState(data.options)\r\n\r\n    return (\r\n        <div onClick={() => { setThisActive() }}>\r\n            <div className=\" relative container mx-auto rounded-lg   my-8  p-4 shadow-sm bg-white\">\r\n                <div className=\"flex\">\r\n                    <div class=\"p-4 inline appearance-none  rounded w-1/2 text-gray-800   overflow-hidden font-semibold\"\r\n\r\n\r\n                        style={{ height: height, resize: \"none\" }}\r\n\r\n\r\n                    >{data.question ? data.question : \"Question\"}</div>\r\n                    <span className=\"inline-flex align-center justify-center mx-4 p-2 rounded-full hover:bg-gray-300  \"><svg className=\"w-8 text-gray-700\" xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\r\n                        <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth=\"2\" d=\"M4 16l4.586-4.586a2 2 0 012.828 0L16 16m-2-2l1.586-1.586a2 2 0 012.828 0L20 14m-6-6h.01M6 20h12a2 2 0 002-2V6a2 2 0 00-2-2H6a2 2 0 00-2 2v12a2 2 0 002 2z\" />\r\n                    </svg></span>\r\n\r\n\r\n\r\n                    <span className=\"w-1/3 aline-center m-auto\">\r\n                        <div class=\"z-0 bg-gray-900 relative text-sm block w-full  rounded hover:bg-gray-800 py-1 px-4 text-gray-100\" name=\"questionType\" >\r\n                            {data.questiontype}\r\n\r\n\r\n                        </div>\r\n\r\n                    </span>\r\n                </div>\r\n\r\n                <div>\r\n\r\n                    <div className=\"mt-6\">\r\n\r\n\r\n\r\n\r\n                        {questionArray.map((items, index) => <Boxes key={index} index={index} values={items} questionType={data.questiontype} />)}\r\n\r\n\r\n\r\n                    </div >\r\n\r\n                </div>\r\n\r\n\r\n\r\n            </div >\r\n\r\n\r\n\r\n\r\n        </div >\r\n    )\r\n}\r\n\r\n\r\n\r\nconst Boxes = ({ values, questionType }) => {\r\n    const [checkboxValue, setCheckboxValue] = useState(false)\r\n\r\n\r\n\r\n    if (questionType != \"Short Answer\")\r\n        return (\r\n\r\n\r\n            <div class=\" my-auto p-2  outline-none mx-4  rounded py-1 px-2 w-2/3 bg-white text-sm text-gray-800  focus:outline-none focus:shadow-outline align-center\" > <span className=\"w-6 h-6 border inline-block align-center mx-4 my-auto rounded-lg \">  </span ><span class=\"inline-flex justify-start align-center\">{values.option ? values.option : \"Option\"}</span></div >\r\n\r\n\r\n        )\r\n    else {\r\n        return(\r\n        <div class=\" my-auto p-2  outline-none mx-4  rounded py-1 px-2 w-2/3 bg-white text-sm text-gray-800  focus:outline-none focus:shadow-outline align-center\" > <span className=\"w-6 h-6 border inline-block align-center mx-4 my-auto rounded-lg \">  </span ><span class=\"inline-flex justify-start align-center\">Answer</span></div >)\r\n    }\r\n}\r\n","D:\\Projects\\google-form\\src\\routers\\AllRouters.js",[],"D:\\Projects\\google-form\\src\\firebase.js",[],"D:\\Projects\\google-form\\src\\Context\\AuthContext.js",[],"D:\\Projects\\google-form\\src\\routers\\PrivateRoute.js",["202"],"\r\nimport React from \"react\";\r\nimport { Route, Redirect } from \"react-router-dom\";\r\nimport { useAuth } from \"../Context/AuthContext\";\r\n\r\nconst PrivateRoute = ({ component: RouteComponent, ...rest }) => {\r\n    const { currentUser } = useAuth();\r\n\r\n    return (\r\n        <Route\r\n            {...rest}\r\n            render={props => {\r\n                return true ? <RouteComponent {...props} /> : <Redirect to=\"/login\" />\r\n            }}\r\n        ></Route>\r\n    );\r\n};\r\n\r\n\r\nexport default PrivateRoute","D:\\Projects\\google-form\\src\\componants\\Forms\\SavePopUp.js",[],"D:\\Projects\\google-form\\src\\pages\\SubmittedFormPage.js",["203","204","205"],"D:\\Projects\\google-form\\src\\componants\\SubmittedForm\\FormHome.js",["206","207"],"D:\\Projects\\google-form\\src\\componants\\SubmittedForm\\SubmittedFormHeader.js",[],"D:\\Projects\\google-form\\src\\componants\\SubmittedForm\\SubmittedFormQuestionBox.js",[],"D:\\Projects\\google-form\\src\\componants\\SubmittedForm\\SubmittedFormTitle.js",[],"D:\\Projects\\google-form\\src\\pages\\SharedFormPage.js",["208","209","210","211"],"D:\\Projects\\google-form\\src\\componants\\SharedForm\\SharedForm.js",["212","213","214"],"D:\\Projects\\google-form\\src\\componants\\SharedForm\\SharedFormQuestionBox.js",["215"],"D:\\Projects\\google-form\\src\\componants\\SharedForm\\SubmitedForm.js",[],"D:\\Projects\\google-form\\src\\componants\\SubmittedForm\\Responses.js",["216","217"],"D:\\Projects\\google-form\\src\\componants\\SubmittedForm\\ResponsesBox.js",["218","219"],{"ruleId":"220","replacedBy":"221"},{"ruleId":"222","replacedBy":"223"},{"ruleId":"224","severity":1,"message":"225","line":4,"column":30,"nodeType":"226","messageId":"227","endLine":4,"endColumn":40},{"ruleId":"224","severity":1,"message":"228","line":5,"column":20,"nodeType":"226","messageId":"227","endLine":5,"endColumn":30},{"ruleId":"229","severity":1,"message":"230","line":27,"column":9,"nodeType":"231","endLine":27,"endColumn":18,"suggestions":"232"},{"ruleId":"233","severity":1,"message":"234","line":43,"column":25,"nodeType":"235","endLine":46,"endColumn":27},{"ruleId":"236","severity":1,"message":"237","line":143,"column":17,"nodeType":"235","endLine":143,"endColumn":76},{"ruleId":"236","severity":1,"message":"237","line":147,"column":17,"nodeType":"235","endLine":147,"endColumn":76},{"ruleId":"224","severity":1,"message":"238","line":3,"column":22,"nodeType":"226","messageId":"227","endLine":3,"endColumn":28},{"ruleId":"224","severity":1,"message":"239","line":6,"column":12,"nodeType":"226","messageId":"227","endLine":6,"endColumn":18},{"ruleId":"224","severity":1,"message":"240","line":6,"column":20,"nodeType":"226","messageId":"227","endLine":6,"endColumn":29},{"ruleId":"224","severity":1,"message":"241","line":5,"column":10,"nodeType":"226","messageId":"227","endLine":5,"endColumn":19},{"ruleId":"224","severity":1,"message":"242","line":6,"column":23,"nodeType":"226","messageId":"227","endLine":6,"endColumn":35},{"ruleId":"224","severity":1,"message":"243","line":11,"column":11,"nodeType":"226","messageId":"227","endLine":11,"endColumn":18},{"ruleId":"229","severity":1,"message":"244","line":42,"column":8,"nodeType":"231","endLine":42,"endColumn":22,"suggestions":"245"},{"ruleId":"224","severity":1,"message":"246","line":7,"column":23,"nodeType":"226","messageId":"227","endLine":7,"endColumn":35},{"ruleId":"224","severity":1,"message":"247","line":8,"column":29,"nodeType":"226","messageId":"227","endLine":8,"endColumn":47},{"ruleId":"224","severity":1,"message":"225","line":1,"column":27,"nodeType":"226","messageId":"227","endLine":1,"endColumn":37},{"ruleId":"224","severity":1,"message":"248","line":2,"column":10,"nodeType":"226","messageId":"227","endLine":2,"endColumn":21},{"ruleId":"224","severity":1,"message":"249","line":15,"column":28,"nodeType":"226","messageId":"227","endLine":15,"endColumn":44},{"ruleId":"250","severity":1,"message":"251","line":22,"column":34,"nodeType":"252","messageId":"253","endLine":22,"endColumn":36},{"ruleId":"229","severity":1,"message":"254","line":24,"column":8,"nodeType":"231","endLine":24,"endColumn":23,"suggestions":"255"},{"ruleId":"229","severity":1,"message":"256","line":43,"column":8,"nodeType":"231","endLine":43,"endColumn":10,"suggestions":"257"},{"ruleId":"229","severity":1,"message":"256","line":17,"column":8,"nodeType":"231","endLine":17,"endColumn":23,"suggestions":"258"},{"ruleId":"229","severity":1,"message":"256","line":17,"column":8,"nodeType":"231","endLine":17,"endColumn":23,"suggestions":"259"},{"ruleId":"224","severity":1,"message":"260","line":79,"column":28,"nodeType":"226","messageId":"227","endLine":79,"endColumn":44},{"ruleId":"229","severity":1,"message":"256","line":17,"column":8,"nodeType":"231","endLine":17,"endColumn":23,"suggestions":"261"},{"ruleId":"224","severity":1,"message":"260","line":70,"column":28,"nodeType":"226","messageId":"227","endLine":70,"endColumn":44},{"ruleId":"224","severity":1,"message":"262","line":5,"column":8,"nodeType":"226","messageId":"227","endLine":5,"endColumn":16},{"ruleId":"224","severity":1,"message":"263","line":16,"column":13,"nodeType":"226","messageId":"227","endLine":16,"endColumn":26},{"ruleId":"224","severity":1,"message":"264","line":17,"column":23,"nodeType":"226","messageId":"227","endLine":17,"endColumn":34},{"ruleId":"229","severity":1,"message":"256","line":13,"column":8,"nodeType":"231","endLine":13,"endColumn":18,"suggestions":"265"},{"ruleId":"224","severity":1,"message":"266","line":34,"column":13,"nodeType":"226","messageId":"227","endLine":34,"endColumn":19},{"ruleId":"224","severity":1,"message":"263","line":5,"column":13,"nodeType":"226","messageId":"227","endLine":5,"endColumn":26},{"ruleId":"224","severity":1,"message":"260","line":6,"column":27,"nodeType":"226","messageId":"227","endLine":6,"endColumn":43},{"ruleId":"224","severity":1,"message":"267","line":13,"column":12,"nodeType":"226","messageId":"227","endLine":13,"endColumn":19},{"ruleId":"224","severity":1,"message":"268","line":13,"column":21,"nodeType":"226","messageId":"227","endLine":13,"endColumn":31},{"ruleId":"224","severity":1,"message":"269","line":71,"column":12,"nodeType":"226","messageId":"227","endLine":71,"endColumn":25},{"ruleId":"224","severity":1,"message":"270","line":71,"column":27,"nodeType":"226","messageId":"227","endLine":71,"endColumn":43},{"ruleId":"250","severity":1,"message":"271","line":75,"column":22,"nodeType":"252","messageId":"253","endLine":75,"endColumn":24},{"ruleId":"224","severity":1,"message":"272","line":7,"column":13,"nodeType":"226","messageId":"227","endLine":7,"endColumn":24},{"ruleId":"229","severity":1,"message":"273","line":34,"column":8,"nodeType":"231","endLine":34,"endColumn":10,"suggestions":"274"},{"ruleId":"224","severity":1,"message":"275","line":38,"column":12,"nodeType":"226","messageId":"227","endLine":38,"endColumn":24},{"ruleId":"224","severity":1,"message":"276","line":38,"column":26,"nodeType":"226","messageId":"227","endLine":38,"endColumn":41},{"ruleId":"224","severity":1,"message":"277","line":20,"column":23,"nodeType":"226","messageId":"227","endLine":20,"endColumn":35},{"ruleId":"250","severity":1,"message":"251","line":28,"column":25,"nodeType":"252","messageId":"253","endLine":28,"endColumn":27},{"ruleId":"224","severity":1,"message":"278","line":8,"column":11,"nodeType":"226","messageId":"227","endLine":8,"endColumn":13},{"ruleId":"229","severity":1,"message":"273","line":37,"column":8,"nodeType":"231","endLine":37,"endColumn":10,"suggestions":"279"},{"ruleId":"224","severity":1,"message":"275","line":39,"column":12,"nodeType":"226","messageId":"227","endLine":39,"endColumn":24},{"ruleId":"224","severity":1,"message":"276","line":39,"column":26,"nodeType":"226","messageId":"227","endLine":39,"endColumn":41},{"ruleId":"224","severity":1,"message":"280","line":1,"column":27,"nodeType":"226","messageId":"227","endLine":1,"endColumn":36},{"ruleId":"224","severity":1,"message":"281","line":3,"column":10,"nodeType":"226","messageId":"227","endLine":3,"endColumn":34},{"ruleId":"224","severity":1,"message":"277","line":57,"column":23,"nodeType":"226","messageId":"227","endLine":57,"endColumn":35},{"ruleId":"229","severity":1,"message":"282","line":57,"column":8,"nodeType":"231","endLine":57,"endColumn":22,"suggestions":"283"},{"ruleId":"224","severity":1,"message":"284","line":8,"column":26,"nodeType":"226","messageId":"227","endLine":8,"endColumn":41},{"ruleId":"229","severity":1,"message":"285","line":23,"column":8,"nodeType":"231","endLine":23,"endColumn":10,"suggestions":"286"},{"ruleId":"224","severity":1,"message":"287","line":28,"column":12,"nodeType":"226","messageId":"227","endLine":28,"endColumn":20},{"ruleId":"224","severity":1,"message":"288","line":28,"column":22,"nodeType":"226","messageId":"227","endLine":28,"endColumn":33},"no-native-reassign",["289"],"no-negated-in-lhs",["290"],"no-unused-vars","'useContext' is defined but never used.","Identifier","unusedVar","'useHistory' is defined but never used.","react-hooks/exhaustive-deps","React Hook useCallback has a missing dependency: 'login'. Either include it or remove the dependency array.","ArrayExpression",["291"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","'Router' is defined but never used.","'isOpen' is assigned a value but never used.","'setIsOpen' is assigned a value but never used.","'SavePopUp' is defined but never used.","'FormProvider' is defined but never used.","'tamplet' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'setFormData'. Either include it or remove the dependency array.",["292"],"'setFormTitle' is assigned a value but never used.","'setformDiscreption' is assigned a value but never used.","'FormContext' is defined but never used.","'setIdOfActiveQue' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","React Hook useEffect has a missing dependency: 'id'. Either include it or remove the dependency array. If 'setIsactive' needs the current value of 'id', you can also switch to useReducer instead of useState and read 'id' in the reducer.",["293"],"React Hook useEffect has missing dependencies: 'allquestions', 'id', and 'setAllquestions'. Either include them or remove the dependency array.",["294"],["295"],["296"],"'setquestionArray' is assigned a value but never used.",["297"],"'ReactDOM' is defined but never used.","'idOfActiveQue' is assigned a value but never used.","'setFormData' is assigned a value but never used.",["298"],"'values' is assigned a value but never used.","'options' is assigned a value but never used.","'setOptions' is assigned a value but never used.","'checkboxValue' is assigned a value but never used.","'setCheckboxValue' is assigned a value but never used.","Expected '!==' and instead saw '!='.","'currentUser' is assigned a value but never used.","React Hook React.useEffect has a missing dependency: 'thisID'. Either include it or remove the dependency array.",["299"],"'responceList' is assigned a value but never used.","'setResponceList' is assigned a value but never used.","'setquestions' is assigned a value but never used.","'id' is assigned a value but never used.",["300"],"'useEffect' is defined but never used.","'SubmittedFormQuestionBox' is defined but never used.","React Hook React.useEffect has missing dependencies: 'index' and 'isSelected'. Either include them or remove the dependency array.",["301"],"'setResponsesArr' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'responsesArr'. Either include it or remove the dependency array.",["302"],"'checkBox' is assigned a value but never used.","'setCheckBox' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"303","fix":"304"},{"desc":"305","fix":"306"},{"desc":"307","fix":"308"},{"desc":"309","fix":"310"},{"desc":"311","fix":"312"},{"desc":"311","fix":"313"},{"desc":"311","fix":"314"},{"desc":"315","fix":"316"},{"desc":"317","fix":"318"},{"desc":"317","fix":"319"},{"desc":"320","fix":"321"},{"desc":"322","fix":"323"},"Update the dependencies array to be: [history, login]",{"range":"324","text":"325"},"Update the dependencies array to be: [allquestions, setFormData]",{"range":"326","text":"327"},"Update the dependencies array to be: [id, idOfActiveQue]",{"range":"328","text":"329"},"Update the dependencies array to be: [allquestions, id, setAllquestions]",{"range":"330","text":"331"},"Update the dependencies array to be: [allquestions, id, questionArray, setAllquestions]",{"range":"332","text":"333"},{"range":"334","text":"333"},{"range":"335","text":"333"},"Update the dependencies array to be: [allquestions, id, required, setAllquestions]",{"range":"336","text":"337"},"Update the dependencies array to be: [thisID]",{"range":"338","text":"339"},{"range":"340","text":"339"},"Update the dependencies array to be: [handelChange, index, isSelected]",{"range":"341","text":"342"},"Update the dependencies array to be: [responsesArr]",{"range":"343","text":"344"},[653,662],"[history, login]",[1456,1470],"[allquestions, setFormData]",[782,797],"[id, idOfActiveQue]",[1229,1231],"[allquestions, id, setAllquestions]",[453,468],"[allquestions, id, questionArray, setAllquestions]",[456,471],[452,467],[486,496],"[allquestions, id, required, setAllquestions]",[835,837],"[thisID]",[869,871],[1687,1701],"[handelChange, index, isSelected]",[453,455],"[responsesArr]"]