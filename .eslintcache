[{"D:\\Projects\\google-form\\src\\index.js":"1","D:\\Projects\\google-form\\src\\App.js":"2","D:\\Projects\\google-form\\src\\serviceWorker.js":"3","D:\\Projects\\google-form\\src\\pages\\LogIn.js":"4","D:\\Projects\\google-form\\src\\pages\\HomePage.js":"5","D:\\Projects\\google-form\\src\\componants\\Header.js":"6","D:\\Projects\\google-form\\src\\componants\\DocsHomescreen.js":"7","D:\\Projects\\google-form\\src\\componants\\FreeTamplate.js":"8","D:\\Projects\\google-form\\src\\componants\\RecentForms.js":"9","D:\\Projects\\google-form\\src\\componants\\OldFormslist.js":"10","D:\\Projects\\google-form\\src\\pages\\FormPage.js":"11","D:\\Projects\\google-form\\src\\Context\\FormContext.js":"12","D:\\Projects\\google-form\\src\\routers\\AllRouters.js":"13","D:\\Projects\\google-form\\src\\firebase.js":"14","D:\\Projects\\google-form\\src\\Context\\AuthContext.js":"15","D:\\Projects\\google-form\\src\\routers\\PrivateRoute.js":"16","D:\\Projects\\google-form\\src\\pages\\SubmittedFormPage.js":"17","D:\\Projects\\google-form\\src\\componants\\SubmittedForm\\FormHome.js":"18","D:\\Projects\\google-form\\src\\componants\\SubmittedForm\\SubmittedFormHeader.js":"19","D:\\Projects\\google-form\\src\\componants\\SubmittedForm\\SubmittedFormQuestionBox.js":"20","D:\\Projects\\google-form\\src\\componants\\SubmittedForm\\SubmittedFormTitle.js":"21","D:\\Projects\\google-form\\src\\pages\\SharedFormPage.js":"22","D:\\Projects\\google-form\\src\\componants\\SharedForm\\SharedForm.js":"23","D:\\Projects\\google-form\\src\\componants\\SharedForm\\SharedFormQuestionBox.js":"24","D:\\Projects\\google-form\\src\\componants\\SharedForm\\SubmitedForm.js":"25","D:\\Projects\\google-form\\src\\componants\\SubmittedForm\\Responses.js":"26","D:\\Projects\\google-form\\src\\componants\\SubmittedForm\\ResponsesBox.js":"27","D:\\Projects\\google-form\\src\\componants\\FormModule\\FormHeader.js":"28","D:\\Projects\\google-form\\src\\componants\\FormModule\\EnterFormTitle.js":"29","D:\\Projects\\google-form\\src\\componants\\FormModule\\BoxQuestionSingle.js":"30","D:\\Projects\\google-form\\src\\componants\\FormModule\\OptionBox.js":"31","D:\\Projects\\google-form\\src\\componants\\FormModule\\OperationBoxForQuestion.js":"32","D:\\Projects\\google-form\\src\\componants\\FormModule\\FormToolBar.js":"33","D:\\Projects\\google-form\\src\\componants\\FormModule\\NotActiveQuestion.js":"34","D:\\Projects\\google-form\\src\\componants\\FormModule\\SaveErrors.js":"35","D:\\Projects\\google-form\\src\\Context\\ErrorContext.js":"36"},{"size":464,"mtime":1614839260056,"results":"37","hashOfConfig":"38"},{"size":249,"mtime":1615138926400,"results":"39","hashOfConfig":"38"},{"size":5086,"mtime":1614839260056,"results":"40","hashOfConfig":"38"},{"size":10899,"mtime":1616405481459,"results":"41","hashOfConfig":"38"},{"size":320,"mtime":1616404835350,"results":"42","hashOfConfig":"38"},{"size":1698,"mtime":1616083877908,"results":"43","hashOfConfig":"38"},{"size":618,"mtime":1616080092607,"results":"44","hashOfConfig":"38"},{"size":2851,"mtime":1616082599189,"results":"45","hashOfConfig":"38"},{"size":2602,"mtime":1616405712573,"results":"46","hashOfConfig":"38"},{"size":1306,"mtime":1616083715644,"results":"47","hashOfConfig":"38"},{"size":2114,"mtime":1616397249837,"results":"48","hashOfConfig":"38"},{"size":791,"mtime":1616405647588,"results":"49","hashOfConfig":"38"},{"size":1382,"mtime":1616404819763,"results":"50","hashOfConfig":"38"},{"size":988,"mtime":1616058534931,"results":"51","hashOfConfig":"38"},{"size":1169,"mtime":1615473049123,"results":"52","hashOfConfig":"38"},{"size":504,"mtime":1616404863336,"results":"53","hashOfConfig":"38"},{"size":1379,"mtime":1616405756058,"results":"54","hashOfConfig":"38"},{"size":1633,"mtime":1616405846364,"results":"55","hashOfConfig":"38"},{"size":6925,"mtime":1616397577885,"results":"56","hashOfConfig":"38"},{"size":1903,"mtime":1616397395981,"results":"57","hashOfConfig":"38"},{"size":812,"mtime":1616092948964,"results":"58","hashOfConfig":"38"},{"size":1428,"mtime":1616405733405,"results":"59","hashOfConfig":"38"},{"size":3195,"mtime":1616405609988,"results":"60","hashOfConfig":"38"},{"size":2588,"mtime":1616406815179,"results":"61","hashOfConfig":"38"},{"size":605,"mtime":1615917903553,"results":"62","hashOfConfig":"38"},{"size":2254,"mtime":1616398074487,"results":"63","hashOfConfig":"38"},{"size":1731,"mtime":1616398387412,"results":"64","hashOfConfig":"38"},{"size":3774,"mtime":1616405559353,"results":"65","hashOfConfig":"38"},{"size":1483,"mtime":1616252092910,"results":"66","hashOfConfig":"38"},{"size":6874,"mtime":1616388546251,"results":"67","hashOfConfig":"38"},{"size":1472,"mtime":1616328784885,"results":"68","hashOfConfig":"38"},{"size":3182,"mtime":1616334260881,"results":"69","hashOfConfig":"38"},{"size":8112,"mtime":1616405588297,"results":"70","hashOfConfig":"38"},{"size":2692,"mtime":1616335194161,"results":"71","hashOfConfig":"38"},{"size":1752,"mtime":1616394867669,"results":"72","hashOfConfig":"38"},{"size":516,"mtime":1616392360894,"results":"73","hashOfConfig":"38"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},"1qcl4f4",{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"91","usedDeprecatedRules":"76"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"94","messages":"95","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"96","usedDeprecatedRules":"76"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"111","messages":"112","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"113","messages":"114","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"115","usedDeprecatedRules":"76"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"118","messages":"119","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"122","messages":"123","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"124","messages":"125","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"126","messages":"127","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"128","messages":"129","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"130","usedDeprecatedRules":"76"},{"filePath":"131","messages":"132","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"133","usedDeprecatedRules":"76"},{"filePath":"134","messages":"135","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"136","messages":"137","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"138","usedDeprecatedRules":"76"},{"filePath":"139","messages":"140","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"141","usedDeprecatedRules":"76"},{"filePath":"142","messages":"143","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"144","usedDeprecatedRules":"76"},{"filePath":"145","messages":"146","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"147","usedDeprecatedRules":"76"},{"filePath":"148","messages":"149","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"150","messages":"151","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"152","usedDeprecatedRules":"76"},{"filePath":"153","messages":"154","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"155","messages":"156","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"D:\\Projects\\google-form\\src\\index.js",[],["157","158"],"D:\\Projects\\google-form\\src\\App.js",[],"D:\\Projects\\google-form\\src\\serviceWorker.js",[],"D:\\Projects\\google-form\\src\\pages\\LogIn.js",["159","160","161","162","163","164","165"],"D:\\Projects\\google-form\\src\\pages\\HomePage.js",[],"D:\\Projects\\google-form\\src\\componants\\Header.js",[],"D:\\Projects\\google-form\\src\\componants\\DocsHomescreen.js",[],"D:\\Projects\\google-form\\src\\componants\\FreeTamplate.js",["166","167"],"import React from 'react'\r\nimport {\r\n    BrowserRouter as Router,\r\n    Link\r\n} from \"react-router-dom\";\r\nexport const FreeTamplate = () => {\r\n    const [formOptions, setformOptions] = React.useState([\"Blanks\", \"Contact Information\", \"Rsvp\", \"Party Invite\", \"T-shirt Sign up\", \"Event Registration\"])\r\n\r\n    return (\r\n        <div>\r\n            <div class=\"p-4 flex items-center justify-center bg-gray-100  \">\r\n                <div class=\"w-full max-w-screen-md mx-auto\">\r\n                    <fieldset class=\"space-y-6\">\r\n                        <div class=\"flex items-center justify-between py-4 border-b border-gray-300\">\r\n                            <div className=\"sm:font-semibold font-extrabold text-2xl\">Start a new form </div>\r\n                            <div className=\"flex items-center justify-center\"><span className=\"hover:bg-gray-400 p-2 rounded-md cursor-pointer hidden sm:block\" >Tamplate Gallery <svg className=\"w-4 mx-2 inline\" xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\r\n                                <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth=\"2\" d=\"M7 16V4m0 0L3 8m4-4l4 4m6 0v12m0 0l4-4m-4 4l-4-4\" />\r\n                            </svg> </span>\r\n\r\n                                <span className=\"rounded-full cursor-pointer hover:bg-gray-400  p-2 hidden sm:block\"><svg className=\"w-8 mx-2 inline    text-gray-500\" xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\r\n                                    <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth=\"2\" d=\"M12 5v.01M12 12v.01M12 19v.01M12 6a1 1 0 110-2 1 1 0 010 2zm0 7a1 1 0 110-2 1 1 0 010 2zm0 7a1 1 0 110-2 1 1 0 010 2z\" />\r\n                                </svg></span>\r\n                            </div>\r\n                        </div>\r\n                        <Link to=\"/form\">\r\n                            <div class=\"grid grid-col gap-6\">\r\n                                {formOptions.map((data, i) => {\r\n                                    return (<div key={i}>\r\n                                        <div className=\" relative flex flex-col p-1 bg-white  rounded-lg shadow-md cursor-pointer \r\n                                    border-2  hover:border-blue-400  \">\r\n                                            <img src={process.env.PUBLIC_URL + '/ques.jpg'} alt=\"a\" class=\"md:w-full md:h-auto rounded-lg\" />\r\n                                            <span className=\"font-semibold\">{data}</span>\r\n                                        </div>\r\n                                    </div>)\r\n                                })\r\n                                }\r\n                            </div>\r\n                        </Link >\r\n                    </fieldset>\r\n                </div>\r\n            </div >\r\n\r\n        </div >\r\n    )\r\n}\r\n","D:\\Projects\\google-form\\src\\componants\\RecentForms.js",["168"],"D:\\Projects\\google-form\\src\\componants\\OldFormslist.js",["169","170"],"import React, { useState } from 'react'\r\nimport { Link } from 'react-router-dom'\r\n\r\nexport const OldFormslist = ({ data }) => {\r\n    console.log(data)\r\n    const [isOpen, setIsOpen] = useState(false)\r\n\r\n    return (\r\n        <Link to={`/form/a/${data.uniqueID}`} className=\"block h-42 w-42   border-2 border-gray-700  sm:border-gray-400 hover:border-blue-400 hover:text-blue-700  hover:font-semibold  rounded\">\r\n            <div className=\"  flex flex-col justify-evenly \">\r\n                <div className=\" m-2  overflow-hidden w-auto\">\r\n\r\n                    <img src={process.env.PUBLIC_URL + '/ques.jpg'} alt=\"a\" class=\" rounded-lg\" />\r\n\r\n                </div>\r\n                <div className=\"px p-2  \">\r\n                    <svg className=\"text-white  w-4 h-4 rounded-2xl bg-purple-600 inline\" xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\r\n                        <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M9 17v-2m3 2v-4m3 4v-6m2 10H7a2 2 0 01-2-2V5a2 2 0 012-2h5.586a1 1 0 01.707.293l5.414 5.414a1 1 0 01.293.707V19a2 2 0 01-2 2z\" />\r\n                    </svg>  <span class=\"font-semibold  inline\">{data.title ? data.title : \"Untitle Form\"}</span>\r\n                </div>\r\n            </div>\r\n        </Link >\r\n\r\n    )\r\n}\r\n","D:\\Projects\\google-form\\src\\pages\\FormPage.js",["171","172","173"],"D:\\Projects\\google-form\\src\\Context\\FormContext.js",[],"D:\\Projects\\google-form\\src\\routers\\AllRouters.js",[],"D:\\Projects\\google-form\\src\\firebase.js",[],"D:\\Projects\\google-form\\src\\Context\\AuthContext.js",[],"D:\\Projects\\google-form\\src\\routers\\PrivateRoute.js",[],"D:\\Projects\\google-form\\src\\pages\\SubmittedFormPage.js",["174","175","176"],"D:\\Projects\\google-form\\src\\componants\\SubmittedForm\\FormHome.js",["177","178"],"D:\\Projects\\google-form\\src\\componants\\SubmittedForm\\SubmittedFormHeader.js",["179"],"import React from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport QRCode from 'react-qr-code';\r\n\r\nexport const SubmittedFormHeader = ({ id, value, title, }) => {\r\n    const { idOpen, setIdOpen } = value\r\n\r\n\r\n    const [showSideBar, setShowSideBar] = React.useState(false)\r\n    return (\r\n        <div class=\"border-b shadow-lg \" >\r\n            {showSideBar ? <SideBar value={{ showSideBar, setShowSideBar }} id={id} /> : null}\r\n\r\n            <header class=\" md:flex md:items-center md:justify-between p-4 pb-0  md:pb-4\">\r\n                <div class=\" md:flex md:items-center\">\r\n                    <Link to=\"/\" className=\"mx-4 my-auto text-gray-800\"><svg class=\"text-gray-800 h-4 w-4 inline\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 20 20\" fill=\"currentColor\">\r\n                        <path d=\"M10.707 2.293a1 1 0 00-1.414 0l-7 7a1 1 0 001.414 1.414L4 10.414V17a1 1 0 001 1h2a1 1 0 001-1v-2a1 1 0 011-1h2a1 1 0 011 1v2a1 1 0 001 1h2a1 1 0 001-1v-6.586l.293.293a1 1 0 001.414-1.414l-7-7z\" />\r\n                    </svg></Link>\r\n                    {title.length > 0 ? title : \"Untitled Form\"}\r\n                </div>\r\n                <nav className=\"w-auto text-gray-700 flex justify-center flex-row items-center\r\n                \">\r\n\r\n\r\n                    <button className=\"mx-4 my-4 inline-flex  text-white bg-indigo-500 border-0 py-2 px-8 focus:outline-none hover:bg-indigo-600 rounded text-lg \" onClick={() => { setShowSideBar(true) }}>\r\n                        {/* <Link to={`/form/b/fill/${id}`} class=\"\" >Share</Link></button> */}\r\n\r\nShare</button>\r\n\r\n\r\n                    <span>\r\n                        <img alt=\"Placeholder\" class=\"inline mx-4 rounded-full\" src=\"https://picsum.photos/32/32/?random\" />\r\n\r\n                    </span>\r\n\r\n\r\n\r\n\r\n                </nav>\r\n\r\n\r\n\r\n            </header >\r\n\r\n\r\n            <div className=\"flex justify-center \">\r\n                <div onClick={() => { setIdOpen(1) }} className={\"mx-4 p-4 py-2  cursor-pointer\" +\r\n                    (idOpen === 1 ? \" font-semibold border-blue-600 border-b-4 text-blue-600\" : \"\")} >  Questions</div>\r\n\r\n                <div onClick={() => { setIdOpen(2) }} className={\"mx-4 p-4 py-2  cursor-pointer\" +\r\n                    (idOpen === 2 ? \" font-semibold border-blue-600 border-b-4 text-blue-600\" : \"\")}>  Responses</div>\r\n            </div>\r\n        </div >\r\n\r\n\r\n\r\n\r\n\r\n\r\n    )\r\n}\r\n\r\n\r\n\r\n\r\n\r\nconst SideBar = ({ value, id }) => {\r\n\r\n    const domain = window.location.hostname\r\n\r\n    const { showSideBar, setShowSideBar } = value\r\n    const tourl = `https%3A%2F%2F${domain}%2Fform%2Fb%2Ffill%2F${id}`\r\n    const text = `Fill%20this%20survey%20https%3A%2F%2F${domain}%2Fform%2Fb%2Ffill%2F${id}`\r\n    return (\r\n        <transition name=\"slide z-50 slide-enter-active transition-slow ease-in transition-transform slide-enter \">\r\n            <div v-if=\"showmenu\">\r\n                <button onClick={() => { setShowSideBar(false) }} class=\"fixed top-0 right-0 bottom-0 left-0 h-full w-full bg-black opacity-50\">X</button>\r\n                <div class=\" md:w-1/2  w-10/12 min-h-screen p-8 bg-gray-200 fixed right-0 top-0 shadow-2xl ease-in-out  transition-transform transition-medium\">\r\n\r\n\r\n                    <p class=\"md:mt-32 text-center  text-gray-600 flex flex-col justify-center items-center  text-xl\" >\r\n\r\n                        <a href={`/form/b/fill/${id}`} target=\"_blank\" rel=\"noreferrer noopener\">link to form</a>\r\n\r\n\r\n                        <a href={`https://api.whatsapp.com/send?text=${text}`} target=\"_blank\" rel=\"noreferrer noopener\" aria-label=\"Share on WhatsApp\" title=\"Share on WhatsApp\" className=\"block py-3 px-2 my-2 bg-green-300 text-gray-800 rounded-lg font-bold  border border-green-600 w-64\"> <svg className=\"w-4 h-4 inline mx-2\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\"><path d=\"M20.1 3.9C17.9 1.7 15 .5 12 .5 5.8.5.7 5.6.7 11.9c0 2 .5 3.9 1.5 5.6L.6 23.4l6-1.6c1.6.9 3.5 1.3 5.4 1.3 6.3 0 11.4-5.1 11.4-11.4-.1-2.8-1.2-5.7-3.3-7.8zM12 21.4c-1.7 0-3.3-.5-4.8-1.3l-.4-.2-3.5 1 1-3.4L4 17c-1-1.5-1.4-3.2-1.4-5.1 0-5.2 4.2-9.4 9.4-9.4 2.5 0 4.9 1 6.7 2.8 1.8 1.8 2.8 4.2 2.8 6.7-.1 5.2-4.3 9.4-9.5 9.4zm5.1-7.1c-.3-.1-1.7-.9-1.9-1-.3-.1-.5-.1-.7.1-.2.3-.8 1-.9 1.1-.2.2-.3.2-.6.1s-1.2-.5-2.3-1.4c-.9-.8-1.4-1.7-1.6-2-.2-.3 0-.5.1-.6s.3-.3.4-.5c.2-.1.3-.3.4-.5.1-.2 0-.4 0-.5C10 9 9.3 7.6 9 7c-.1-.4-.4-.3-.5-.3h-.6s-.4.1-.7.3c-.3.3-1 1-1 2.4s1 2.8 1.1 3c.1.2 2 3.1 4.9 4.3.7.3 1.2.5 1.6.6.7.2 1.3.2 1.8.1.6-.1 1.7-.7 1.9-1.3.2-.7.2-1.2.2-1.3-.1-.3-.3-.4-.6-.5z\"></path></svg>Whatsapp</a>\r\n\r\n                        <a href={`https://twitter.com/intent/tweet/?text=${text}`} target=\"_blank\" rel=\"noreferrer noopener\" aria-label=\"Share on Twitter\" title=\"Share on Twitter\" className=\"block py-3 px-2 my-2 bg-green-300 text-gray-800 rounded-lg font-bold  border border-green-600 w-64\"> <svg className=\"w-4 h-4 inline mx-2\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\"><path d=\"M23.44 4.83c-.8.37-1.5.38-2.22.02.93-.56.98-.96 1.32-2.02-.88.52-1.86.9-2.9 1.1-.82-.88-2-1.43-3.3-1.43-2.5 0-4.55 2.04-4.55 4.54 0 .36.03.7.1 1.04-3.77-.2-7.12-2-9.36-4.75-.4.67-.6 1.45-.6 2.3 0 1.56.8 2.95 2 3.77-.74-.03-1.44-.23-2.05-.57v.06c0 2.2 1.56 4.03 3.64 4.44-.67.2-1.37.2-2.06.08.58 1.8 2.26 3.12 4.25 3.16C5.78 18.1 3.37 18.74 1 18.46c2 1.3 4.4 2.04 6.97 2.04 8.35 0 12.92-6.92 12.92-12.93 0-.2 0-.4-.02-.6.9-.63 1.96-1.22 2.56-2.14z\"></path></svg>Twitter</a>\r\n\r\n                        <a href={`https://www.linkedin.com/sharing/share-offsite/?url=${tourl}`} target=\"_blank\" rel=\"noreferrer noopener\" aria-label=\"Share on LinkdIn\" title=\"Share on LinkdIn\" className=\"block py-3 px-2 my-2 bg-green-300 text-gray-800 rounded-lg font-bold  border border-green-600 w-64\"><svg className=\"w-4 h-4 inline mx-2\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\"><path d=\"M6.5 21.5h-5v-13h5v13zM4 6.5C2.5 6.5 1.5 5.3 1.5 4s1-2.4 2.5-2.4c1.6 0 2.5 1 2.6 2.5 0 1.4-1 2.5-2.6 2.5zm11.5 6c-1 0-2 1-2 2v7h-5v-13h5V10s1.6-1.5 4-1.5c3 0 5 2.2 5 6.3v6.7h-5v-7c0-1-1-2-2-2z\"></path></svg>LinkdIn</a>\r\n\r\n                        <a href={`https://telegram.me/share/url?text=&url=${tourl}`} target=\"_blank\" rel=\"noreferrer noopener\" aria-label=\"Share on Telegram\" title=\"Share on Telegram\" className=\"block py-3 px-2 my-2 bg-green-300 text-gray-800 rounded-lg font-bold  border border-green-600 w-64\"><svg className=\"w-4 h-4 inline mx-2\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\"><path d=\"M.707 8.475C.275 8.64 0 9.508 0 9.508s.284.867.718 1.03l5.09 1.897 1.986 6.38a1.102 1.102 0 0 0 1.75.527l2.96-2.41a.405.405 0 0 1 .494-.013l5.34 3.87a1.1 1.1 0 0 0 1.046.135 1.1 1.1 0 0 0 .682-.803l3.91-18.795A1.102 1.102 0 0 0 22.5.075L.706 8.475z\"></path></svg> Telegram</a>\r\n\r\n                        <div className=\" my-8\"> <QRCode value={`https://${domain}/form/b/fill/${id}`} />,</div>\r\n\r\n\r\n\r\n\r\n                    </p>\r\n                </div >\r\n            </div >\r\n        </transition >\r\n    )\r\n}\r\n","D:\\Projects\\google-form\\src\\componants\\SubmittedForm\\SubmittedFormQuestionBox.js",["180"],"D:\\Projects\\google-form\\src\\componants\\SubmittedForm\\SubmittedFormTitle.js",[],"D:\\Projects\\google-form\\src\\pages\\SharedFormPage.js",["181","182","183","184"],"D:\\Projects\\google-form\\src\\componants\\SharedForm\\SharedForm.js",["185","186","187"],"D:\\Projects\\google-form\\src\\componants\\SharedForm\\SharedFormQuestionBox.js",["188"],"D:\\Projects\\google-form\\src\\componants\\SharedForm\\SubmitedForm.js",[],"D:\\Projects\\google-form\\src\\componants\\SubmittedForm\\Responses.js",["189","190","191","192","193","194","195","196","197"],"import React, { useState, useEffect } from 'react'\r\nimport { ResponsesBox } from './ResponsesBox';\r\n\r\nexport const Responses = ({ data, questions }) => {\r\n\r\n    // function transposeArray(array, arrayLength) {\r\n    //     const newArray = [];\r\n    //     for (var i = 0; i < array.length; i++) {\r\n    //         newArray.push([]);\r\n    //     };\r\n\r\n    //     for (var i = 0; i < array.length; i++) {\r\n    //         for (var j = 0; j < arrayLength; j++) {\r\n    //             newArray[j].push(array[i][j]);\r\n    //         };\r\n    //     };\r\n\r\n    //     return newArray;\r\n    // }\r\n\r\n\r\n\r\n    const [responsesArr, setResponsesArr] = useState(() => {\r\n\r\n        let todoList = []\r\n        for (let id in data.responceList) {\r\n            todoList.push([...data.responceList[id]]);\r\n        }\r\n        todoList = todoList[0].map((_, colIndex) => todoList.map(row => row[colIndex]));\r\n        return (todoList);\r\n    })\r\n\r\n    const [totalAns, setTotalAns] = useState(() => {\r\n\r\n        let todoList = []\r\n        for (let id in data.responceList) {\r\n            todoList.push([...data.responceList[id]]);\r\n        }\r\n        return (todoList.length);\r\n    })\r\n\r\n    console.log(data.responceList, \"aaaa\")\r\n\r\n    React.useEffect(() => {\r\n        let chartarr = []\r\n\r\n        for (let i = 0; i < data.content.length; i++) {\r\n\r\n\r\n            let thisquesAnsArr = Array(data.content[i].options.length)\r\n            const countOccurrences = (arr, val) => arr.reduce((a, v) => (v === val ? a + 1 : a), 0);\r\n            let thisarray = (responsesArr[i])\r\n\r\n        }\r\n    }, [])\r\n\r\n    const countOccurrences = arr => arr.reduce((prev, curr) => (prev[curr] = ++prev[curr] || 1, prev), {});\r\n\r\n\r\n\r\n    if (data.responceList) {\r\n\r\n\r\n\r\n        return (\r\n            <div className=\" container mx-auto\">\r\n\r\n                <div className=\"\">\r\n                    {questions.map((question, i) => {\r\n                        return <ResponsesBox key={i} data={question} color={data.color} allData={data} index={i} responsesArr={countOccurrences(responsesArr[i])} totalVote={totalAns} />\r\n                    })}\r\n                </div>\r\n\r\n            </div>\r\n        )\r\n    }\r\n    return (\r\n\r\n        <div>\r\n            No Data subbmited Yet\r\n        </div>\r\n    )\r\n}\r\n","D:\\Projects\\google-form\\src\\componants\\SubmittedForm\\ResponsesBox.js",["198","199","200"],"import React from 'react'\r\n\r\nexport const ResponsesBox = ({ data, color, allData, index, responsesArr, totalVote }) => {\r\n    //     options: (2) [{…}, {…}]\r\n    // question: \"11\"\r\n    // questiontype: \"Multiple Choice\"\r\n    // required: true\r\n\r\n\r\n\r\n\r\n    return (\r\n\r\n        <div className=\"container mx-auto my-4  \">\r\n            <div className=\"  container mx-auto border-l-8 rounded-lg   my-8   p-4 shadow-sm bg-white border-blue-400 border flex justify-between\" style={{ borderColor: ` ${color ? color : \"#F1F1F0\"}` }} >\r\n\r\n\r\n                <div className=\" md:w-2/3 \">\r\n                    <div class=\" p-4  w-full  text-gray-800 leading-tight text-4xl font-extrabold \" >{data.question}\r\n                        {data.required ? <span className=\"mx-8  text-red-500 font-bold text-xl \">* required</span> : null}</div>\r\n\r\n\r\n                    {data.options.map((option, i) => {\r\n                        return <Box checkOption={option} key={i} volume={responsesArr[++i]} key={i} />\r\n                    })}\r\n                </div>\r\n                <div>\r\n                    {responsesArr[0] ? <div> Skipped By: {responsesArr[0]}</div> : null}\r\n                 Total submission: {totalVote}\r\n                </div>\r\n            </div >\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\n\r\nconst Box = ({ checkOption, volume }) => {\r\n    console.log(volume ? volume : \"Nan\")\r\n    const [checkBox, setCheckBox] = React.useState(false)\r\n\r\n    return (\r\n        <div class=\" p-2 flex w-full\">\r\n            <div class=\"inline  outline-none border rounded py-1 px-2 w-2/3 bg-white text-sm text-gray-700  \"  > {checkOption}</div>   {(volume ? <span className=\"mx-4\">{volume}</span> : <span className=\"mx-4\">0</span>)}\r\n        </div>\r\n\r\n    )\r\n}\r\n","D:\\Projects\\google-form\\src\\componants\\FormModule\\FormHeader.js",["201"],"D:\\Projects\\google-form\\src\\componants\\FormModule\\EnterFormTitle.js",["202","203"],"import React, { useState, useContext } from 'react'\r\nimport { FormContext } from '../../Context/FormContext'\r\n\r\n\r\nexport const EnterFormTitle = () => {\r\n\r\n    const [formTitle, setFormTitle] = useState(\"\")\r\n    const [formDiscreption, setformDiscreption] = useState(\"\")\r\n\r\n\r\n\r\n    const { formData, setFormData } = useContext(FormContext)\r\n\r\n\r\n\r\n\r\n    function handelchange(e) {\r\n        setFormData(prevState => ({\r\n            ...prevState,\r\n            [e.target.name]: e.target.value\r\n\r\n        }))\r\n\r\n    }\r\n\r\n\r\n\r\n\r\n    return (\r\n        <div className=\"container mx-auto border-t-8 rounded-lg    p-4 shadow-sm bg-white\" style={{ borderColor: formData.color }}>\r\n            <div className=\"p-4\">\r\n                <input type=\"text\" name=\"title\" onChange={(e) => { handelchange(e) }} class=\"relative outline-none rounded py-4 px-3 w-full bg-white hover:shadow md:text-5xl \r\n                text-3xl        text-gray-700 placeholder-gray-800 focus:outline-none focus:shadow-outline border\" placeholder=\"Untitled Form\" value={formTitle.title} />\r\n            </div>\r\n            <div className=\"p-4\">\r\n                <input type=\"text\" name=\"discription\" onChange={(e) => { handelchange(e) }} class=\"relative outline-none rounded py-4 px-3 w-full bg-white hover:shadow text-base text-gray-700 placeholder-gray-800 focus:outline-none focus:shadow-outline border\" placeholder=\"Form Discription\" value={formDiscreption.discription} />\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","D:\\Projects\\google-form\\src\\componants\\FormModule\\BoxQuestionSingle.js",["204","205","206","207","208","209"],"import React, { useState, useEffect } from 'react'\r\nimport { FormToolBar } from './FormToolBar'\r\nimport { NotActiveQuestion } from './NotActiveQuestion'\r\nimport { OperationBoxForQuestion } from './OperationBoxForQuestion'\r\nimport { OptionBox } from './OptionBox'\r\n\r\n\r\n\r\nexport const BoxQuestionSingle = ({ data, value, id, color, isThisActive }) => {\r\n    const { allQuestions, setAllQuestions } = value\r\n\r\n    const { idOfActiveQue, setidOfActiveQue } = isThisActive\r\n\r\n\r\n    const [isactive, setIsactive] = useState()\r\n\r\n    useEffect(() => {\r\n        setIsactive(() => {\r\n            return idOfActiveQue == id\r\n        })\r\n        console.log(idOfActiveQue == id)\r\n    }, [idOfActiveQue])\r\n\r\n    const [textQuetionHeight, setTextQuetionHeight] = useState(\"auto\")\r\n    const [isOpen, setIsOpen] = useState(false)\r\n    const [questionType, setQuestionType] = useState(\"Question Type\")\r\n    const [questionData, setquestionData] = useState(data)\r\n\r\n\r\n\r\n    function handelquestionType(values, e) {\r\n        setIsOpen(!isOpen)\r\n        setQuestionType(\"Not availabe for now\")\r\n        setTimeout(() => {\r\n            setQuestionType(\"CheckBoxes\")\r\n\r\n        }, [2500])\r\n    }\r\n\r\n    function handelQuestionChange(e, id) {\r\n\r\n\r\n        let val = [...allQuestions]\r\n\r\n        val = val.map((x, i) => (i === id ? { ...x, [e.target.name]: e.target.value } : { ...x }))\r\n\r\n        console.log(data, id)\r\n        setAllQuestions(val)\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n\r\n    function autoGrow(e, id) {\r\n        setTextQuetionHeight(e.target.scrollHeight + \"px\")\r\n        handelQuestionChange(e, id)\r\n    }\r\n\r\n    function addOption() {\r\n        let val = [...allQuestions]\r\n        val = val.map((x, i) => (i === id ? { ...x, options: [...x.options, \"\"] } : { ...x }))\r\n        setAllQuestions(val)\r\n        \r\n    }\r\n    function removeOption(index) {\r\n\r\n        let val = [...allQuestions]\r\n        let RemovedOption = val[id].options\r\n        RemovedOption.splice(index, 1)\r\n        val = val.map((x, i) => (i === index ? { ...x, options: [...RemovedOption] } : { ...x }))\r\n        setAllQuestions(val)\r\n\r\n\r\n    }\r\n\r\n\r\n    function handelOptionhange(e, index) {\r\n        let val = [...allQuestions]\r\n        let option = val[id].options\r\n        let updatedOption = option.map((x, i) => (i === index ? e.target.value : x))\r\n\r\n        val = val.map((x, i) => (i === id ? { ...x, options: updatedOption } : { ...x }))\r\n\r\n        setAllQuestions(val)\r\n\r\n        console.log(option)\r\n\r\n    }\r\n\r\n\r\n    if (!isactive) {\r\n        return <NotActiveQuestion data={data} id={id} isThisActive={isThisActive} height={textQuetionHeight} />\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <div className=\"flex flex-row container mx-auto justify-between my-4\">\r\n                <div className=\" relative w-full mx-auto border-l-8 rounded-lg   md:my-8 p-2  md:p-4 shadow-sm bg-white\" style={{ borderColor: color }}>\r\n                    <div className=\"flex\">\r\n                        <textarea\r\n                            rows=\"1\"\r\n                            cols=\"1\"\r\n                            class=\"bg-gray-100 p-4 inline appearance-none border rounded w-1/2 text-gray-700 leading-tight focus:outline-none focus:shadow-outline  overflow-hidden\"\r\n\r\n                            name=\"question\"\r\n                            value={data.question}\r\n                            style={{ height: textQuetionHeight, resize: \"none\" }}\r\n                            onChange={(e) => { autoGrow(e, id) }}\r\n                            type=\"text\"\r\n                            placeholder=\"Question\"\r\n                        />\r\n\r\n\r\n\r\n\r\n                        <span className=\"w-1/3 aline-center m-auto\">\r\n                            <div class=\"z-15 bg-gray-900 relative text-sm block w-full  rounded hover:bg-gray-800 py-1 px-4 text-gray-100\" onClick={() => { setIsOpen(!isOpen) }} name=\"questionType\" >\r\n                                {questionType}\r\n\r\n                                {isOpen ? <div class=\"absolute rounded mt-2 py-2 text-gray-900 bg-gray-200   shadow w-full inset-x-0 z-10\">\r\n                                    <span class=\"hover:bg-gray-200 z-15 text-left block px-4 py-1\" values=\"Checkbox\" onClick={(e) => { handelquestionType(\"Checkbox\", e) }} ><svg className=\"h-8 inline\" xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\r\n                                        <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth=\"2\" d=\"M9 12l2 2 4-4m6 2a9 9 0 11-18 0 9 9 0 0118 0z\" />\r\n                                    </svg> CheckBoxes</span>\r\n                                    <span class=\"hover:bg-gray-200 z-10 text-left block px-4 py-1\" values=\"Multiple Choice\" onClick={(e) => { handelquestionType(\"Multiple Choice\", e) }} ><svg className=\"h-8 inline\" xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\r\n                                        <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth=\"2\" d=\"M9 5H7a2 2 0 00-2 2v12a2 2 0 002 2h10a2 2 0 002-2V7a2 2 0 00-2-2h-2M9 5a2 2 0 002 2h2a2 2 0 002-2M9 5a2 2 0 012-2h2a2 2 0 012 2m-3 7h3m-3 4h3m-6-4h.01M9 16h.01\" />\r\n                                    </svg>Multiple Choice</span>\r\n                                    <span class=\"hover:bg-gray-200 z-10 text-left block px-4 py-1\" values=\"Short Answer\" onClick={(e) => { handelquestionType(\"Short Answer\", e) }} ><svg className=\"h-8 inline\" xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\r\n                                        <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth=\"2\" d=\"M7 8h10M7 12h4m1 8l-4-4H5a2 2 0 01-2-2V6a2 2 0 012-2h14a2 2 0 012 2v8a2 2 0 01-2 2h-3l-4 4z\" />\r\n                                    </svg>Short Answer</span>\r\n\r\n                                </div> : null}\r\n                            </div>\r\n\r\n                        </span>\r\n                    </div>\r\n                    {data.options.map((x, i) => {\r\n                        return <OptionBox removeOption={removeOption} data={x} index={i} key={i} handelOptionhange={handelOptionhange} length={data.options.length} />\r\n                    })}\r\n                    <button onClick={() => { addOption() }} className=\"cursor-pointer mx-8 hover:underline focus:outline-none\"><svg className=\"w-8 h-8 inline  \" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 20 20\" fill=\"currentColor\">\r\n                        <path fillRule=\"evenodd\" d=\"M10 5a1 1 0 011 1v3h3a1 1 0 110 2h-3v3a1 1 0 11-2 0v-3H6a1 1 0 110-2h3V6a1 1 0 011-1z\" clip-rule=\"evenodd\" />\r\n                    </svg>Add Another</button>\r\n                    <div><OperationBoxForQuestion value={value} id={id} data={data} /></div>\r\n                </div>\r\n\r\n                <FormToolBar value={value} isThisActive={isThisActive} />\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","D:\\Projects\\google-form\\src\\componants\\FormModule\\OptionBox.js",["210"],"import React from 'react'\r\nimport { OperationBoxForQuestion } from './OperationBoxForQuestion'\r\n\r\nexport const OptionBox = ({ removeOption, data, index, handelOptionhange, length }) => {\r\n    return (\r\n        <div class=\"p-2 flex w-full md:justify-between\">\r\n            <label class=\"custom-label p-2 flex w-full\">\r\n                <input type=\"checkbox\" class=\"hidden\" defaultChecked={false}\r\n                />\r\n\r\n\r\n                <div className=\" w-4 h-4  md:w-6 md:h-6 border inline-block align-center mx-2 md:mx-4 my-auto rounded-lg \">\r\n                </div>\r\n\r\n                <input type=\"text\" class=\"inline  outline-none border border-gray-400 rounded py-1 px-2 w-full md:w-2/3 bg-white text-sm text-gray-700 placeholder-gray-400 focus:outline-none focus:shadow-outline\" value={data} placeholder=\"Options\" onChange={(e) => { handelOptionhange(e, index) }} />\r\n            </label>\r\n\r\n\r\n            {length <= 1 ? null : <div className=\"  align-center mx-4 my-auto rounded-full p-2 md:p-4 hover:bg-gray-200 hover:text-red-600 \"\r\n                onClick={() => { removeOption(index) }}>\r\n\r\n                <svg className=\"md:w-8 w-4 text-gray-700 cursor-pointer hover:text-red-600 \" xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\r\n                    <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth=\"2\" d=\"M6 18L18 6M6 6l12 12\" />\r\n                </svg>\r\n            </div>}\r\n        </div>\r\n    )\r\n}\r\n","D:\\Projects\\google-form\\src\\componants\\FormModule\\OperationBoxForQuestion.js",["211"],"import React, { useState, USeEffect } from 'react'\r\n\r\nexport const OperationBoxForQuestion = ({ value, id, data }) => {\r\n    const { allQuestions, setAllQuestions } = value\r\n\r\n    const [required, setRequired] = useState(false)\r\n\r\n\r\n    function dublicateOne() {\r\n        setAllQuestions(allQuestions => {\r\n            return [...allQuestions, data]\r\n        })\r\n    }\r\n    function removeOne(index) {\r\n        let filteredQuestion = [...allQuestions]\r\n        filteredQuestion.splice(index, 1)\r\n        setAllQuestions(filteredQuestion)\r\n    }\r\n\r\n\r\n\r\n    function changeRequired(id) {\r\n        setRequired(!required)\r\n        let questionArray = [...allQuestions]\r\n        questionArray = questionArray.map((x, i) => (i === id ? { ...x, required: !required } : { ...x }))\r\n        setAllQuestions(questionArray)\r\n    }\r\n\r\n\r\n    console.log(allQuestions.length)\r\n    return (\r\n        <div className=\"flex justify-end\">\r\n            <div class=\"flex items-center cursor-pointer rounded-md hover:text-gray-900\" onClick={() => { dublicateOne() }}>\r\n                <span><svg class=\" text-gray-700 hover:text-gray-900 h-8 inline\" xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\r\n                    <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth=\"2\" d=\"M8 7v8a2 2 0 002 2h6M8 7V5a2 2 0 012-2h4.586a1 1 0 01.707.293l4.414 4.414a1 1 0 01.293.707V15a2 2 0 01-2 2h-2M8 7H6a2 2 0 00-2 2v10a2 2 0 002 2h8a2 2 0 002-2v-2\" />\r\n                </svg>Dublicate</span>\r\n\r\n\r\n            </div>\r\n            {allQuestions.length >= 2 ? <div class=\"flex items-center cursor-pointer rounded-md m-4\" onClick={() => { removeOne(id) }}>  <span class=\" text-red-300 hover:text-red-800  text-left  px-4 py-1\"  > <svg className=\"h-8 inline\" xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\r\n                <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth=\"2\" d=\"M19 7l-.867 12.142A2 2 0 0116.138 21H7.862a2 2 0 01-1.995-1.858L5 7m5 4v6m4-6v6m1-10V4a1 1 0 00-1-1h-4a1 1 0 00-1 1v3M4 7h16\" />\r\n            </svg>Delete</span></div> : \"\"}\r\n\r\n\r\n            <div class=\"m-4 flex items-center cursor-pointer rounded-md\">\r\n                <label\r\n\r\n                    class=\"flex items-center cursor-pointer\"\r\n                >\r\n                    <div class=\"relative\">\r\n                        <input id=\"toogleA\" type=\"checkbox\" class=\"hidden\" checked={required} onChange={() => { changeRequired(id) }} />\r\n                        <div\r\n                            class=\"toggle__line w-10 h-4 bg-gray-400 rounded-full shadow-inner\"\r\n                        ></div>\r\n                        <div\r\n                            class=\"toggle__dot absolute w-6 h-6 bg-white rounded-full shadow inset-y-0 left-0\"\r\n                        ></div>\r\n                    </div>\r\n                    <div\r\n                        class=\"ml-3 text-gray-700 font-medium\"\r\n                    >\r\n                        <span className={!required ? \"text-gray-700\" : \"text-green-700\"}>Required</span>\r\n                    </div>\r\n                </label>\r\n\r\n            </div>\r\n        </div>\r\n\r\n    )\r\n}\r\n","D:\\Projects\\google-form\\src\\componants\\FormModule\\FormToolBar.js",["212","213","214","215","216"],"D:\\Projects\\google-form\\src\\componants\\FormModule\\NotActiveQuestion.js",["217","218","219","220","221","222"],"import React, { useState } from 'react'\r\n\r\nexport const NotActiveQuestion = ({ data, id, isThisActive, height }) => {\r\n\r\n    const { idOfActiveQue, setidOfActiveQue } = isThisActive\r\n\r\n    const [questionArray, setquestionArray] = useState(data.options)\r\n\r\n\r\n    function setThisActive() {\r\n        setidOfActiveQue(id)\r\n        console.log(id)\r\n    }\r\n\r\n    const [options, setOptions] = useState(data.options)\r\n\r\n    return (\r\n        <div onClick={() => { setThisActive() }}>\r\n            <div className=\" relative container mx-auto rounded-lg   my-8  p-4 shadow-sm bg-white\">\r\n                <div className=\"flex\">\r\n                    <div class=\"p-4 inline appearance-none  rounded w-1/2 text-gray-800   overflow-hidden font-semibold\"\r\n\r\n\r\n                        style={{ height: height, resize: \"none\" }}\r\n\r\n\r\n                    >{data.question ? data.question : \"Question\"}</div>\r\n                    <span className=\"inline-flex align-center justify-center mx-4 p-2 rounded-full hover:bg-gray-300  \"><svg className=\"w-8 text-gray-700\" xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\r\n                        <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth=\"2\" d=\"M4 16l4.586-4.586a2 2 0 012.828 0L16 16m-2-2l1.586-1.586a2 2 0 012.828 0L20 14m-6-6h.01M6 20h12a2 2 0 002-2V6a2 2 0 00-2-2H6a2 2 0 00-2 2v12a2 2 0 002 2z\" />\r\n                    </svg></span>\r\n\r\n\r\n\r\n                    <span className=\"w-1/3 aline-center m-auto\">\r\n                        <div class=\"z-0 bg-gray-900 relative text-sm block w-full  rounded hover:bg-gray-800 py-1 px-4 text-gray-100\" name=\"questionType\" >\r\n                            {data.questiontype}\r\n\r\n\r\n                        </div>\r\n\r\n                    </span>\r\n                </div>\r\n\r\n                <div>\r\n\r\n                    <div className=\"mt-6\">\r\n\r\n\r\n\r\n\r\n                        {questionArray.map((items, index) => <Boxes key={index} index={index} values={items} questionType={data.questiontype} />)}\r\n\r\n\r\n\r\n                    </div >\r\n\r\n                </div>\r\n\r\n\r\n\r\n            </div >\r\n\r\n\r\n\r\n\r\n        </div >\r\n    )\r\n}\r\n\r\n\r\n\r\nconst Boxes = ({ values, questionType }) => {\r\n    const [checkboxValue, setCheckboxValue] = useState(false)\r\n\r\n\r\n\r\n    return (\r\n        <div class=\" my-auto p-2  outline-none mx-4  rounded py-1 px-2 w-2/3 bg-white text-sm text-gray-800  focus:outline-none focus:shadow-outline align-center flex flex-row justify-start align-center\" > <span className=\"w-6 h-6 border inline-block align-center mx-4 my-auto rounded-lg \">  </span ><span class=\"inline-flex justify-start align-center\">{values ? values : \"Option\"}</span></div >\r\n\r\n\r\n    )\r\n\r\n}","D:\\Projects\\google-form\\src\\componants\\FormModule\\SaveErrors.js",[],"D:\\Projects\\google-form\\src\\Context\\ErrorContext.js",[],{"ruleId":"223","replacedBy":"224"},{"ruleId":"225","replacedBy":"226"},{"ruleId":"227","severity":1,"message":"228","line":4,"column":30,"nodeType":"229","messageId":"230","endLine":4,"endColumn":40},{"ruleId":"227","severity":1,"message":"231","line":5,"column":20,"nodeType":"229","messageId":"230","endLine":5,"endColumn":30},{"ruleId":"227","severity":1,"message":"232","line":10,"column":26,"nodeType":"229","messageId":"230","endLine":10,"endColumn":31},{"ruleId":"233","severity":1,"message":"234","line":24,"column":9,"nodeType":"235","endLine":24,"endColumn":18,"suggestions":"236"},{"ruleId":"227","severity":1,"message":"237","line":27,"column":11,"nodeType":"229","messageId":"230","endLine":27,"endColumn":27},{"ruleId":"233","severity":1,"message":"234","line":38,"column":9,"nodeType":"235","endLine":38,"endColumn":18,"suggestions":"238"},{"ruleId":"239","severity":1,"message":"240","line":56,"column":25,"nodeType":"241","endLine":59,"endColumn":27},{"ruleId":"227","severity":1,"message":"242","line":3,"column":22,"nodeType":"229","messageId":"230","endLine":3,"endColumn":28},{"ruleId":"227","severity":1,"message":"243","line":7,"column":25,"nodeType":"229","messageId":"230","endLine":7,"endColumn":39},{"ruleId":"233","severity":1,"message":"244","line":28,"column":8,"nodeType":"235","endLine":28,"endColumn":10,"suggestions":"245"},{"ruleId":"227","severity":1,"message":"246","line":6,"column":12,"nodeType":"229","messageId":"230","endLine":6,"endColumn":18},{"ruleId":"227","severity":1,"message":"247","line":6,"column":20,"nodeType":"229","messageId":"230","endLine":6,"endColumn":29},{"ruleId":"227","severity":1,"message":"248","line":13,"column":23,"nodeType":"229","messageId":"230","endLine":13,"endColumn":35},{"ruleId":"227","severity":1,"message":"249","line":14,"column":26,"nodeType":"229","messageId":"230","endLine":14,"endColumn":41},{"ruleId":"233","severity":1,"message":"250","line":44,"column":8,"nodeType":"235","endLine":44,"endColumn":22,"suggestions":"251"},{"ruleId":"233","severity":1,"message":"252","line":38,"column":8,"nodeType":"235","endLine":38,"endColumn":10,"suggestions":"253"},{"ruleId":"227","severity":1,"message":"254","line":42,"column":12,"nodeType":"229","messageId":"230","endLine":42,"endColumn":24},{"ruleId":"227","severity":1,"message":"255","line":42,"column":26,"nodeType":"229","messageId":"230","endLine":42,"endColumn":41},{"ruleId":"227","severity":1,"message":"256","line":21,"column":23,"nodeType":"229","messageId":"230","endLine":21,"endColumn":35},{"ruleId":"257","severity":1,"message":"258","line":29,"column":25,"nodeType":"259","messageId":"260","endLine":29,"endColumn":27},{"ruleId":"227","severity":1,"message":"261","line":71,"column":13,"nodeType":"229","messageId":"230","endLine":71,"endColumn":24},{"ruleId":"227","severity":1,"message":"262","line":36,"column":22,"nodeType":"229","messageId":"230","endLine":36,"endColumn":33},{"ruleId":"227","severity":1,"message":"263","line":14,"column":11,"nodeType":"229","messageId":"230","endLine":14,"endColumn":13},{"ruleId":"233","severity":1,"message":"252","line":43,"column":8,"nodeType":"235","endLine":43,"endColumn":10,"suggestions":"264"},{"ruleId":"227","severity":1,"message":"254","line":45,"column":12,"nodeType":"229","messageId":"230","endLine":45,"endColumn":24},{"ruleId":"227","severity":1,"message":"255","line":45,"column":26,"nodeType":"229","messageId":"230","endLine":45,"endColumn":41},{"ruleId":"227","severity":1,"message":"265","line":1,"column":27,"nodeType":"229","messageId":"230","endLine":1,"endColumn":36},{"ruleId":"227","severity":1,"message":"266","line":5,"column":10,"nodeType":"229","messageId":"230","endLine":5,"endColumn":34},{"ruleId":"227","severity":1,"message":"256","line":74,"column":23,"nodeType":"229","messageId":"230","endLine":74,"endColumn":35},{"ruleId":"233","severity":1,"message":"267","line":61,"column":8,"nodeType":"235","endLine":61,"endColumn":22,"suggestions":"268"},{"ruleId":"227","severity":1,"message":"265","line":1,"column":27,"nodeType":"229","messageId":"230","endLine":1,"endColumn":36},{"ruleId":"227","severity":1,"message":"269","line":23,"column":26,"nodeType":"229","messageId":"230","endLine":23,"endColumn":41},{"ruleId":"227","severity":1,"message":"270","line":33,"column":22,"nodeType":"229","messageId":"230","endLine":33,"endColumn":33},{"ruleId":"227","severity":1,"message":"271","line":45,"column":13,"nodeType":"229","messageId":"230","endLine":45,"endColumn":21},{"ruleId":"227","severity":1,"message":"272","line":50,"column":17,"nodeType":"229","messageId":"230","endLine":50,"endColumn":31},{"ruleId":"227","severity":1,"message":"273","line":51,"column":19,"nodeType":"229","messageId":"230","endLine":51,"endColumn":35},{"ruleId":"227","severity":1,"message":"274","line":52,"column":17,"nodeType":"229","messageId":"230","endLine":52,"endColumn":26},{"ruleId":"233","severity":1,"message":"275","line":55,"column":8,"nodeType":"235","endLine":55,"endColumn":10,"suggestions":"276"},{"ruleId":"277","severity":1,"message":"278","line":57,"column":95,"nodeType":"279","messageId":"280","endLine":57,"endColumn":96},{"ruleId":"281","severity":1,"message":"282","line":24,"column":93,"nodeType":"283","endLine":24,"endColumn":100},{"ruleId":"227","severity":1,"message":"284","line":40,"column":12,"nodeType":"229","messageId":"230","endLine":40,"endColumn":20},{"ruleId":"227","severity":1,"message":"262","line":40,"column":22,"nodeType":"229","messageId":"230","endLine":40,"endColumn":33},{"ruleId":"227","severity":1,"message":"228","line":1,"column":27,"nodeType":"229","messageId":"230","endLine":1,"endColumn":37},{"ruleId":"227","severity":1,"message":"285","line":7,"column":23,"nodeType":"229","messageId":"230","endLine":7,"endColumn":35},{"ruleId":"227","severity":1,"message":"286","line":8,"column":29,"nodeType":"229","messageId":"230","endLine":8,"endColumn":47},{"ruleId":"227","severity":1,"message":"287","line":12,"column":28,"nodeType":"229","messageId":"230","endLine":12,"endColumn":44},{"ruleId":"257","severity":1,"message":"258","line":19,"column":34,"nodeType":"259","messageId":"260","endLine":19,"endColumn":36},{"ruleId":"257","severity":1,"message":"258","line":21,"column":35,"nodeType":"259","messageId":"260","endLine":21,"endColumn":37},{"ruleId":"233","severity":1,"message":"288","line":22,"column":8,"nodeType":"235","endLine":22,"endColumn":23,"suggestions":"289"},{"ruleId":"227","severity":1,"message":"290","line":27,"column":12,"nodeType":"229","messageId":"230","endLine":27,"endColumn":24},{"ruleId":"227","severity":1,"message":"291","line":27,"column":26,"nodeType":"229","messageId":"230","endLine":27,"endColumn":41},{"ruleId":"227","severity":1,"message":"292","line":2,"column":10,"nodeType":"229","messageId":"230","endLine":2,"endColumn":33},{"ruleId":"227","severity":1,"message":"293","line":1,"column":27,"nodeType":"229","messageId":"230","endLine":1,"endColumn":36},{"ruleId":"227","severity":1,"message":"294","line":18,"column":12,"nodeType":"229","messageId":"230","endLine":18,"endColumn":21},{"ruleId":"227","severity":1,"message":"295","line":19,"column":12,"nodeType":"229","messageId":"230","endLine":19,"endColumn":24},{"ruleId":"227","severity":1,"message":"296","line":23,"column":13,"nodeType":"229","messageId":"230","endLine":23,"endColumn":26},{"ruleId":"227","severity":1,"message":"297","line":26,"column":23,"nodeType":"229","messageId":"230","endLine":26,"endColumn":34},{"ruleId":"227","severity":1,"message":"298","line":172,"column":13,"nodeType":"229","messageId":"230","endLine":172,"endColumn":24},{"ruleId":"227","severity":1,"message":"296","line":5,"column":13,"nodeType":"229","messageId":"230","endLine":5,"endColumn":26},{"ruleId":"227","severity":1,"message":"299","line":7,"column":27,"nodeType":"229","messageId":"230","endLine":7,"endColumn":43},{"ruleId":"227","severity":1,"message":"300","line":15,"column":12,"nodeType":"229","messageId":"230","endLine":15,"endColumn":19},{"ruleId":"227","severity":1,"message":"301","line":15,"column":21,"nodeType":"229","messageId":"230","endLine":15,"endColumn":31},{"ruleId":"227","severity":1,"message":"302","line":73,"column":12,"nodeType":"229","messageId":"230","endLine":73,"endColumn":25},{"ruleId":"227","severity":1,"message":"303","line":73,"column":27,"nodeType":"229","messageId":"230","endLine":73,"endColumn":43},"no-native-reassign",["304"],"no-negated-in-lhs",["305"],"no-unused-vars","'useContext' is defined but never used.","Identifier","unusedVar","'useHistory' is defined but never used.","'login' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useCallback has a missing dependency: 'signup'. Either include it or remove the dependency array.","ArrayExpression",["306"],"'handleCreateUser' is assigned a value but never used.",["307"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'Router' is defined but never used.","'setformOptions' is assigned a value but never used.","React Hook React.useEffect has a missing dependency: 'currentUser.uid'. Either include it or remove the dependency array.",["308"],"'isOpen' is assigned a value but never used.","'setIsOpen' is assigned a value but never used.","'setshowError' is assigned a value but never used.","'seterrorMessage' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'setFormData'. Either include it or remove the dependency array.",["309"],"React Hook React.useEffect has missing dependencies: 'currentUser.uid' and 'thisID'. Either include them or remove the dependency array.",["310"],"'responceList' is assigned a value but never used.","'setResponceList' is assigned a value but never used.","'setquestions' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'showSideBar' is assigned a value but never used.","'setCheckBox' is assigned a value but never used.","'id' is assigned a value but never used.",["311"],"'useEffect' is defined but never used.","'SubmittedFormQuestionBox' is defined but never used.","React Hook React.useEffect has missing dependencies: 'index' and 'isSelected'. Either include them or remove the dependency array.",["312"],"'setResponsesArr' is assigned a value but never used.","'setTotalAns' is assigned a value but never used.","'chartarr' is assigned a value but never used.","'thisquesAnsArr' is assigned a value but never used.","'countOccurrences' is assigned a value but never used.","'thisarray' is assigned a value but never used.","React Hook React.useEffect has missing dependencies: 'data.content' and 'responsesArr'. Either include them or remove the dependency array.",["313"],"no-sequences","Unexpected use of comma operator.","SequenceExpression","unexpectedCommaExpression","react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","'checkBox' is assigned a value but never used.","'setFormTitle' is assigned a value but never used.","'setformDiscreption' is assigned a value but never used.","'setidOfActiveQue' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'id'. Either include it or remove the dependency array. If 'setIsactive' needs the current value of 'id', you can also switch to useReducer instead of useState and read 'id' in the reducer.",["314"],"'questionData' is assigned a value but never used.","'setquestionData' is assigned a value but never used.","'OperationBoxForQuestion' is defined but never used.","'USeEffect' is defined but never used.","'showError' is assigned a value but never used.","'errorMessage' is assigned a value but never used.","'idOfActiveQue' is assigned a value but never used.","'setFormData' is assigned a value but never used.","'saveWarning' is assigned a value but never used.","'setquestionArray' is assigned a value but never used.","'options' is assigned a value but never used.","'setOptions' is assigned a value but never used.","'checkboxValue' is assigned a value but never used.","'setCheckboxValue' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"315","fix":"316"},{"desc":"315","fix":"317"},{"desc":"318","fix":"319"},{"desc":"320","fix":"321"},{"desc":"322","fix":"323"},{"desc":"322","fix":"324"},{"desc":"325","fix":"326"},{"desc":"327","fix":"328"},{"desc":"329","fix":"330"},"Update the dependencies array to be: [history, signup]",{"range":"331","text":"332"},{"range":"333","text":"332"},"Update the dependencies array to be: [currentUser.uid]",{"range":"334","text":"335"},"Update the dependencies array to be: [allQuestions, setFormData]",{"range":"336","text":"337"},"Update the dependencies array to be: [currentUser.uid, thisID]",{"range":"338","text":"339"},{"range":"340","text":"339"},"Update the dependencies array to be: [handelChange, index, isSelected]",{"range":"341","text":"342"},"Update the dependencies array to be: [data.content, responsesArr]",{"range":"343","text":"344"},"Update the dependencies array to be: [id, idOfActiveQue]",{"range":"345","text":"346"},[656,665],"[history, signup]",[1065,1074],[702,704],"[currentUser.uid]",[1207,1221],"[allQuestions, setFormData]",[992,994],"[currentUser.uid, thisID]",[1045,1047],[1723,1737],"[handelChange, index, isSelected]",[1567,1569],"[data.content, responsesArr]",[676,691],"[id, idOfActiveQue]"]