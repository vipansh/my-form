[{"D:\\Projects\\google-form\\src\\index.js":"1","D:\\Projects\\google-form\\src\\App.js":"2","D:\\Projects\\google-form\\src\\serviceWorker.js":"3","D:\\Projects\\google-form\\src\\pages\\LogIn.js":"4","D:\\Projects\\google-form\\src\\pages\\HomePage.js":"5","D:\\Projects\\google-form\\src\\componants\\Header.js":"6","D:\\Projects\\google-form\\src\\componants\\DocsHomescreen.js":"7","D:\\Projects\\google-form\\src\\componants\\FreeTamplate.js":"8","D:\\Projects\\google-form\\src\\componants\\RecentForms.js":"9","D:\\Projects\\google-form\\src\\componants\\OldFormslist.js":"10","D:\\Projects\\google-form\\src\\pages\\FormPage.js":"11","D:\\Projects\\google-form\\src\\Context\\FormContext.js":"12","D:\\Projects\\google-form\\src\\routers\\AllRouters.js":"13","D:\\Projects\\google-form\\src\\firebase.js":"14","D:\\Projects\\google-form\\src\\Context\\AuthContext.js":"15","D:\\Projects\\google-form\\src\\routers\\PrivateRoute.js":"16","D:\\Projects\\google-form\\src\\pages\\SubmittedFormPage.js":"17","D:\\Projects\\google-form\\src\\componants\\SubmittedForm\\FormHome.js":"18","D:\\Projects\\google-form\\src\\componants\\SubmittedForm\\SubmittedFormHeader.js":"19","D:\\Projects\\google-form\\src\\componants\\SubmittedForm\\SubmittedFormQuestionBox.js":"20","D:\\Projects\\google-form\\src\\componants\\SubmittedForm\\SubmittedFormTitle.js":"21","D:\\Projects\\google-form\\src\\pages\\SharedFormPage.js":"22","D:\\Projects\\google-form\\src\\componants\\SharedForm\\SharedForm.js":"23","D:\\Projects\\google-form\\src\\componants\\SharedForm\\SharedFormQuestionBox.js":"24","D:\\Projects\\google-form\\src\\componants\\SharedForm\\SubmitedForm.js":"25","D:\\Projects\\google-form\\src\\componants\\SubmittedForm\\Responses.js":"26","D:\\Projects\\google-form\\src\\componants\\SubmittedForm\\ResponsesBox.js":"27","D:\\Projects\\google-form\\src\\componants\\FormModule\\FormHeader.js":"28","D:\\Projects\\google-form\\src\\componants\\FormModule\\EnterFormTitle.js":"29","D:\\Projects\\google-form\\src\\componants\\FormModule\\BoxQuestionSingle.js":"30","D:\\Projects\\google-form\\src\\componants\\FormModule\\OptionBox.js":"31","D:\\Projects\\google-form\\src\\componants\\FormModule\\OperationBoxForQuestion.js":"32","D:\\Projects\\google-form\\src\\componants\\FormModule\\FormToolBar.js":"33","D:\\Projects\\google-form\\src\\componants\\FormModule\\NotActiveQuestion.js":"34","D:\\Projects\\google-form\\src\\componants\\FormModule\\SaveErrors.js":"35","D:\\Projects\\google-form\\src\\Context\\ErrorContext.js":"36"},{"size":464,"mtime":1614839260056,"results":"37","hashOfConfig":"38"},{"size":249,"mtime":1615138926400,"results":"39","hashOfConfig":"38"},{"size":5086,"mtime":1614839260056,"results":"40","hashOfConfig":"38"},{"size":9492,"mtime":1616165184488,"results":"41","hashOfConfig":"38"},{"size":308,"mtime":1615480126537,"results":"42","hashOfConfig":"38"},{"size":1698,"mtime":1616083877908,"results":"43","hashOfConfig":"38"},{"size":618,"mtime":1616080092607,"results":"44","hashOfConfig":"38"},{"size":2851,"mtime":1616082599189,"results":"45","hashOfConfig":"38"},{"size":2511,"mtime":1616082580024,"results":"46","hashOfConfig":"38"},{"size":1306,"mtime":1616083715644,"results":"47","hashOfConfig":"38"},{"size":2114,"mtime":1616397249837,"results":"48","hashOfConfig":"38"},{"size":708,"mtime":1616334388738,"results":"49","hashOfConfig":"38"},{"size":1368,"mtime":1616391711680,"results":"50","hashOfConfig":"38"},{"size":988,"mtime":1616058534931,"results":"51","hashOfConfig":"38"},{"size":1169,"mtime":1615473049123,"results":"52","hashOfConfig":"38"},{"size":497,"mtime":1615479692008,"results":"53","hashOfConfig":"38"},{"size":1288,"mtime":1616050129821,"results":"54","hashOfConfig":"38"},{"size":1766,"mtime":1616398349042,"results":"55","hashOfConfig":"38"},{"size":6925,"mtime":1616397577885,"results":"56","hashOfConfig":"38"},{"size":1903,"mtime":1616397395981,"results":"57","hashOfConfig":"38"},{"size":812,"mtime":1616092948964,"results":"58","hashOfConfig":"38"},{"size":1337,"mtime":1616050091121,"results":"59","hashOfConfig":"38"},{"size":2457,"mtime":1615961777153,"results":"60","hashOfConfig":"38"},{"size":2590,"mtime":1616397613220,"results":"61","hashOfConfig":"38"},{"size":605,"mtime":1615917903553,"results":"62","hashOfConfig":"38"},{"size":2254,"mtime":1616398074487,"results":"63","hashOfConfig":"38"},{"size":1731,"mtime":1616398387412,"results":"64","hashOfConfig":"38"},{"size":3679,"mtime":1616334492062,"results":"65","hashOfConfig":"38"},{"size":1483,"mtime":1616252092910,"results":"66","hashOfConfig":"38"},{"size":6874,"mtime":1616388546251,"results":"67","hashOfConfig":"38"},{"size":1472,"mtime":1616328784885,"results":"68","hashOfConfig":"38"},{"size":3182,"mtime":1616334260881,"results":"69","hashOfConfig":"38"},{"size":8017,"mtime":1616396849608,"results":"70","hashOfConfig":"38"},{"size":2692,"mtime":1616335194161,"results":"71","hashOfConfig":"38"},{"size":1752,"mtime":1616394867669,"results":"72","hashOfConfig":"38"},{"size":516,"mtime":1616392360894,"results":"73","hashOfConfig":"38"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},"1qcl4f4",{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"83","usedDeprecatedRules":"76"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"92","usedDeprecatedRules":"76"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"97","usedDeprecatedRules":"76"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"110","usedDeprecatedRules":"76"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"113","usedDeprecatedRules":"76"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"116","messages":"117","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"118","messages":"119","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"120","messages":"121","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"124","usedDeprecatedRules":"76"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"127","usedDeprecatedRules":"76"},{"filePath":"128","messages":"129","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"130","usedDeprecatedRules":"76"},{"filePath":"131","messages":"132","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"133","messages":"134","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"135","messages":"136","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"137"},{"filePath":"138","messages":"139","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"140","usedDeprecatedRules":"76"},{"filePath":"141","messages":"142","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"143","usedDeprecatedRules":"76"},{"filePath":"144","messages":"145","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"146","usedDeprecatedRules":"76"},{"filePath":"147","messages":"148","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"149","usedDeprecatedRules":"76"},{"filePath":"150","messages":"151","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"152","usedDeprecatedRules":"76"},{"filePath":"153","messages":"154","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"155","messages":"156","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"157","usedDeprecatedRules":"76"},{"filePath":"158","messages":"159","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"160","messages":"161","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"D:\\Projects\\google-form\\src\\index.js",[],["162","163"],"D:\\Projects\\google-form\\src\\App.js",[],"D:\\Projects\\google-form\\src\\serviceWorker.js",[],"D:\\Projects\\google-form\\src\\pages\\LogIn.js",["164","165","166","167","168","169"],"\r\n\r\n\r\nimport React, { useCallback, useContext } from \"react\"\r\nimport { Redirect, useHistory } from \"react-router-dom\"\r\n\r\nimport { useAuth } from \"../Context/AuthContext\";\r\nexport const LogIn = ({ history }) => {\r\n\r\n    const { currentUser, login } = useAuth()\r\n\r\n\r\n    const handleLogin = useCallback(\r\n        async event => {\r\n            event.preventDefault();\r\n            const { email, password } = event.target.elements;\r\n            try {\r\n                await login(email.value, password.value);\r\n                history.push(\"/\");\r\n            } catch (error) {\r\n                console.log(error);\r\n            }\r\n        },\r\n        [history]\r\n    );\r\n\r\n\r\n\r\n    if (currentUser) {\r\n        return <Redirect to=\"/\" />;\r\n    }\r\n\r\n    return (\r\n\r\n        <div class=\"min-h-screen bg-gray-100 text-gray-900 flex justify-center\">\r\n            <div\r\n                class=\"max-w-screen-xl m-0 sm:m-20 bg-white shadow sm:rounded-lg flex justify-center flex-1\"\r\n            >\r\n                <div class=\"lg:w-1/2 xl:w-5/12 p-6 sm:p-12\">\r\n                    <div>\r\n                        <img\r\n                            src=\"https://storage.googleapis.com/devitary-image-host.appspot.com/15846435184459982716-LogoMakr_7POjrN.png\"\r\n                            class=\"w-32 mx-auto\"\r\n                        />\r\n                    </div>\r\n                    <div class=\"mt-12 flex flex-col items-center\">\r\n                        <h1 class=\"text-2xl xl:text-3xl font-extrabold\">\r\n                            Sign up for Google Form\r\n                          </h1>\r\n                        <div class=\"w-full flex-1 mt-8\">\r\n                            <div class=\"flex flex-col items-center\">\r\n                                <button\r\n                                    class=\"w-full max-w-xs font-bold shadow-sm rounded-lg py-3 bg-indigo-100 text-gray-800 flex items-center justify-center transition-all duration-300 ease-in-out focus:outline-none hover:shadow focus:shadow-sm focus:shadow-outline\"\r\n                                >\r\n                                    <div class=\"bg-white p-2 rounded-full\">\r\n                                        <svg class=\"w-4\" viewBox=\"0 0 533.5 544.3\">\r\n                                            <path\r\n                                                d=\"M533.5 278.4c0-18.5-1.5-37.1-4.7-55.3H272.1v104.8h147c-6.1 33.8-25.7 63.7-54.4 82.7v68h87.7c51.5-47.4 81.1-117.4 81.1-200.2z\"\r\n                                                fill=\"#4285f4\"\r\n                                            />\r\n                                            <path\r\n                                                d=\"M272.1 544.3c73.4 0 135.3-24.1 180.4-65.7l-87.7-68c-24.4 16.6-55.9 26-92.6 26-71 0-131.2-47.9-152.8-112.3H28.9v70.1c46.2 91.9 140.3 149.9 243.2 149.9z\"\r\n                                                fill=\"#34a853\"\r\n                                            />\r\n                                            <path\r\n                                                d=\"M119.3 324.3c-11.4-33.8-11.4-70.4 0-104.2V150H28.9c-38.6 76.9-38.6 167.5 0 244.4l90.4-70.1z\"\r\n                                                fill=\"#fbbc04\"\r\n                                            />\r\n                                            <path\r\n                                                d=\"M272.1 107.7c38.8-.6 76.3 14 104.4 40.8l77.7-77.7C405 24.6 339.7-.8 272.1 0 169.2 0 75.1 58 28.9 150l90.4 70.1c21.5-64.5 81.8-112.4 152.8-112.4z\"\r\n                                                fill=\"#ea4335\"\r\n                                            />\r\n                                        </svg>\r\n                                    </div>\r\n                                    <span class=\"ml-4\">\r\n                                        Sign Up with Google\r\n                </span>\r\n                                </button>\r\n\r\n                                <button\r\n                                    class=\"w-full max-w-xs font-bold shadow-sm rounded-lg py-3 bg-indigo-100 text-gray-800 flex items-center justify-center transition-all duration-300 ease-in-out focus:outline-none hover:shadow focus:shadow-sm focus:shadow-outline mt-5\"\r\n                                >\r\n                                    <div class=\"bg-white p-1 rounded-full\">\r\n                                        <svg class=\"w-6\" viewBox=\"0 0 32 32\">\r\n                                            <path\r\n                                                fillRule=\"evenodd\"\r\n                                                d=\"M16 4C9.371 4 4 9.371 4 16c0 5.3 3.438 9.8 8.207 11.387.602.11.82-.258.82-.578 0-.286-.011-1.04-.015-2.04-3.34.723-4.043-1.609-4.043-1.609-.547-1.387-1.332-1.758-1.332-1.758-1.09-.742.082-.726.082-.726 1.203.086 1.836 1.234 1.836 1.234 1.07 1.836 2.808 1.305 3.492 1 .11-.777.422-1.305.762-1.605-2.664-.301-5.465-1.332-5.465-5.93 0-1.313.469-2.383 1.234-3.223-.121-.3-.535-1.523.117-3.175 0 0 1.008-.32 3.301 1.23A11.487 11.487 0 0116 9.805c1.02.004 2.047.136 3.004.402 2.293-1.55 3.297-1.23 3.297-1.23.656 1.652.246 2.875.12 3.175.77.84 1.231 1.91 1.231 3.223 0 4.61-2.804 5.621-5.476 5.922.43.367.812 1.101.812 2.219 0 1.605-.011 2.898-.011 3.293 0 .32.214.695.824.578C24.566 25.797 28 21.3 28 16c0-6.629-5.371-12-12-12z\"\r\n                                            />\r\n                                        </svg>\r\n                                    </div>\r\n                                    <span class=\"ml-4\">\r\n                                        Sign Up with GitHub\r\n                </span>\r\n                                </button>\r\n                            </div>\r\n\r\n                            <div class=\"my-12 border-b text-center\">\r\n                                <div\r\n                                    class=\"leading-none px-2 inline-block text-sm text-gray-600 tracking-wide font-medium bg-white transform translate-y-1/2\"\r\n                                >\r\n                                    Or sign up with e-mail\r\n              </div>\r\n                            </div>\r\n\r\n                            <form class=\"mx-auto max-w-xs\" onSubmit={handleLogin}>\r\n                                <input\r\n                                    class=\"w-full px-8 py-4 rounded-lg font-medium bg-gray-100 border border-gray-200 placeholder-gray-500 text-sm focus:outline-none focus:border-gray-400 focus:bg-white\"\r\n                                    type=\"text\"\r\n                                    placeholder=\"Email\"\r\n                                    required\r\n                                    name=\"email\"\r\n                                />\r\n                                <input\r\n                                    class=\"w-full px-8 py-4 rounded-lg font-medium bg-gray-100 border border-gray-200 placeholder-gray-500 text-sm focus:outline-none focus:border-gray-400 focus:bg-white mt-5\"\r\n                                    type=\"password\"\r\n                                    placeholder=\"Password\"\r\n                                    required\r\n                                    name=\"password\"\r\n                                />\r\n                                <button\r\n                                    class=\"mt-5 tracking-wide font-semibold bg-indigo-500 text-gray-100 w-full py-4 rounded-lg hover:bg-indigo-700 transition-all duration-300 ease-in-out flex items-center justify-center focus:shadow-outline focus:outline-none\"\r\n                                    type=\"submit\">\r\n                                    <svg\r\n                                        class=\"w-6 h-6 -ml-2\"\r\n                                        fill=\"none\"\r\n                                        stroke=\"currentColor\"\r\n                                        strokeWidth=\"2\"\r\n                                        strokeLinecap=\"round\"\r\n                                        strokeLinejoin=\"round\"\r\n                                    >\r\n                                        <path d=\"M16 21v-2a4 4 0 00-4-4H5a4 4 0 00-4 4v2\" />\r\n                                        <circle cx=\"8.5\" cy=\"7\" r=\"4\" />\r\n                                        <path d=\"M20 8v6M23 11h-6\" />\r\n                                    </svg>\r\n                                    <span class=\"ml-3\">\r\n                                        Sign Up\r\n                </span>\r\n                                </button>\r\n                                <p class=\"mt-6 text-xs text-gray-600 text-center\">\r\n                                    I agree to abide by templatana's\r\n                <a href=\"#\" class=\"border-b border-gray-500 border-dotted\">\r\n                                        Terms of Service\r\n                </a>\r\n                and its\r\n                <a href=\"#\" class=\"border-b border-gray-500 border-dotted\">\r\n                                        Privacy Policy\r\n                </a>\r\n                                </p>\r\n                            </form>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div class=\"flex-1 bg-indigo-100 text-center hidden lg:flex\">\r\n                    <div\r\n                        class=\"m-12 xl:m-16 w-full bg-contain bg-center bg-no-repeat\"\r\n                        style={{ backgroundImage: \"url('https://storage.googleapis.com/devitary-image-host.appspot.com/15848031292911696601-undraw_designer_life_w96d.svg')\" }}\r\n                    ></div>\r\n                </div>\r\n            </div>\r\n\r\n        </div >\r\n    )\r\n}\r\n","D:\\Projects\\google-form\\src\\pages\\HomePage.js",[],"D:\\Projects\\google-form\\src\\componants\\Header.js",[],"D:\\Projects\\google-form\\src\\componants\\DocsHomescreen.js",[],"D:\\Projects\\google-form\\src\\componants\\FreeTamplate.js",["170","171"],"import React from 'react'\r\nimport {\r\n    BrowserRouter as Router,\r\n    Link\r\n} from \"react-router-dom\";\r\nexport const FreeTamplate = () => {\r\n    const [formOptions, setformOptions] = React.useState([\"Blanks\", \"Contact Information\", \"Rsvp\", \"Party Invite\", \"T-shirt Sign up\", \"Event Registration\"])\r\n\r\n    return (\r\n        <div>\r\n            <div class=\"p-4 flex items-center justify-center bg-gray-100  \">\r\n                <div class=\"w-full max-w-screen-md mx-auto\">\r\n                    <fieldset class=\"space-y-6\">\r\n                        <div class=\"flex items-center justify-between py-4 border-b border-gray-300\">\r\n                            <div className=\"sm:font-semibold font-extrabold text-2xl\">Start a new form </div>\r\n                            <div className=\"flex items-center justify-center\"><span className=\"hover:bg-gray-400 p-2 rounded-md cursor-pointer hidden sm:block\" >Tamplate Gallery <svg className=\"w-4 mx-2 inline\" xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\r\n                                <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth=\"2\" d=\"M7 16V4m0 0L3 8m4-4l4 4m6 0v12m0 0l4-4m-4 4l-4-4\" />\r\n                            </svg> </span>\r\n\r\n                                <span className=\"rounded-full cursor-pointer hover:bg-gray-400  p-2 hidden sm:block\"><svg className=\"w-8 mx-2 inline    text-gray-500\" xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\r\n                                    <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth=\"2\" d=\"M12 5v.01M12 12v.01M12 19v.01M12 6a1 1 0 110-2 1 1 0 010 2zm0 7a1 1 0 110-2 1 1 0 010 2zm0 7a1 1 0 110-2 1 1 0 010 2z\" />\r\n                                </svg></span>\r\n                            </div>\r\n                        </div>\r\n                        <Link to=\"/form\">\r\n                            <div class=\"grid grid-col gap-6\">\r\n                                {formOptions.map((data, i) => {\r\n                                    return (<div key={i}>\r\n                                        <div className=\" relative flex flex-col p-1 bg-white  rounded-lg shadow-md cursor-pointer \r\n                                    border-2  hover:border-blue-400  \">\r\n                                            <img src={process.env.PUBLIC_URL + '/ques.jpg'} alt=\"a\" class=\"md:w-full md:h-auto rounded-lg\" />\r\n                                            <span className=\"font-semibold\">{data}</span>\r\n                                        </div>\r\n                                    </div>)\r\n                                })\r\n                                }\r\n                            </div>\r\n                        </Link >\r\n                    </fieldset>\r\n                </div>\r\n            </div >\r\n\r\n        </div >\r\n    )\r\n}\r\n","D:\\Projects\\google-form\\src\\componants\\RecentForms.js",[],"D:\\Projects\\google-form\\src\\componants\\OldFormslist.js",["172","173"],"import React, { useState } from 'react'\r\nimport { Link } from 'react-router-dom'\r\n\r\nexport const OldFormslist = ({ data }) => {\r\n    console.log(data)\r\n    const [isOpen, setIsOpen] = useState(false)\r\n\r\n    return (\r\n        <Link to={`/form/a/${data.uniqueID}`} className=\"block h-42 w-42   border-2 border-gray-700  sm:border-gray-400 hover:border-blue-400 hover:text-blue-700  hover:font-semibold  rounded\">\r\n            <div className=\"  flex flex-col justify-evenly \">\r\n                <div className=\" m-2  overflow-hidden w-auto\">\r\n\r\n                    <img src={process.env.PUBLIC_URL + '/ques.jpg'} alt=\"a\" class=\" rounded-lg\" />\r\n\r\n                </div>\r\n                <div className=\"px p-2  \">\r\n                    <svg className=\"text-white  w-4 h-4 rounded-2xl bg-purple-600 inline\" xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\r\n                        <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M9 17v-2m3 2v-4m3 4v-6m2 10H7a2 2 0 01-2-2V5a2 2 0 012-2h5.586a1 1 0 01.707.293l5.414 5.414a1 1 0 01.293.707V19a2 2 0 01-2 2z\" />\r\n                    </svg>  <span class=\"font-semibold  inline\">{data.title ? data.title : \"Untitle Form\"}</span>\r\n                </div>\r\n            </div>\r\n        </Link >\r\n\r\n    )\r\n}\r\n","D:\\Projects\\google-form\\src\\pages\\FormPage.js",["174","175","176"],"D:\\Projects\\google-form\\src\\Context\\FormContext.js",[],"D:\\Projects\\google-form\\src\\routers\\AllRouters.js",[],"D:\\Projects\\google-form\\src\\firebase.js",[],"D:\\Projects\\google-form\\src\\Context\\AuthContext.js",[],"D:\\Projects\\google-form\\src\\routers\\PrivateRoute.js",["177"],"\r\nimport React from \"react\";\r\nimport { Route, Redirect } from \"react-router-dom\";\r\nimport { useAuth } from \"../Context/AuthContext\";\r\n\r\nconst PrivateRoute = ({ component: RouteComponent, ...rest }) => {\r\n    const { currentUser } = useAuth();\r\n\r\n    return (\r\n        <Route\r\n            {...rest}\r\n            render={props => {\r\n                return true ? <RouteComponent {...props} /> : <Redirect to=\"/login\" />\r\n            }}\r\n        ></Route>\r\n    );\r\n};\r\n\r\n\r\nexport default PrivateRoute","D:\\Projects\\google-form\\src\\pages\\SubmittedFormPage.js",["178","179","180"],"import React, { useState } from 'react'\r\nimport { FormHome } from '../componants/SubmittedForm/FormHome'\r\n\r\nimport { fireDb } from '../firebase'\r\n\r\n\r\nexport const SubmittedFormPage = ({ match }) => {\r\n    const thisID = match.params.id\r\n\r\n\r\n    // this is the page where question and responces are shown\r\n\r\n    const [allFormData, setallFormData] = useState()\r\n    React.useEffect(() => {\r\n\r\n\r\n        const todoRef = fireDb.ref('currentUser').child(\"Forms\");\r\n        todoRef.on('value', (snapshot) => {\r\n            const todos = snapshot.val();\r\n            const todoList = [];\r\n            for (let id in todos) {\r\n                todoList.push({ id, ...todos[id] });\r\n            }\r\n\r\n            let newArr = todoList.filter((data) => {\r\n\r\n                return (\r\n                    data.uniqueID === thisID)\r\n\r\n            })\r\n\r\n\r\n            setallFormData(newArr);\r\n\r\n        });\r\n    }, [])\r\n\r\n\r\n\r\n    const [responceList, setResponceList] = useState()\r\n\r\n\r\n\r\n    if (allFormData) {\r\n\r\n        return (\r\n            <div>\r\n                {allFormData.map((allData, i) => {\r\n                    return <FormHome data={allData} key={i} />\r\n                })}\r\n            </div>\r\n        )\r\n    }\r\n    return (\r\n        <div>\r\n            Loading\r\n        </div>\r\n    )\r\n}\r\n","D:\\Projects\\google-form\\src\\componants\\SubmittedForm\\FormHome.js",["181","182"],"D:\\Projects\\google-form\\src\\componants\\SubmittedForm\\SubmittedFormHeader.js",["183"],"D:\\Projects\\google-form\\src\\componants\\SubmittedForm\\SubmittedFormQuestionBox.js",["184"],"D:\\Projects\\google-form\\src\\componants\\SubmittedForm\\SubmittedFormTitle.js",[],"D:\\Projects\\google-form\\src\\pages\\SharedFormPage.js",["185","186","187","188"],"import React, { useState } from 'react'\r\n\r\nimport { fireDb } from '../firebase'\r\n\r\nimport { SharedForm } from '../componants/SharedForm/SharedForm'\r\n\r\nexport const SharedFormPage = ({ match }) => {\r\n\r\n    // This is shared form an will be shown when user share link with someOne\r\n\r\n\r\n    const id = match.params.id\r\n\r\n\r\n    const thisID = match.params.id\r\n\r\n\r\n    const [allFormData, setallFormData] = useState()\r\n    React.useEffect(() => {\r\n\r\n\r\n        const todoRef = fireDb.ref('currentUser').child(\"Forms\");\r\n        todoRef.on('value', (snapshot) => {\r\n            const todos = snapshot.val();\r\n            const todoList = [];\r\n            for (let id in todos) {\r\n                todoList.push({ id, ...todos[id] });\r\n            }\r\n\r\n            let newArr = todoList.filter((data) => {\r\n\r\n                return (\r\n                    data.uniqueID === thisID)\r\n\r\n            })\r\n\r\n\r\n            setallFormData(newArr);\r\n\r\n        });\r\n    }, [])\r\n\r\n    const [responceList, setResponceList] = useState()\r\n\r\n    if (allFormData) {\r\n\r\n        return (\r\n            <div>\r\n                {allFormData.map((allData, i) => {\r\n                    return <SharedForm data={allData} key={i} />\r\n                })}\r\n            </div>\r\n        )\r\n    }\r\n    return (\r\n        <div>\r\n            Loading\r\n        </div>\r\n    )\r\n\r\n}\r\n","D:\\Projects\\google-form\\src\\componants\\SharedForm\\SharedForm.js",["189","190","191"],"import React, { useState, useEffect } from 'react'\r\nimport { fireDb } from '../../firebase'\r\nimport { SubmittedFormQuestionBox } from '../SubmittedForm/SubmittedFormQuestionBox'\r\nimport { SubmittedFormTitle } from '../SubmittedForm/SubmittedFormTitle'\r\nimport { SharedFormQuestionBox } from './SharedFormQuestionBox'\r\nimport { SubmitedForm } from './SubmitedForm'\r\n\r\nexport const SharedForm = ({ data }) => {\r\n\r\n\r\n\r\n    const [formSubbmited, setformSubbmited] = useState(() => {\r\n        var retrievedObject = localStorage.getItem('form');\r\n\r\n        if (retrievedObject) {\r\n\r\n            return retrievedObject.includes(data.uniqueID);\r\n        }\r\n\r\n    })\r\n\r\n    const [responceList, setresponceList] = useState(() => {\r\n        let val = []\r\n        for (let i = 0; i < data.content.length; i++) {\r\n            val.push(0)\r\n        }\r\n        return val\r\n    })\r\n\r\n    function updatestorage() {\r\n        var retrievedObject = JSON.parse(localStorage.getItem('form'));\r\n\r\n        if (retrievedObject) {\r\n\r\n            localStorage.setItem('form', JSON.stringify([...retrievedObject, data.uniqueID]));\r\n        }\r\n        else {\r\n            localStorage.setItem('form', JSON.stringify([data.uniqueID]));\r\n\r\n        }\r\n\r\n    }\r\n\r\n\r\n\r\n    const onSubmit = () => {\r\n        const formdataRef = fireDb.ref(\"currentUser\").child('Forms');\r\n        const thisformref = formdataRef.child(data.id).child('responceList')\r\n        thisformref.push(responceList)\r\n        console.log(responceList)\r\n        setformSubbmited(true)\r\n        updatestorage()\r\n    }\r\n\r\n\r\n    const [questions, setquestions] = useState(data.content)\r\n\r\n\r\n    if (formSubbmited) {\r\n        return <div><SubmitedForm title={data.title} setformSubbmited={setformSubbmited} /></div>\r\n    }\r\n\r\n\r\n    return (\r\n        <div>\r\n            <div className=\"mt-16\">\r\n\r\n                <SubmittedFormTitle title={data.title} />\r\n\r\n                {/* <SubmittedFormQuestionBox />  */}\r\n                {questions.map((question, i) => {\r\n                    return <SharedFormQuestionBox id={i} data={question} color={data.color} value={{ responceList, setresponceList }} />\r\n                })}\r\n                <div className=\"container mx-auto \">\r\n                    <button onClick={onSubmit}>Submit</button>\r\n                </div>\r\n            </div>\r\n            <center>This content is neither created nor endorsed by MeForm. Never subbmit your passwoed </center>\r\n        </div>\r\n    )\r\n}\r\n","D:\\Projects\\google-form\\src\\componants\\SharedForm\\SharedFormQuestionBox.js",["192"],"import React, { useState } from 'react'\r\n\r\nexport const SharedFormQuestionBox = ({ data, color, id, value }) => {\r\n    //     options: (2) [{…}, {…}]\r\n    // question: \"11\"\r\n    // questiontype: \"Multiple Choice\"\r\n    // required: true\r\n\r\n    const { responceList, setresponceList } = value\r\n\r\n    const updateResponce = (a, b) => {\r\n        let newArr = [...responceList]\r\n        console.log(newArr)\r\n        newArr[b] = ++a\r\n        setresponceList(newArr)\r\n    }\r\n\r\n    const [idSelected, setidSelected] = useState()\r\n\r\n    const handelChange = (a) => {\r\n        setidSelected(a)\r\n        updateResponce(a, id)\r\n\r\n        console.log(++a, id)\r\n    }\r\n\r\n\r\n\r\n\r\n    return (\r\n        <div className=\"container mx-auto my-4 \">\r\n            <div className=\" relative container mx-auto border-l-8 rounded-lg   my-8  p-4 shadow-sm bg-white border-blue-400 border \" style={{ borderColor: ` ${color ? color : \"#F1F1F0\"}` }} >\r\n                <div class=\" p-4   text-gray-700 leading-tight \" >{data.question}\r\n                    {data.required ? <span className=\"mx-8  text-red-500\">* required</span> : null}</div>\r\n\r\n\r\n                {data.options.map((option, i) => {\r\n                    return <Box checkOption={option} key={i} index={i} updateResponce={updateResponce} handelChange={handelChange} isSelected={idSelected} />\r\n                })}\r\n\r\n            </div >\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\n\r\nconst Box = ({ checkOption, updateResponce, handelChange, index, isSelected }) => {\r\n    const [checkBox, setCheckBox] = useState(false)\r\n\r\n    React.useEffect(() => {\r\n        if (isSelected === index) {\r\n            setCheckBox(true)\r\n        }\r\n        else {\r\n            setCheckBox(false)\r\n        }\r\n    }, [handelChange])\r\n\r\n    return (\r\n        <label class=\"custom-label p-2 flex w-full\">\r\n            <input type=\"checkbox\" class=\"hidden\" checked={checkBox}\r\n                onClick={() => handelChange(index)} />\r\n\r\n\r\n            <div className=\"w-6 h-6 border inline-block align-center mx-4 my-auto rounded-lg \">{!checkBox ? \"\" : <svg className=\"bg-blue-700 text-white rounded-lg\" xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\r\n                <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth=\"2\" d=\"M5 13l4 4L19 7\" />\r\n            </svg>}\r\n\r\n            </div>\r\n            <div class=\"inline  outline-none border border-gray-400 rounded py-1 px-2 w-2/3 bg-white text-sm text-gray-700 placeholder-gray-400 focus:outline-none focus:shadow-outline\"  >  {checkOption}  </div>\r\n        </label>\r\n\r\n    )\r\n}\r\n\r\n\r\n\r\n","D:\\Projects\\google-form\\src\\componants\\SharedForm\\SubmitedForm.js",[],"D:\\Projects\\google-form\\src\\componants\\SubmittedForm\\Responses.js",["193","194","195","196","197","198","199","200","201"],"D:\\Projects\\google-form\\src\\componants\\SubmittedForm\\ResponsesBox.js",["202","203","204"],"import React from 'react'\r\n\r\nexport const ResponsesBox = ({ data, color, allData, index, responsesArr, totalVote }) => {\r\n    //     options: (2) [{…}, {…}]\r\n    // question: \"11\"\r\n    // questiontype: \"Multiple Choice\"\r\n    // required: true\r\n\r\n\r\n\r\n\r\n    return (\r\n\r\n        <div className=\"container mx-auto my-4  \">\r\n            <div className=\"  container mx-auto border-l-8 rounded-lg   my-8   p-4 shadow-sm bg-white border-blue-400 border flex justify-between\" style={{ borderColor: ` ${color ? color : \"#F1F1F0\"}` }} >\r\n\r\n\r\n                <div className=\" md:w-2/3 \">\r\n                    <div class=\" p-4  w-full  text-gray-800 leading-tight text-4xl font-extrabold \" >{data.question}\r\n                        {data.required ? <span className=\"mx-8  text-red-500 font-bold text-xl \">* required</span> : null}</div>\r\n\r\n\r\n                    {data.options.map((option, i) => {\r\n                        return <Box checkOption={option} key={i} volume={responsesArr[++i]} key={i} />\r\n                    })}\r\n                </div>\r\n                <div>\r\n                    {responsesArr[0] ? <div> Skipped By: {responsesArr[0]}</div> : null}\r\n                 Total submission: {totalVote}\r\n                </div>\r\n            </div >\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\n\r\nconst Box = ({ checkOption, volume }) => {\r\n    console.log(volume ? volume : \"Nan\")\r\n    const [checkBox, setCheckBox] = React.useState(false)\r\n\r\n    return (\r\n        <div class=\" p-2 flex w-full\">\r\n            <div class=\"inline  outline-none border rounded py-1 px-2 w-2/3 bg-white text-sm text-gray-700  \"  > {checkOption}</div>   {(volume ? <span className=\"mx-4\">{volume}</span> : <span className=\"mx-4\">0</span>)}\r\n        </div>\r\n\r\n    )\r\n}\r\n","D:\\Projects\\google-form\\src\\componants\\FormModule\\FormHeader.js",["205"],"import React, { useState, useContext } from 'react'\r\nimport {\r\n    Link,\r\n    useHistory\r\n} from \"react-router-dom\";\r\nimport { fireDb } from '../../firebase';\r\n\r\nexport const FormHeader = ({ title, id, thiscolor, changeColor, formData }) => {\r\n    let history = useHistory();\r\n\r\n    const [colorOpen, setColorOpen] = useState(false)\r\n\r\n\r\n    const color = ['#6E3Cf4', '#F1C335', '#F09052', '#54BAAE', '#2D5Cf6', '#B835F6'];\r\n\r\n    const changeThisColor = (value) => {\r\n        changeColor(value)\r\n        setColorOpen(false)\r\n\r\n    }\r\n\r\n\r\n    const saveForm = () => {\r\n        const formdataRef = fireDb.ref(\"currentUser\").child('Forms');\r\n        try {\r\n            formdataRef.push(formData)\r\n\r\n            history.push(`/form/a/${id}`)\r\n        } catch (error) {\r\n            console.log(error);\r\n        }\r\n    }\r\n\r\n\r\n\r\n    return (\r\n        <div class=\"border-b shadow-lg  \" >\r\n\r\n            <header class=\" md:flex mb-2 md:mb-0 md:items-center justify-between p-4 pb-0  md:pb-4 \">\r\n                <div class=\" md:flex md:items-center\">\r\n                    <Link to=\"/\" className=\"mx-4 my-auto text-gray-800\"><svg class=\"text-gray-800 h-4 w-4 inline\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 20 20\" fill=\"currentColor\">\r\n                        <path d=\"M10.707 2.293a1 1 0 00-1.414 0l-7 7a1 1 0 001.414 1.414L4 10.414V17a1 1 0 001 1h2a1 1 0 001-1v-2a1 1 0 011-1h2a1 1 0 011 1v2a1 1 0 001 1h2a1 1 0 001-1v-6.586l.293.293a1 1 0 001.414-1.414l-7-7z\" />\r\n                    </svg></Link>\r\n                    {title ? title : \"Untitled Form\"}\r\n                </div>\r\n\r\n\r\n\r\n\r\n                <nav className=\"w-auto text-gray-700 my-4 md:my-0 flex flex-row justify-between md:justify-end\">\r\n                    <span className=\"mx-2 p-2 rounded-full relative hover:bg-gray-300 \" onClick={() => { setColorOpen(!colorOpen) }}><svg className=\" h-6 inline \" xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\" style={{ color: formData.color }}>\r\n                        <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth=\"2\" d=\"M7 21a4 4 0 01-4-4V5a2 2 0 012-2h4a2 2 0 012 2v12a4 4 0 01-4 4zm0 0h12a2 2 0 002-2v-4a2 2 0 00-2-2h-2.343M11 7.343l1.657-1.657a2 2 0 012.828 0l2.829 2.829a2 2 0 010 2.828l-8.486 8.485M7 17h.01\" />\r\n                    </svg>\r\n\r\n                    </span >\r\n\r\n\r\n                    {colorOpen ? <div id=\"usermenu\" class=\"absolute    z-40  w-auto \" style={{ right: \"25px\", top: '65px' }}>\r\n                        {color.map(color => {\r\n                            return <span onClick={() => { changeThisColor(color) }} className=\"w-auto mx-2 p-2 cursor-pointer  block my-1 \" style={{ backgroundColor: color, right: \"25px\", top: '75px' }}>{color}</span>\r\n                        })}\r\n                    </div> : null}\r\n\r\n                    <span className=\"mx-4\">\r\n                        <button onChange={saveForm} class=\" inline-flex  text-white bg-indigo-500 border-0 py-2 px-8 focus:outline-none hover:bg-indigo-600 rounded text-lg\" style={{ backgroundColor: formData.color }} >Save</button></span>\r\n\r\n\r\n                    <span>\r\n                        <img alt=\"Placeholder\" class=\"inline mx-4 rounded-full\" src=\"https://picsum.photos/32/32/?random\" />\r\n\r\n                    </span>\r\n\r\n\r\n\r\n\r\n                </nav>\r\n\r\n\r\n\r\n            </header >\r\n\r\n\r\n            <div className=\"flex justify-center \">\r\n                <div className=\"mx-4 p-4 py-2 text-blue-500 font-semibold border-blue-600 border-b-4 cursor-pointer \">Questions</div>\r\n                <div className=\"mx-4 p-4 py-2  cursor-pointer \">Responses</div>\r\n            </div>\r\n\r\n\r\n\r\n\r\n        </div >\r\n\r\n\r\n\r\n\r\n\r\n    )\r\n}\r\n","D:\\Projects\\google-form\\src\\componants\\FormModule\\EnterFormTitle.js",["206","207"],"import React, { useState, useContext } from 'react'\r\nimport { FormContext } from '../../Context/FormContext'\r\n\r\n\r\nexport const EnterFormTitle = () => {\r\n\r\n    const [formTitle, setFormTitle] = useState(\"\")\r\n    const [formDiscreption, setformDiscreption] = useState(\"\")\r\n\r\n\r\n\r\n    const { formData, setFormData } = useContext(FormContext)\r\n\r\n\r\n\r\n\r\n    function handelchange(e) {\r\n        setFormData(prevState => ({\r\n            ...prevState,\r\n            [e.target.name]: e.target.value\r\n\r\n        }))\r\n\r\n    }\r\n\r\n\r\n\r\n\r\n    return (\r\n        <div className=\"container mx-auto border-t-8 rounded-lg    p-4 shadow-sm bg-white\" style={{ borderColor: formData.color }}>\r\n            <div className=\"p-4\">\r\n                <input type=\"text\" name=\"title\" onChange={(e) => { handelchange(e) }} class=\"relative outline-none rounded py-4 px-3 w-full bg-white hover:shadow md:text-5xl \r\n                text-3xl        text-gray-700 placeholder-gray-800 focus:outline-none focus:shadow-outline border\" placeholder=\"Untitled Form\" value={formTitle.title} />\r\n            </div>\r\n            <div className=\"p-4\">\r\n                <input type=\"text\" name=\"discription\" onChange={(e) => { handelchange(e) }} class=\"relative outline-none rounded py-4 px-3 w-full bg-white hover:shadow text-base text-gray-700 placeholder-gray-800 focus:outline-none focus:shadow-outline border\" placeholder=\"Form Discription\" value={formDiscreption.discription} />\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","D:\\Projects\\google-form\\src\\componants\\FormModule\\BoxQuestionSingle.js",["208","209","210","211","212","213"],"import React, { useState, useEffect } from 'react'\r\nimport { FormToolBar } from './FormToolBar'\r\nimport { NotActiveQuestion } from './NotActiveQuestion'\r\nimport { OperationBoxForQuestion } from './OperationBoxForQuestion'\r\nimport { OptionBox } from './OptionBox'\r\n\r\n\r\n\r\nexport const BoxQuestionSingle = ({ data, value, id, color, isThisActive }) => {\r\n    const { allQuestions, setAllQuestions } = value\r\n\r\n    const { idOfActiveQue, setidOfActiveQue } = isThisActive\r\n\r\n\r\n    const [isactive, setIsactive] = useState()\r\n\r\n    useEffect(() => {\r\n        setIsactive(() => {\r\n            return idOfActiveQue == id\r\n        })\r\n        console.log(idOfActiveQue == id)\r\n    }, [idOfActiveQue])\r\n\r\n    const [textQuetionHeight, setTextQuetionHeight] = useState(\"auto\")\r\n    const [isOpen, setIsOpen] = useState(false)\r\n    const [questionType, setQuestionType] = useState(\"Question Type\")\r\n    const [questionData, setquestionData] = useState(data)\r\n\r\n\r\n\r\n    function handelquestionType(values, e) {\r\n        setIsOpen(!isOpen)\r\n        setQuestionType(\"Not availabe for now\")\r\n        setTimeout(() => {\r\n            setQuestionType(\"CheckBoxes\")\r\n\r\n        }, [2500])\r\n    }\r\n\r\n    function handelQuestionChange(e, id) {\r\n\r\n\r\n        let val = [...allQuestions]\r\n\r\n        val = val.map((x, i) => (i === id ? { ...x, [e.target.name]: e.target.value } : { ...x }))\r\n\r\n        console.log(data, id)\r\n        setAllQuestions(val)\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n\r\n    function autoGrow(e, id) {\r\n        setTextQuetionHeight(e.target.scrollHeight + \"px\")\r\n        handelQuestionChange(e, id)\r\n    }\r\n\r\n    function addOption() {\r\n        let val = [...allQuestions]\r\n        val = val.map((x, i) => (i === id ? { ...x, options: [...x.options, \"\"] } : { ...x }))\r\n        setAllQuestions(val)\r\n        \r\n    }\r\n    function removeOption(index) {\r\n\r\n        let val = [...allQuestions]\r\n        let RemovedOption = val[id].options\r\n        RemovedOption.splice(index, 1)\r\n        val = val.map((x, i) => (i === index ? { ...x, options: [...RemovedOption] } : { ...x }))\r\n        setAllQuestions(val)\r\n\r\n\r\n    }\r\n\r\n\r\n    function handelOptionhange(e, index) {\r\n        let val = [...allQuestions]\r\n        let option = val[id].options\r\n        let updatedOption = option.map((x, i) => (i === index ? e.target.value : x))\r\n\r\n        val = val.map((x, i) => (i === id ? { ...x, options: updatedOption } : { ...x }))\r\n\r\n        setAllQuestions(val)\r\n\r\n        console.log(option)\r\n\r\n    }\r\n\r\n\r\n    if (!isactive) {\r\n        return <NotActiveQuestion data={data} id={id} isThisActive={isThisActive} height={textQuetionHeight} />\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <div className=\"flex flex-row container mx-auto justify-between my-4\">\r\n                <div className=\" relative w-full mx-auto border-l-8 rounded-lg   md:my-8 p-2  md:p-4 shadow-sm bg-white\" style={{ borderColor: color }}>\r\n                    <div className=\"flex\">\r\n                        <textarea\r\n                            rows=\"1\"\r\n                            cols=\"1\"\r\n                            class=\"bg-gray-100 p-4 inline appearance-none border rounded w-1/2 text-gray-700 leading-tight focus:outline-none focus:shadow-outline  overflow-hidden\"\r\n\r\n                            name=\"question\"\r\n                            value={data.question}\r\n                            style={{ height: textQuetionHeight, resize: \"none\" }}\r\n                            onChange={(e) => { autoGrow(e, id) }}\r\n                            type=\"text\"\r\n                            placeholder=\"Question\"\r\n                        />\r\n\r\n\r\n\r\n\r\n                        <span className=\"w-1/3 aline-center m-auto\">\r\n                            <div class=\"z-15 bg-gray-900 relative text-sm block w-full  rounded hover:bg-gray-800 py-1 px-4 text-gray-100\" onClick={() => { setIsOpen(!isOpen) }} name=\"questionType\" >\r\n                                {questionType}\r\n\r\n                                {isOpen ? <div class=\"absolute rounded mt-2 py-2 text-gray-900 bg-gray-200   shadow w-full inset-x-0 z-10\">\r\n                                    <span class=\"hover:bg-gray-200 z-15 text-left block px-4 py-1\" values=\"Checkbox\" onClick={(e) => { handelquestionType(\"Checkbox\", e) }} ><svg className=\"h-8 inline\" xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\r\n                                        <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth=\"2\" d=\"M9 12l2 2 4-4m6 2a9 9 0 11-18 0 9 9 0 0118 0z\" />\r\n                                    </svg> CheckBoxes</span>\r\n                                    <span class=\"hover:bg-gray-200 z-10 text-left block px-4 py-1\" values=\"Multiple Choice\" onClick={(e) => { handelquestionType(\"Multiple Choice\", e) }} ><svg className=\"h-8 inline\" xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\r\n                                        <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth=\"2\" d=\"M9 5H7a2 2 0 00-2 2v12a2 2 0 002 2h10a2 2 0 002-2V7a2 2 0 00-2-2h-2M9 5a2 2 0 002 2h2a2 2 0 002-2M9 5a2 2 0 012-2h2a2 2 0 012 2m-3 7h3m-3 4h3m-6-4h.01M9 16h.01\" />\r\n                                    </svg>Multiple Choice</span>\r\n                                    <span class=\"hover:bg-gray-200 z-10 text-left block px-4 py-1\" values=\"Short Answer\" onClick={(e) => { handelquestionType(\"Short Answer\", e) }} ><svg className=\"h-8 inline\" xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\r\n                                        <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth=\"2\" d=\"M7 8h10M7 12h4m1 8l-4-4H5a2 2 0 01-2-2V6a2 2 0 012-2h14a2 2 0 012 2v8a2 2 0 01-2 2h-3l-4 4z\" />\r\n                                    </svg>Short Answer</span>\r\n\r\n                                </div> : null}\r\n                            </div>\r\n\r\n                        </span>\r\n                    </div>\r\n                    {data.options.map((x, i) => {\r\n                        return <OptionBox removeOption={removeOption} data={x} index={i} key={i} handelOptionhange={handelOptionhange} length={data.options.length} />\r\n                    })}\r\n                    <button onClick={() => { addOption() }} className=\"cursor-pointer mx-8 hover:underline focus:outline-none\"><svg className=\"w-8 h-8 inline  \" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 20 20\" fill=\"currentColor\">\r\n                        <path fillRule=\"evenodd\" d=\"M10 5a1 1 0 011 1v3h3a1 1 0 110 2h-3v3a1 1 0 11-2 0v-3H6a1 1 0 110-2h3V6a1 1 0 011-1z\" clip-rule=\"evenodd\" />\r\n                    </svg>Add Another</button>\r\n                    <div><OperationBoxForQuestion value={value} id={id} data={data} /></div>\r\n                </div>\r\n\r\n                <FormToolBar value={value} isThisActive={isThisActive} />\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","D:\\Projects\\google-form\\src\\componants\\FormModule\\OptionBox.js",["214"],"import React from 'react'\r\nimport { OperationBoxForQuestion } from './OperationBoxForQuestion'\r\n\r\nexport const OptionBox = ({ removeOption, data, index, handelOptionhange, length }) => {\r\n    return (\r\n        <div class=\"p-2 flex w-full md:justify-between\">\r\n            <label class=\"custom-label p-2 flex w-full\">\r\n                <input type=\"checkbox\" class=\"hidden\" defaultChecked={false}\r\n                />\r\n\r\n\r\n                <div className=\" w-4 h-4  md:w-6 md:h-6 border inline-block align-center mx-2 md:mx-4 my-auto rounded-lg \">\r\n                </div>\r\n\r\n                <input type=\"text\" class=\"inline  outline-none border border-gray-400 rounded py-1 px-2 w-full md:w-2/3 bg-white text-sm text-gray-700 placeholder-gray-400 focus:outline-none focus:shadow-outline\" value={data} placeholder=\"Options\" onChange={(e) => { handelOptionhange(e, index) }} />\r\n            </label>\r\n\r\n\r\n            {length <= 1 ? null : <div className=\"  align-center mx-4 my-auto rounded-full p-2 md:p-4 hover:bg-gray-200 hover:text-red-600 \"\r\n                onClick={() => { removeOption(index) }}>\r\n\r\n                <svg className=\"md:w-8 w-4 text-gray-700 cursor-pointer hover:text-red-600 \" xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\r\n                    <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth=\"2\" d=\"M6 18L18 6M6 6l12 12\" />\r\n                </svg>\r\n            </div>}\r\n        </div>\r\n    )\r\n}\r\n","D:\\Projects\\google-form\\src\\componants\\FormModule\\OperationBoxForQuestion.js",["215"],"import React, { useState, USeEffect } from 'react'\r\n\r\nexport const OperationBoxForQuestion = ({ value, id, data }) => {\r\n    const { allQuestions, setAllQuestions } = value\r\n\r\n    const [required, setRequired] = useState(false)\r\n\r\n\r\n    function dublicateOne() {\r\n        setAllQuestions(allQuestions => {\r\n            return [...allQuestions, data]\r\n        })\r\n    }\r\n    function removeOne(index) {\r\n        let filteredQuestion = [...allQuestions]\r\n        filteredQuestion.splice(index, 1)\r\n        setAllQuestions(filteredQuestion)\r\n    }\r\n\r\n\r\n\r\n    function changeRequired(id) {\r\n        setRequired(!required)\r\n        let questionArray = [...allQuestions]\r\n        questionArray = questionArray.map((x, i) => (i === id ? { ...x, required: !required } : { ...x }))\r\n        setAllQuestions(questionArray)\r\n    }\r\n\r\n\r\n    console.log(allQuestions.length)\r\n    return (\r\n        <div className=\"flex justify-end\">\r\n            <div class=\"flex items-center cursor-pointer rounded-md hover:text-gray-900\" onClick={() => { dublicateOne() }}>\r\n                <span><svg class=\" text-gray-700 hover:text-gray-900 h-8 inline\" xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\r\n                    <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth=\"2\" d=\"M8 7v8a2 2 0 002 2h6M8 7V5a2 2 0 012-2h4.586a1 1 0 01.707.293l4.414 4.414a1 1 0 01.293.707V15a2 2 0 01-2 2h-2M8 7H6a2 2 0 00-2 2v10a2 2 0 002 2h8a2 2 0 002-2v-2\" />\r\n                </svg>Dublicate</span>\r\n\r\n\r\n            </div>\r\n            {allQuestions.length >= 2 ? <div class=\"flex items-center cursor-pointer rounded-md m-4\" onClick={() => { removeOne(id) }}>  <span class=\" text-red-300 hover:text-red-800  text-left  px-4 py-1\"  > <svg className=\"h-8 inline\" xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\r\n                <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth=\"2\" d=\"M19 7l-.867 12.142A2 2 0 0116.138 21H7.862a2 2 0 01-1.995-1.858L5 7m5 4v6m4-6v6m1-10V4a1 1 0 00-1-1h-4a1 1 0 00-1 1v3M4 7h16\" />\r\n            </svg>Delete</span></div> : \"\"}\r\n\r\n\r\n            <div class=\"m-4 flex items-center cursor-pointer rounded-md\">\r\n                <label\r\n\r\n                    class=\"flex items-center cursor-pointer\"\r\n                >\r\n                    <div class=\"relative\">\r\n                        <input id=\"toogleA\" type=\"checkbox\" class=\"hidden\" checked={required} onChange={() => { changeRequired(id) }} />\r\n                        <div\r\n                            class=\"toggle__line w-10 h-4 bg-gray-400 rounded-full shadow-inner\"\r\n                        ></div>\r\n                        <div\r\n                            class=\"toggle__dot absolute w-6 h-6 bg-white rounded-full shadow inset-y-0 left-0\"\r\n                        ></div>\r\n                    </div>\r\n                    <div\r\n                        class=\"ml-3 text-gray-700 font-medium\"\r\n                    >\r\n                        <span className={!required ? \"text-gray-700\" : \"text-green-700\"}>Required</span>\r\n                    </div>\r\n                </label>\r\n\r\n            </div>\r\n        </div>\r\n\r\n    )\r\n}\r\n","D:\\Projects\\google-form\\src\\componants\\FormModule\\FormToolBar.js",["216","217","218","219","220"],"D:\\Projects\\google-form\\src\\componants\\FormModule\\NotActiveQuestion.js",["221","222","223","224","225","226"],"import React, { useState } from 'react'\r\n\r\nexport const NotActiveQuestion = ({ data, id, isThisActive, height }) => {\r\n\r\n    const { idOfActiveQue, setidOfActiveQue } = isThisActive\r\n\r\n    const [questionArray, setquestionArray] = useState(data.options)\r\n\r\n\r\n    function setThisActive() {\r\n        setidOfActiveQue(id)\r\n        console.log(id)\r\n    }\r\n\r\n    const [options, setOptions] = useState(data.options)\r\n\r\n    return (\r\n        <div onClick={() => { setThisActive() }}>\r\n            <div className=\" relative container mx-auto rounded-lg   my-8  p-4 shadow-sm bg-white\">\r\n                <div className=\"flex\">\r\n                    <div class=\"p-4 inline appearance-none  rounded w-1/2 text-gray-800   overflow-hidden font-semibold\"\r\n\r\n\r\n                        style={{ height: height, resize: \"none\" }}\r\n\r\n\r\n                    >{data.question ? data.question : \"Question\"}</div>\r\n                    <span className=\"inline-flex align-center justify-center mx-4 p-2 rounded-full hover:bg-gray-300  \"><svg className=\"w-8 text-gray-700\" xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\r\n                        <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth=\"2\" d=\"M4 16l4.586-4.586a2 2 0 012.828 0L16 16m-2-2l1.586-1.586a2 2 0 012.828 0L20 14m-6-6h.01M6 20h12a2 2 0 002-2V6a2 2 0 00-2-2H6a2 2 0 00-2 2v12a2 2 0 002 2z\" />\r\n                    </svg></span>\r\n\r\n\r\n\r\n                    <span className=\"w-1/3 aline-center m-auto\">\r\n                        <div class=\"z-0 bg-gray-900 relative text-sm block w-full  rounded hover:bg-gray-800 py-1 px-4 text-gray-100\" name=\"questionType\" >\r\n                            {data.questiontype}\r\n\r\n\r\n                        </div>\r\n\r\n                    </span>\r\n                </div>\r\n\r\n                <div>\r\n\r\n                    <div className=\"mt-6\">\r\n\r\n\r\n\r\n\r\n                        {questionArray.map((items, index) => <Boxes key={index} index={index} values={items} questionType={data.questiontype} />)}\r\n\r\n\r\n\r\n                    </div >\r\n\r\n                </div>\r\n\r\n\r\n\r\n            </div >\r\n\r\n\r\n\r\n\r\n        </div >\r\n    )\r\n}\r\n\r\n\r\n\r\nconst Boxes = ({ values, questionType }) => {\r\n    const [checkboxValue, setCheckboxValue] = useState(false)\r\n\r\n\r\n\r\n    return (\r\n        <div class=\" my-auto p-2  outline-none mx-4  rounded py-1 px-2 w-2/3 bg-white text-sm text-gray-800  focus:outline-none focus:shadow-outline align-center flex flex-row justify-start align-center\" > <span className=\"w-6 h-6 border inline-block align-center mx-4 my-auto rounded-lg \">  </span ><span class=\"inline-flex justify-start align-center\">{values ? values : \"Option\"}</span></div >\r\n\r\n\r\n    )\r\n\r\n}","D:\\Projects\\google-form\\src\\componants\\FormModule\\SaveErrors.js",[],"D:\\Projects\\google-form\\src\\Context\\ErrorContext.js",[],{"ruleId":"227","replacedBy":"228"},{"ruleId":"229","replacedBy":"230"},{"ruleId":"231","severity":1,"message":"232","line":4,"column":30,"nodeType":"233","messageId":"234","endLine":4,"endColumn":40},{"ruleId":"231","severity":1,"message":"235","line":5,"column":20,"nodeType":"233","messageId":"234","endLine":5,"endColumn":30},{"ruleId":"236","severity":1,"message":"237","line":24,"column":9,"nodeType":"238","endLine":24,"endColumn":18,"suggestions":"239"},{"ruleId":"240","severity":1,"message":"241","line":41,"column":25,"nodeType":"242","endLine":44,"endColumn":27},{"ruleId":"243","severity":1,"message":"244","line":141,"column":17,"nodeType":"242","endLine":141,"endColumn":76},{"ruleId":"243","severity":1,"message":"244","line":145,"column":17,"nodeType":"242","endLine":145,"endColumn":76},{"ruleId":"231","severity":1,"message":"245","line":3,"column":22,"nodeType":"233","messageId":"234","endLine":3,"endColumn":28},{"ruleId":"231","severity":1,"message":"246","line":7,"column":25,"nodeType":"233","messageId":"234","endLine":7,"endColumn":39},{"ruleId":"231","severity":1,"message":"247","line":6,"column":12,"nodeType":"233","messageId":"234","endLine":6,"endColumn":18},{"ruleId":"231","severity":1,"message":"248","line":6,"column":20,"nodeType":"233","messageId":"234","endLine":6,"endColumn":29},{"ruleId":"231","severity":1,"message":"249","line":13,"column":23,"nodeType":"233","messageId":"234","endLine":13,"endColumn":35},{"ruleId":"231","severity":1,"message":"250","line":14,"column":26,"nodeType":"233","messageId":"234","endLine":14,"endColumn":41},{"ruleId":"236","severity":1,"message":"251","line":44,"column":8,"nodeType":"238","endLine":44,"endColumn":22,"suggestions":"252"},{"ruleId":"231","severity":1,"message":"253","line":7,"column":13,"nodeType":"233","messageId":"234","endLine":7,"endColumn":24},{"ruleId":"236","severity":1,"message":"254","line":36,"column":8,"nodeType":"238","endLine":36,"endColumn":10,"suggestions":"255"},{"ruleId":"231","severity":1,"message":"256","line":40,"column":12,"nodeType":"233","messageId":"234","endLine":40,"endColumn":24},{"ruleId":"231","severity":1,"message":"257","line":40,"column":26,"nodeType":"233","messageId":"234","endLine":40,"endColumn":41},{"ruleId":"231","severity":1,"message":"258","line":21,"column":23,"nodeType":"233","messageId":"234","endLine":21,"endColumn":35},{"ruleId":"259","severity":1,"message":"260","line":29,"column":25,"nodeType":"261","messageId":"262","endLine":29,"endColumn":27},{"ruleId":"231","severity":1,"message":"263","line":71,"column":13,"nodeType":"233","messageId":"234","endLine":71,"endColumn":24},{"ruleId":"231","severity":1,"message":"264","line":36,"column":22,"nodeType":"233","messageId":"234","endLine":36,"endColumn":33},{"ruleId":"231","severity":1,"message":"265","line":12,"column":11,"nodeType":"233","messageId":"234","endLine":12,"endColumn":13},{"ruleId":"236","severity":1,"message":"254","line":41,"column":8,"nodeType":"238","endLine":41,"endColumn":10,"suggestions":"266"},{"ruleId":"231","severity":1,"message":"256","line":43,"column":12,"nodeType":"233","messageId":"234","endLine":43,"endColumn":24},{"ruleId":"231","severity":1,"message":"257","line":43,"column":26,"nodeType":"233","messageId":"234","endLine":43,"endColumn":41},{"ruleId":"231","severity":1,"message":"267","line":1,"column":27,"nodeType":"233","messageId":"234","endLine":1,"endColumn":36},{"ruleId":"231","severity":1,"message":"268","line":3,"column":10,"nodeType":"233","messageId":"234","endLine":3,"endColumn":34},{"ruleId":"231","severity":1,"message":"258","line":56,"column":23,"nodeType":"233","messageId":"234","endLine":56,"endColumn":35},{"ruleId":"236","severity":1,"message":"269","line":58,"column":8,"nodeType":"238","endLine":58,"endColumn":22,"suggestions":"270"},{"ruleId":"231","severity":1,"message":"267","line":1,"column":27,"nodeType":"233","messageId":"234","endLine":1,"endColumn":36},{"ruleId":"231","severity":1,"message":"271","line":23,"column":26,"nodeType":"233","messageId":"234","endLine":23,"endColumn":41},{"ruleId":"231","severity":1,"message":"272","line":33,"column":22,"nodeType":"233","messageId":"234","endLine":33,"endColumn":33},{"ruleId":"231","severity":1,"message":"273","line":45,"column":13,"nodeType":"233","messageId":"234","endLine":45,"endColumn":21},{"ruleId":"231","severity":1,"message":"274","line":50,"column":17,"nodeType":"233","messageId":"234","endLine":50,"endColumn":31},{"ruleId":"231","severity":1,"message":"275","line":51,"column":19,"nodeType":"233","messageId":"234","endLine":51,"endColumn":35},{"ruleId":"231","severity":1,"message":"276","line":52,"column":17,"nodeType":"233","messageId":"234","endLine":52,"endColumn":26},{"ruleId":"236","severity":1,"message":"277","line":55,"column":8,"nodeType":"238","endLine":55,"endColumn":10,"suggestions":"278"},{"ruleId":"279","severity":1,"message":"280","line":57,"column":95,"nodeType":"281","messageId":"282","endLine":57,"endColumn":96},{"ruleId":"283","severity":1,"message":"284","line":24,"column":93,"nodeType":"285","endLine":24,"endColumn":100},{"ruleId":"231","severity":1,"message":"286","line":40,"column":12,"nodeType":"233","messageId":"234","endLine":40,"endColumn":20},{"ruleId":"231","severity":1,"message":"264","line":40,"column":22,"nodeType":"233","messageId":"234","endLine":40,"endColumn":33},{"ruleId":"231","severity":1,"message":"232","line":1,"column":27,"nodeType":"233","messageId":"234","endLine":1,"endColumn":37},{"ruleId":"231","severity":1,"message":"287","line":7,"column":23,"nodeType":"233","messageId":"234","endLine":7,"endColumn":35},{"ruleId":"231","severity":1,"message":"288","line":8,"column":29,"nodeType":"233","messageId":"234","endLine":8,"endColumn":47},{"ruleId":"231","severity":1,"message":"289","line":12,"column":28,"nodeType":"233","messageId":"234","endLine":12,"endColumn":44},{"ruleId":"259","severity":1,"message":"260","line":19,"column":34,"nodeType":"261","messageId":"262","endLine":19,"endColumn":36},{"ruleId":"259","severity":1,"message":"260","line":21,"column":35,"nodeType":"261","messageId":"262","endLine":21,"endColumn":37},{"ruleId":"236","severity":1,"message":"290","line":22,"column":8,"nodeType":"238","endLine":22,"endColumn":23,"suggestions":"291"},{"ruleId":"231","severity":1,"message":"292","line":27,"column":12,"nodeType":"233","messageId":"234","endLine":27,"endColumn":24},{"ruleId":"231","severity":1,"message":"293","line":27,"column":26,"nodeType":"233","messageId":"234","endLine":27,"endColumn":41},{"ruleId":"231","severity":1,"message":"294","line":2,"column":10,"nodeType":"233","messageId":"234","endLine":2,"endColumn":33},{"ruleId":"231","severity":1,"message":"295","line":1,"column":27,"nodeType":"233","messageId":"234","endLine":1,"endColumn":36},{"ruleId":"231","severity":1,"message":"296","line":16,"column":12,"nodeType":"233","messageId":"234","endLine":16,"endColumn":21},{"ruleId":"231","severity":1,"message":"297","line":17,"column":12,"nodeType":"233","messageId":"234","endLine":17,"endColumn":24},{"ruleId":"231","severity":1,"message":"298","line":21,"column":13,"nodeType":"233","messageId":"234","endLine":21,"endColumn":26},{"ruleId":"231","severity":1,"message":"299","line":24,"column":23,"nodeType":"233","messageId":"234","endLine":24,"endColumn":34},{"ruleId":"231","severity":1,"message":"300","line":170,"column":13,"nodeType":"233","messageId":"234","endLine":170,"endColumn":24},{"ruleId":"231","severity":1,"message":"298","line":5,"column":13,"nodeType":"233","messageId":"234","endLine":5,"endColumn":26},{"ruleId":"231","severity":1,"message":"301","line":7,"column":27,"nodeType":"233","messageId":"234","endLine":7,"endColumn":43},{"ruleId":"231","severity":1,"message":"302","line":15,"column":12,"nodeType":"233","messageId":"234","endLine":15,"endColumn":19},{"ruleId":"231","severity":1,"message":"303","line":15,"column":21,"nodeType":"233","messageId":"234","endLine":15,"endColumn":31},{"ruleId":"231","severity":1,"message":"304","line":73,"column":12,"nodeType":"233","messageId":"234","endLine":73,"endColumn":25},{"ruleId":"231","severity":1,"message":"305","line":73,"column":27,"nodeType":"233","messageId":"234","endLine":73,"endColumn":43},"no-native-reassign",["306"],"no-negated-in-lhs",["307"],"no-unused-vars","'useContext' is defined but never used.","Identifier","unusedVar","'useHistory' is defined but never used.","react-hooks/exhaustive-deps","React Hook useCallback has a missing dependency: 'login'. Either include it or remove the dependency array.","ArrayExpression",["308"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","'Router' is defined but never used.","'setformOptions' is assigned a value but never used.","'isOpen' is assigned a value but never used.","'setIsOpen' is assigned a value but never used.","'setshowError' is assigned a value but never used.","'seterrorMessage' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'setFormData'. Either include it or remove the dependency array.",["309"],"'currentUser' is assigned a value but never used.","React Hook React.useEffect has a missing dependency: 'thisID'. Either include it or remove the dependency array.",["310"],"'responceList' is assigned a value but never used.","'setResponceList' is assigned a value but never used.","'setquestions' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'showSideBar' is assigned a value but never used.","'setCheckBox' is assigned a value but never used.","'id' is assigned a value but never used.",["311"],"'useEffect' is defined but never used.","'SubmittedFormQuestionBox' is defined but never used.","React Hook React.useEffect has missing dependencies: 'index' and 'isSelected'. Either include them or remove the dependency array.",["312"],"'setResponsesArr' is assigned a value but never used.","'setTotalAns' is assigned a value but never used.","'chartarr' is assigned a value but never used.","'thisquesAnsArr' is assigned a value but never used.","'countOccurrences' is assigned a value but never used.","'thisarray' is assigned a value but never used.","React Hook React.useEffect has missing dependencies: 'data.content' and 'responsesArr'. Either include them or remove the dependency array.",["313"],"no-sequences","Unexpected use of comma operator.","SequenceExpression","unexpectedCommaExpression","react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","'checkBox' is assigned a value but never used.","'setFormTitle' is assigned a value but never used.","'setformDiscreption' is assigned a value but never used.","'setidOfActiveQue' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'id'. Either include it or remove the dependency array. If 'setIsactive' needs the current value of 'id', you can also switch to useReducer instead of useState and read 'id' in the reducer.",["314"],"'questionData' is assigned a value but never used.","'setquestionData' is assigned a value but never used.","'OperationBoxForQuestion' is defined but never used.","'USeEffect' is defined but never used.","'showError' is assigned a value but never used.","'errorMessage' is assigned a value but never used.","'idOfActiveQue' is assigned a value but never used.","'setFormData' is assigned a value but never used.","'saveWarning' is assigned a value but never used.","'setquestionArray' is assigned a value but never used.","'options' is assigned a value but never used.","'setOptions' is assigned a value but never used.","'checkboxValue' is assigned a value but never used.","'setCheckboxValue' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"315","fix":"316"},{"desc":"317","fix":"318"},{"desc":"319","fix":"320"},{"desc":"319","fix":"321"},{"desc":"322","fix":"323"},{"desc":"324","fix":"325"},{"desc":"326","fix":"327"},"Update the dependencies array to be: [history, login]",{"range":"328","text":"329"},"Update the dependencies array to be: [allQuestions, setFormData]",{"range":"330","text":"331"},"Update the dependencies array to be: [thisID]",{"range":"332","text":"333"},{"range":"334","text":"333"},"Update the dependencies array to be: [handelChange, index, isSelected]",{"range":"335","text":"336"},"Update the dependencies array to be: [data.content, responsesArr]",{"range":"337","text":"338"},"Update the dependencies array to be: [id, idOfActiveQue]",{"range":"339","text":"340"},[647,656],"[history, login]",[1207,1221],"[allQuestions, setFormData]",[901,903],"[thisID]",[954,956],[1716,1730],"[handelChange, index, isSelected]",[1567,1569],"[data.content, responsesArr]",[676,691],"[id, idOfActiveQue]"]